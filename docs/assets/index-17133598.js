(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))a(i);new MutationObserver(i=>{for(const o of i)if(o.type==="childList")for(const l of o.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&a(l)}).observe(document,{childList:!0,subtree:!0});function n(i){const o={};return i.integrity&&(o.integrity=i.integrity),i.referrerpolicy&&(o.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?o.credentials="include":i.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(i){if(i.ep)return;i.ep=!0;const o=n(i);fetch(i.href,o)}})();function qe(t,s){const n=Object.create(null),a=t.split(",");for(let i=0;i<a.length;i++)n[a[i]]=!0;return s?i=>!!n[i.toLowerCase()]:i=>!!n[i]}function Pe(t){if(E(t)){const s={};for(let n=0;n<t.length;n++){const a=t[n],i=s1(a)?Rt(a):Pe(a);if(i)for(const o in i)s[o]=i[o]}return s}else{if(s1(t))return t;if(V(t))return t}}const Ht=/;(?![^(]*\))/g,Ot=/:([^]+)/,It=/\/\*.*?\*\//gs;function Rt(t){const s={};return t.replace(It,"").split(Ht).forEach(n=>{if(n){const a=n.split(Ot);a.length>1&&(s[a[0].trim()]=a[1].trim())}}),s}function y2(t){let s="";if(s1(t))s=t;else if(E(t))for(let n=0;n<t.length;n++){const a=y2(t[n]);a&&(s+=a+" ")}else if(V(t))for(const n in t)t[n]&&(s+=n+" ");return s.trim()}const Bt="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",jt=qe(Bt);function H0(t){return!!t||t===""}const F1=t=>s1(t)?t:t==null?"":E(t)||V(t)&&(t.toString===B0||!Z(t.toString))?JSON.stringify(t,O0,2):String(t),O0=(t,s)=>s&&s.__v_isRef?O0(t,s.value):l2(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((n,[a,i])=>(n[`${a} =>`]=i,n),{})}:I0(s)?{[`Set(${s.size})`]:[...s.values()]}:V(s)&&!E(s)&&!j0(s)?String(s):s,W={},o2=[],k1=()=>{},Ut=()=>!1,Wt=/^on[^a-z]/,B2=t=>Wt.test(t),Te=t=>t.startsWith("onUpdate:"),l1=Object.assign,Ce=(t,s)=>{const n=t.indexOf(s);n>-1&&t.splice(n,1)},Vt=Object.prototype.hasOwnProperty,H=(t,s)=>Vt.call(t,s),E=Array.isArray,l2=t=>j2(t)==="[object Map]",I0=t=>j2(t)==="[object Set]",Z=t=>typeof t=="function",s1=t=>typeof t=="string",Ee=t=>typeof t=="symbol",V=t=>t!==null&&typeof t=="object",R0=t=>V(t)&&Z(t.then)&&Z(t.catch),B0=Object.prototype.toString,j2=t=>B0.call(t),Kt=t=>j2(t).slice(8,-1),j0=t=>j2(t)==="[object Object]",De=t=>s1(t)&&t!=="NaN"&&t[0]!=="-"&&""+parseInt(t,10)===t,T2=qe(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),U2=t=>{const s=Object.create(null);return n=>s[n]||(s[n]=t(n))},Jt=/-(\w)/g,d2=U2(t=>t.replace(Jt,(s,n)=>n?n.toUpperCase():"")),Xt=/\B([A-Z])/g,f2=U2(t=>t.replace(Xt,"-$1").toLowerCase()),U0=U2(t=>t.charAt(0).toUpperCase()+t.slice(1)),oe=U2(t=>t?`on${U0(t)}`:""),A2=(t,s)=>!Object.is(t,s),le=(t,s)=>{for(let n=0;n<t.length;n++)t[n](s)},H2=(t,s,n)=>{Object.defineProperty(t,s,{configurable:!0,enumerable:!1,value:n})},Yt=t=>{const s=parseFloat(t);return isNaN(s)?t:s};let Q0;const es=()=>Q0||(Q0=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});let y1;class ts{constructor(s=!1){this.detached=s,this._active=!0,this.effects=[],this.cleanups=[],this.parent=y1,!s&&y1&&(this.index=(y1.scopes||(y1.scopes=[])).push(this)-1)}get active(){return this._active}run(s){if(this._active){const n=y1;try{return y1=this,s()}finally{y1=n}}}on(){y1=this}off(){y1=this.parent}stop(s){if(this._active){let n,a;for(n=0,a=this.effects.length;n<a;n++)this.effects[n].stop();for(n=0,a=this.cleanups.length;n<a;n++)this.cleanups[n]();if(this.scopes)for(n=0,a=this.scopes.length;n<a;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!s){const i=this.parent.scopes.pop();i&&i!==this&&(this.parent.scopes[this.index]=i,i.index=this.index)}this.parent=void 0,this._active=!1}}}function ss(t,s=y1){s&&s.active&&s.effects.push(t)}function ns(){return y1}const Ze=t=>{const s=new Set(t);return s.w=0,s.n=0,s},W0=t=>(t.w&I1)>0,V0=t=>(t.n&I1)>0,as=({deps:t})=>{if(t.length)for(let s=0;s<t.length;s++)t[s].w|=I1},is=t=>{const{deps:s}=t;if(s.length){let n=0;for(let a=0;a<s.length;a++){const i=s[a];W0(i)&&!V0(i)?i.delete(t):s[n++]=i,i.w&=~I1,i.n&=~I1}s.length=n}},he=new WeakMap;let b2=0,I1=1;const ge=30;let v1;const Y1=Symbol(""),be=Symbol("");class Fe{constructor(s,n=null,a){this.fn=s,this.scheduler=n,this.active=!0,this.deps=[],this.parent=void 0,ss(this,a)}run(){if(!this.active)return this.fn();let s=v1,n=H1;for(;s;){if(s===this)return;s=s.parent}try{return this.parent=v1,v1=this,H1=!0,I1=1<<++b2,b2<=ge?as(this):u0(this),this.fn()}finally{b2<=ge&&is(this),I1=1<<--b2,v1=this.parent,H1=n,this.parent=void 0,this.deferStop&&this.stop()}}stop(){v1===this?this.deferStop=!0:this.active&&(u0(this),this.onStop&&this.onStop(),this.active=!1)}}function u0(t){const{deps:s}=t;if(s.length){for(let n=0;n<s.length;n++)s[n].delete(t);s.length=0}}let H1=!0;const K0=[];function Q2(){K0.push(H1),H1=!1}function u2(){const t=K0.pop();H1=t===void 0?!0:t}function Q1(t,s,n){if(H1&&v1){let a=he.get(t);a||he.set(t,a=new Map);let i=a.get(n);i||a.set(n,i=Ze()),J0(i)}}function J0(t,s){let n=!1;b2<=ge?V0(t)||(t.n|=I1,n=!W0(t)):n=!t.has(v1),n&&(t.add(v1),v1.deps.push(t))}function C1(t,s,n,a,i,o){const l=he.get(t);if(!l)return;let c=[];if(s==="clear")c=[...l.values()];else if(n==="length"&&E(t)){const h=Number(a);l.forEach((b,v)=>{(v==="length"||v>=h)&&c.push(b)})}else switch(n!==void 0&&c.push(l.get(n)),s){case"add":E(t)?De(n)&&c.push(l.get("length")):(c.push(l.get(Y1)),l2(t)&&c.push(l.get(be)));break;case"delete":E(t)||(c.push(l.get(Y1)),l2(t)&&c.push(l.get(be)));break;case"set":l2(t)&&c.push(l.get(Y1));break}if(c.length===1)c[0]&&me(c[0]);else{const h=[];for(const b of c)b&&h.push(...b);me(Ze(h))}}function me(t,s){const n=E(t)?t:[...t];for(const a of n)a.computed&&h0(a);for(const a of n)a.computed||h0(a)}function h0(t,s){(t!==v1||t.allowRecurse)&&(t.scheduler?t.scheduler():t.run())}const os=qe("__proto__,__v_isRef,__isVue"),X0=new Set(Object.getOwnPropertyNames(Symbol).filter(t=>t!=="arguments"&&t!=="caller").map(t=>Symbol[t]).filter(Ee)),ls=Ae(),rs=Ae(!1,!0),cs=Ae(!0),g0=ds();function ds(){const t={};return["includes","indexOf","lastIndexOf"].forEach(s=>{t[s]=function(...n){const a=O(this);for(let o=0,l=this.length;o<l;o++)Q1(a,"get",o+"");const i=a[s](...n);return i===-1||i===!1?a[s](...n.map(O)):i}}),["push","pop","shift","unshift","splice"].forEach(s=>{t[s]=function(...n){Q2();const a=O(this)[s].apply(this,n);return u2(),a}}),t}function ps(t){const s=O(this);return Q1(s,"has",t),s.hasOwnProperty(t)}function Ae(t=!1,s=!1){return function(a,i,o){if(i==="__v_isReactive")return!t;if(i==="__v_isReadonly")return t;if(i==="__v_isShallow")return s;if(i==="__v_raw"&&o===(t?s?Ls:nt:s?st:tt).get(a))return a;const l=E(a);if(!t){if(l&&H(g0,i))return Reflect.get(g0,i,o);if(i==="hasOwnProperty")return ps}const c=Reflect.get(a,i,o);return(Ee(i)?X0.has(i):os(i))||(t||Q1(a,"get",i),s)?c:d1(c)?l&&De(i)?c:c.value:V(c)?t?at(c):Ie(c):c}}const fs=Y0(),Qs=Y0(!0);function Y0(t=!1){return function(n,a,i,o){let l=n[a];if(v2(l)&&d1(l)&&!d1(i))return!1;if(!t&&(!_e(i)&&!v2(i)&&(l=O(l),i=O(i)),!E(n)&&d1(l)&&!d1(i)))return l.value=i,!0;const c=E(n)&&De(a)?Number(a)<n.length:H(n,a),h=Reflect.set(n,a,i,o);return n===O(o)&&(c?A2(i,l)&&C1(n,"set",a,i):C1(n,"add",a,i)),h}}function us(t,s){const n=H(t,s);t[s];const a=Reflect.deleteProperty(t,s);return a&&n&&C1(t,"delete",s,void 0),a}function hs(t,s){const n=Reflect.has(t,s);return(!Ee(s)||!X0.has(s))&&Q1(t,"has",s),n}function gs(t){return Q1(t,"iterate",E(t)?"length":Y1),Reflect.ownKeys(t)}const et={get:ls,set:fs,deleteProperty:us,has:hs,ownKeys:gs},bs={get:cs,set(t,s){return!0},deleteProperty(t,s){return!0}},ms=l1({},et,{get:rs,set:Qs}),He=t=>t,W2=t=>Reflect.getPrototypeOf(t);function w2(t,s,n=!1,a=!1){t=t.__v_raw;const i=O(t),o=O(s);n||(s!==o&&Q1(i,"get",s),Q1(i,"get",o));const{has:l}=W2(i),c=a?He:n?je:Be;if(l.call(i,s))return c(t.get(s));if(l.call(i,o))return c(t.get(o));t!==i&&t.get(s)}function G2(t,s=!1){const n=this.__v_raw,a=O(n),i=O(t);return s||(t!==i&&Q1(a,"has",t),Q1(a,"has",i)),t===i?n.has(t):n.has(t)||n.has(i)}function z2(t,s=!1){return t=t.__v_raw,!s&&Q1(O(t),"iterate",Y1),Reflect.get(t,"size",t)}function b0(t){t=O(t);const s=O(this);return W2(s).has.call(s,t)||(s.add(t),C1(s,"add",t,t)),this}function m0(t,s){s=O(s);const n=O(this),{has:a,get:i}=W2(n);let o=a.call(n,t);o||(t=O(t),o=a.call(n,t));const l=i.call(n,t);return n.set(t,s),o?A2(s,l)&&C1(n,"set",t,s):C1(n,"add",t,s),this}function _0(t){const s=O(this),{has:n,get:a}=W2(s);let i=n.call(s,t);i||(t=O(t),i=n.call(s,t)),a&&a.call(s,t);const o=s.delete(t);return i&&C1(s,"delete",t,void 0),o}function y0(){const t=O(this),s=t.size!==0,n=t.clear();return s&&C1(t,"clear",void 0,void 0),n}function N2(t,s){return function(a,i){const o=this,l=o.__v_raw,c=O(l),h=s?He:t?je:Be;return!t&&Q1(c,"iterate",Y1),l.forEach((b,v)=>a.call(i,h(b),h(v),o))}}function q2(t,s,n){return function(...a){const i=this.__v_raw,o=O(i),l=l2(o),c=t==="entries"||t===Symbol.iterator&&l,h=t==="keys"&&l,b=i[t](...a),v=n?He:s?je:Be;return!s&&Q1(o,"iterate",h?be:Y1),{next(){const{value:M,done:w}=b.next();return w?{value:M,done:w}:{value:c?[v(M[0]),v(M[1])]:v(M),done:w}},[Symbol.iterator](){return this}}}}function Z1(t){return function(...s){return t==="delete"?!1:this}}function _s(){const t={get(o){return w2(this,o)},get size(){return z2(this)},has:G2,add:b0,set:m0,delete:_0,clear:y0,forEach:N2(!1,!1)},s={get(o){return w2(this,o,!1,!0)},get size(){return z2(this)},has:G2,add:b0,set:m0,delete:_0,clear:y0,forEach:N2(!1,!0)},n={get(o){return w2(this,o,!0)},get size(){return z2(this,!0)},has(o){return G2.call(this,o,!0)},add:Z1("add"),set:Z1("set"),delete:Z1("delete"),clear:Z1("clear"),forEach:N2(!0,!1)},a={get(o){return w2(this,o,!0,!0)},get size(){return z2(this,!0)},has(o){return G2.call(this,o,!0)},add:Z1("add"),set:Z1("set"),delete:Z1("delete"),clear:Z1("clear"),forEach:N2(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{t[o]=q2(o,!1,!1),n[o]=q2(o,!0,!1),s[o]=q2(o,!1,!0),a[o]=q2(o,!0,!0)}),[t,n,s,a]}const[ys,vs,xs,$s]=_s();function Oe(t,s){const n=s?t?$s:xs:t?vs:ys;return(a,i,o)=>i==="__v_isReactive"?!t:i==="__v_isReadonly"?t:i==="__v_raw"?a:Reflect.get(H(n,i)&&i in a?n:a,i,o)}const ks={get:Oe(!1,!1)},Ss={get:Oe(!1,!0)},Ms={get:Oe(!0,!1)},tt=new WeakMap,st=new WeakMap,nt=new WeakMap,Ls=new WeakMap;function ws(t){switch(t){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Gs(t){return t.__v_skip||!Object.isExtensible(t)?0:ws(Kt(t))}function Ie(t){return v2(t)?t:Re(t,!1,et,ks,tt)}function zs(t){return Re(t,!1,ms,Ss,st)}function at(t){return Re(t,!0,bs,Ms,nt)}function Re(t,s,n,a,i){if(!V(t)||t.__v_raw&&!(s&&t.__v_isReactive))return t;const o=i.get(t);if(o)return o;const l=Gs(t);if(l===0)return t;const c=new Proxy(t,l===2?a:n);return i.set(t,c),c}function r2(t){return v2(t)?r2(t.__v_raw):!!(t&&t.__v_isReactive)}function v2(t){return!!(t&&t.__v_isReadonly)}function _e(t){return!!(t&&t.__v_isShallow)}function it(t){return r2(t)||v2(t)}function O(t){const s=t&&t.__v_raw;return s?O(s):t}function ot(t){return H2(t,"__v_skip",!0),t}const Be=t=>V(t)?Ie(t):t,je=t=>V(t)?at(t):t;function Ns(t){H1&&v1&&(t=O(t),J0(t.dep||(t.dep=Ze())))}function qs(t,s){t=O(t);const n=t.dep;n&&me(n)}function d1(t){return!!(t&&t.__v_isRef===!0)}function Ps(t){return d1(t)?t.value:t}const Ts={get:(t,s,n)=>Ps(Reflect.get(t,s,n)),set:(t,s,n,a)=>{const i=t[s];return d1(i)&&!d1(n)?(i.value=n,!0):Reflect.set(t,s,n,a)}};function lt(t){return r2(t)?t:new Proxy(t,Ts)}var rt;class Cs{constructor(s,n,a,i){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this[rt]=!1,this._dirty=!0,this.effect=new Fe(s,()=>{this._dirty||(this._dirty=!0,qs(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!i,this.__v_isReadonly=a}get value(){const s=O(this);return Ns(s),(s._dirty||!s._cacheable)&&(s._dirty=!1,s._value=s.effect.run()),s._value}set value(s){this._setter(s)}}rt="__v_isReadonly";function Es(t,s,n=!1){let a,i;const o=Z(t);return o?(a=t,i=k1):(a=t.get,i=t.set),new Cs(a,i,o||!i,n)}function O1(t,s,n,a){let i;try{i=a?t(...a):t()}catch(o){V2(o,s,n)}return i}function m1(t,s,n,a){if(Z(t)){const o=O1(t,s,n,a);return o&&R0(o)&&o.catch(l=>{V2(l,s,n)}),o}const i=[];for(let o=0;o<t.length;o++)i.push(m1(t[o],s,n,a));return i}function V2(t,s,n,a=!0){const i=s?s.vnode:null;if(s){let o=s.parent;const l=s.proxy,c=n;for(;o;){const b=o.ec;if(b){for(let v=0;v<b.length;v++)if(b[v](t,l,c)===!1)return}o=o.parent}const h=s.appContext.config.errorHandler;if(h){O1(h,null,10,[t,l,c]);return}}Ds(t,n,i,a)}function Ds(t,s,n,a=!0){console.error(t)}let x2=!1,ye=!1;const o1=[];let z1=0;const c2=[];let P1=null,K1=0;const ct=Promise.resolve();let Ue=null;function Zs(t){const s=Ue||ct;return t?s.then(this?t.bind(this):t):s}function Fs(t){let s=z1+1,n=o1.length;for(;s<n;){const a=s+n>>>1;$2(o1[a])<t?s=a+1:n=a}return s}function We(t){(!o1.length||!o1.includes(t,x2&&t.allowRecurse?z1+1:z1))&&(t.id==null?o1.push(t):o1.splice(Fs(t.id),0,t),dt())}function dt(){!x2&&!ye&&(ye=!0,Ue=ct.then(ft))}function As(t){const s=o1.indexOf(t);s>z1&&o1.splice(s,1)}function Hs(t){E(t)?c2.push(...t):(!P1||!P1.includes(t,t.allowRecurse?K1+1:K1))&&c2.push(t),dt()}function v0(t,s=x2?z1+1:0){for(;s<o1.length;s++){const n=o1[s];n&&n.pre&&(o1.splice(s,1),s--,n())}}function pt(t){if(c2.length){const s=[...new Set(c2)];if(c2.length=0,P1){P1.push(...s);return}for(P1=s,P1.sort((n,a)=>$2(n)-$2(a)),K1=0;K1<P1.length;K1++)P1[K1]();P1=null,K1=0}}const $2=t=>t.id==null?1/0:t.id,Os=(t,s)=>{const n=$2(t)-$2(s);if(n===0){if(t.pre&&!s.pre)return-1;if(s.pre&&!t.pre)return 1}return n};function ft(t){ye=!1,x2=!0,o1.sort(Os);const s=k1;try{for(z1=0;z1<o1.length;z1++){const n=o1[z1];n&&n.active!==!1&&O1(n,null,14)}}finally{z1=0,o1.length=0,pt(),x2=!1,Ue=null,(o1.length||c2.length)&&ft()}}function Is(t,s,...n){if(t.isUnmounted)return;const a=t.vnode.props||W;let i=n;const o=s.startsWith("update:"),l=o&&s.slice(7);if(l&&l in a){const v=`${l==="modelValue"?"model":l}Modifiers`,{number:M,trim:w}=a[v]||W;w&&(i=n.map(C=>s1(C)?C.trim():C)),M&&(i=n.map(Yt))}let c,h=a[c=oe(s)]||a[c=oe(d2(s))];!h&&o&&(h=a[c=oe(f2(s))]),h&&m1(h,t,6,i);const b=a[c+"Once"];if(b){if(!t.emitted)t.emitted={};else if(t.emitted[c])return;t.emitted[c]=!0,m1(b,t,6,i)}}function Qt(t,s,n=!1){const a=s.emitsCache,i=a.get(t);if(i!==void 0)return i;const o=t.emits;let l={},c=!1;if(!Z(t)){const h=b=>{const v=Qt(b,s,!0);v&&(c=!0,l1(l,v))};!n&&s.mixins.length&&s.mixins.forEach(h),t.extends&&h(t.extends),t.mixins&&t.mixins.forEach(h)}return!o&&!c?(V(t)&&a.set(t,null),null):(E(o)?o.forEach(h=>l[h]=null):l1(l,o),V(t)&&a.set(t,l),l)}function K2(t,s){return!t||!B2(s)?!1:(s=s.slice(2).replace(/Once$/,""),H(t,s[0].toLowerCase()+s.slice(1))||H(t,f2(s))||H(t,s))}let x1=null,J2=null;function O2(t){const s=x1;return x1=t,J2=t&&t.type.__scopeId||null,s}function Ve(t){J2=t}function Ke(){J2=null}function Rs(t,s=x1,n){if(!s||t._n)return t;const a=(...i)=>{a._d&&z0(-1);const o=O2(s);let l;try{l=t(...i)}finally{O2(o),a._d&&z0(1)}return l};return a._n=!0,a._c=!0,a._d=!0,a}function re(t){const{type:s,vnode:n,proxy:a,withProxy:i,props:o,propsOptions:[l],slots:c,attrs:h,emit:b,render:v,renderCache:M,data:w,setupState:C,ctx:I,inheritAttrs:P}=t;let Y,B;const g1=O2(t);try{if(n.shapeFlag&4){const K=i||a;Y=G1(v.call(K,K,M,o,C,w,I)),B=h}else{const K=s;Y=G1(K.length>1?K(o,{attrs:h,slots:c,emit:b}):K(o,null)),B=s.props?h:Bs(h)}}catch(K){_2.length=0,V2(K,t,1),Y=d(T1)}let D=Y;if(B&&P!==!1){const K=Object.keys(B),{shapeFlag:a1}=D;K.length&&a1&7&&(l&&K.some(Te)&&(B=js(B,l)),D=R1(D,B))}return n.dirs&&(D=R1(D),D.dirs=D.dirs?D.dirs.concat(n.dirs):n.dirs),n.transition&&(D.transition=n.transition),Y=D,O2(g1),Y}const Bs=t=>{let s;for(const n in t)(n==="class"||n==="style"||B2(n))&&((s||(s={}))[n]=t[n]);return s},js=(t,s)=>{const n={};for(const a in t)(!Te(a)||!(a.slice(9)in s))&&(n[a]=t[a]);return n};function Us(t,s,n){const{props:a,children:i,component:o}=t,{props:l,children:c,patchFlag:h}=s,b=o.emitsOptions;if(s.dirs||s.transition)return!0;if(n&&h>=0){if(h&1024)return!0;if(h&16)return a?x0(a,l,b):!!l;if(h&8){const v=s.dynamicProps;for(let M=0;M<v.length;M++){const w=v[M];if(l[w]!==a[w]&&!K2(b,w))return!0}}}else return(i||c)&&(!c||!c.$stable)?!0:a===l?!1:a?l?x0(a,l,b):!0:!!l;return!1}function x0(t,s,n){const a=Object.keys(s);if(a.length!==Object.keys(t).length)return!0;for(let i=0;i<a.length;i++){const o=a[i];if(s[o]!==t[o]&&!K2(n,o))return!0}return!1}function Ws({vnode:t,parent:s},n){for(;s&&s.subTree===t;)(t=s.vnode).el=n,s=s.parent}const Vs=t=>t.__isSuspense;function Ks(t,s){s&&s.pendingBranch?E(t)?s.effects.push(...t):s.effects.push(t):Hs(t)}function Js(t,s){if(t1){let n=t1.provides;const a=t1.parent&&t1.parent.provides;a===n&&(n=t1.provides=Object.create(a)),n[t]=s}}function C2(t,s,n=!1){const a=t1||x1;if(a){const i=a.parent==null?a.vnode.appContext&&a.vnode.appContext.provides:a.parent.provides;if(i&&t in i)return i[t];if(arguments.length>1)return n&&Z(s)?s.call(a.proxy):s}}const P2={};function ce(t,s,n){return ut(t,s,n)}function ut(t,s,{immediate:n,deep:a,flush:i,onTrack:o,onTrigger:l}=W){const c=ns()===(t1==null?void 0:t1.scope)?t1:null;let h,b=!1,v=!1;if(d1(t)?(h=()=>t.value,b=_e(t)):r2(t)?(h=()=>t,a=!0):E(t)?(v=!0,b=t.some(D=>r2(D)||_e(D)),h=()=>t.map(D=>{if(d1(D))return D.value;if(r2(D))return i2(D);if(Z(D))return O1(D,c,2)})):Z(t)?s?h=()=>O1(t,c,2):h=()=>{if(!(c&&c.isUnmounted))return M&&M(),m1(t,c,3,[w])}:h=k1,s&&a){const D=h;h=()=>i2(D())}let M,w=D=>{M=B.onStop=()=>{O1(D,c,4)}},C;if(S2)if(w=k1,s?n&&m1(s,c,3,[h(),v?[]:void 0,w]):h(),i==="sync"){const D=U5();C=D.__watcherHandles||(D.__watcherHandles=[])}else return k1;let I=v?new Array(t.length).fill(P2):P2;const P=()=>{if(B.active)if(s){const D=B.run();(a||b||(v?D.some((K,a1)=>A2(K,I[a1])):A2(D,I)))&&(M&&M(),m1(s,c,3,[D,I===P2?void 0:v&&I[0]===P2?[]:I,w]),I=D)}else B.run()};P.allowRecurse=!!s;let Y;i==="sync"?Y=P:i==="post"?Y=()=>p1(P,c&&c.suspense):(P.pre=!0,c&&(P.id=c.uid),Y=()=>We(P));const B=new Fe(h,Y);s?n?P():I=B.run():i==="post"?p1(B.run.bind(B),c&&c.suspense):B.run();const g1=()=>{B.stop(),c&&c.scope&&Ce(c.scope.effects,B)};return C&&C.push(g1),g1}function Xs(t,s,n){const a=this.proxy,i=s1(t)?t.includes(".")?ht(a,t):()=>a[t]:t.bind(a,a);let o;Z(s)?o=s:(o=s.handler,n=s);const l=t1;p2(this);const c=ut(i,o.bind(a),n);return l?p2(l):e2(),c}function ht(t,s){const n=s.split(".");return()=>{let a=t;for(let i=0;i<n.length&&a;i++)a=a[n[i]];return a}}function i2(t,s){if(!V(t)||t.__v_skip||(s=s||new Set,s.has(t)))return t;if(s.add(t),d1(t))i2(t.value,s);else if(E(t))for(let n=0;n<t.length;n++)i2(t[n],s);else if(I0(t)||l2(t))t.forEach(n=>{i2(n,s)});else if(j0(t))for(const n in t)i2(t[n],s);return t}function Ys(){const t={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return _t(()=>{t.isMounted=!0}),yt(()=>{t.isUnmounting=!0}),t}const b1=[Function,Array],e5={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:b1,onEnter:b1,onAfterEnter:b1,onEnterCancelled:b1,onBeforeLeave:b1,onLeave:b1,onAfterLeave:b1,onLeaveCancelled:b1,onBeforeAppear:b1,onAppear:b1,onAfterAppear:b1,onAppearCancelled:b1},setup(t,{slots:s}){const n=F5(),a=Ys();let i;return()=>{const o=s.default&&bt(s.default(),!0);if(!o||!o.length)return;let l=o[0];if(o.length>1){for(const P of o)if(P.type!==T1){l=P;break}}const c=O(t),{mode:h}=c;if(a.isLeaving)return de(l);const b=$0(l);if(!b)return de(l);const v=ve(b,c,a,n);xe(b,v);const M=n.subTree,w=M&&$0(M);let C=!1;const{getTransitionKey:I}=b.type;if(I){const P=I();i===void 0?i=P:P!==i&&(i=P,C=!0)}if(w&&w.type!==T1&&(!J1(b,w)||C)){const P=ve(w,c,a,n);if(xe(w,P),h==="out-in")return a.isLeaving=!0,P.afterLeave=()=>{a.isLeaving=!1,n.update.active!==!1&&n.update()},de(l);h==="in-out"&&b.type!==T1&&(P.delayLeave=(Y,B,g1)=>{const D=gt(a,w);D[String(w.key)]=w,Y._leaveCb=()=>{B(),Y._leaveCb=void 0,delete v.delayedLeave},v.delayedLeave=g1})}return l}}},t5=e5;function gt(t,s){const{leavingVNodes:n}=t;let a=n.get(s.type);return a||(a=Object.create(null),n.set(s.type,a)),a}function ve(t,s,n,a){const{appear:i,mode:o,persisted:l=!1,onBeforeEnter:c,onEnter:h,onAfterEnter:b,onEnterCancelled:v,onBeforeLeave:M,onLeave:w,onAfterLeave:C,onLeaveCancelled:I,onBeforeAppear:P,onAppear:Y,onAfterAppear:B,onAppearCancelled:g1}=s,D=String(t.key),K=gt(n,t),a1=(F,n1)=>{F&&m1(F,a,9,n1)},s2=(F,n1)=>{const J=n1[1];a1(F,n1),E(F)?F.every(u1=>u1.length<=1)&&J():F.length<=1&&J()},D1={mode:o,persisted:l,beforeEnter(F){let n1=c;if(!n.isMounted)if(i)n1=P||c;else return;F._leaveCb&&F._leaveCb(!0);const J=K[D];J&&J1(t,J)&&J.el._leaveCb&&J.el._leaveCb(),a1(n1,[F])},enter(F){let n1=h,J=b,u1=v;if(!n.isMounted)if(i)n1=Y||h,J=B||b,u1=g1||v;else return;let S1=!1;const N1=F._enterCb=h2=>{S1||(S1=!0,h2?a1(u1,[F]):a1(J,[F]),D1.delayedLeave&&D1.delayedLeave(),F._enterCb=void 0)};n1?s2(n1,[F,N1]):N1()},leave(F,n1){const J=String(t.key);if(F._enterCb&&F._enterCb(!0),n.isUnmounting)return n1();a1(M,[F]);let u1=!1;const S1=F._leaveCb=N1=>{u1||(u1=!0,n1(),N1?a1(I,[F]):a1(C,[F]),F._leaveCb=void 0,K[J]===t&&delete K[J])};K[J]=t,w?s2(w,[F,S1]):S1()},clone(F){return ve(F,s,n,a)}};return D1}function de(t){if(X2(t))return t=R1(t),t.children=null,t}function $0(t){return X2(t)?t.children?t.children[0]:void 0:t}function xe(t,s){t.shapeFlag&6&&t.component?xe(t.component.subTree,s):t.shapeFlag&128?(t.ssContent.transition=s.clone(t.ssContent),t.ssFallback.transition=s.clone(t.ssFallback)):t.transition=s}function bt(t,s=!1,n){let a=[],i=0;for(let o=0;o<t.length;o++){let l=t[o];const c=n==null?l.key:String(n)+String(l.key!=null?l.key:o);l.type===i1?(l.patchFlag&128&&i++,a=a.concat(bt(l.children,s,c))):(s||l.type!==T1)&&a.push(c!=null?R1(l,{key:c}):l)}if(i>1)for(let o=0;o<a.length;o++)a[o].patchFlag=-2;return a}const E2=t=>!!t.type.__asyncLoader,X2=t=>t.type.__isKeepAlive;function s5(t,s){mt(t,"a",s)}function n5(t,s){mt(t,"da",s)}function mt(t,s,n=t1){const a=t.__wdc||(t.__wdc=()=>{let i=n;for(;i;){if(i.isDeactivated)return;i=i.parent}return t()});if(Y2(s,a,n),n){let i=n.parent;for(;i&&i.parent;)X2(i.parent.vnode)&&a5(a,s,n,i),i=i.parent}}function a5(t,s,n,a){const i=Y2(s,t,a,!0);vt(()=>{Ce(a[s],i)},n)}function Y2(t,s,n=t1,a=!1){if(n){const i=n[t]||(n[t]=[]),o=s.__weh||(s.__weh=(...l)=>{if(n.isUnmounted)return;Q2(),p2(n);const c=m1(s,n,t,l);return e2(),u2(),c});return a?i.unshift(o):i.push(o),o}}const E1=t=>(s,n=t1)=>(!S2||t==="sp")&&Y2(t,(...a)=>s(...a),n),i5=E1("bm"),_t=E1("m"),o5=E1("bu"),l5=E1("u"),yt=E1("bum"),vt=E1("um"),r5=E1("sp"),c5=E1("rtg"),d5=E1("rtc");function p5(t,s=t1){Y2("ec",t,s)}function U1(t,s,n,a){const i=t.dirs,o=s&&s.dirs;for(let l=0;l<i.length;l++){const c=i[l];o&&(c.oldValue=o[l].value);let h=c.dir[a];h&&(Q2(),m1(h,n,8,[t.el,c,t,s]),u2())}}const f5=Symbol();function D2(t,s,n,a){let i;const o=n&&n[a];if(E(t)||s1(t)){i=new Array(t.length);for(let l=0,c=t.length;l<c;l++)i[l]=s(t[l],l,void 0,o&&o[l])}else if(typeof t=="number"){i=new Array(t);for(let l=0;l<t;l++)i[l]=s(l+1,l,void 0,o&&o[l])}else if(V(t))if(t[Symbol.iterator])i=Array.from(t,(l,c)=>s(l,c,void 0,o&&o[c]));else{const l=Object.keys(t);i=new Array(l.length);for(let c=0,h=l.length;c<h;c++){const b=l[c];i[c]=s(t[b],b,c,o&&o[c])}}else i=[];return n&&(n[a]=i),i}const $e=t=>t?Nt(t)?e0(t)||t.proxy:$e(t.parent):null,m2=l1(Object.create(null),{$:t=>t,$el:t=>t.vnode.el,$data:t=>t.data,$props:t=>t.props,$attrs:t=>t.attrs,$slots:t=>t.slots,$refs:t=>t.refs,$parent:t=>$e(t.parent),$root:t=>$e(t.root),$emit:t=>t.emit,$options:t=>Je(t),$forceUpdate:t=>t.f||(t.f=()=>We(t.update)),$nextTick:t=>t.n||(t.n=Zs.bind(t.proxy)),$watch:t=>Xs.bind(t)}),pe=(t,s)=>t!==W&&!t.__isScriptSetup&&H(t,s),Q5={get({_:t},s){const{ctx:n,setupState:a,data:i,props:o,accessCache:l,type:c,appContext:h}=t;let b;if(s[0]!=="$"){const C=l[s];if(C!==void 0)switch(C){case 1:return a[s];case 2:return i[s];case 4:return n[s];case 3:return o[s]}else{if(pe(a,s))return l[s]=1,a[s];if(i!==W&&H(i,s))return l[s]=2,i[s];if((b=t.propsOptions[0])&&H(b,s))return l[s]=3,o[s];if(n!==W&&H(n,s))return l[s]=4,n[s];ke&&(l[s]=0)}}const v=m2[s];let M,w;if(v)return s==="$attrs"&&Q1(t,"get",s),v(t);if((M=c.__cssModules)&&(M=M[s]))return M;if(n!==W&&H(n,s))return l[s]=4,n[s];if(w=h.config.globalProperties,H(w,s))return w[s]},set({_:t},s,n){const{data:a,setupState:i,ctx:o}=t;return pe(i,s)?(i[s]=n,!0):a!==W&&H(a,s)?(a[s]=n,!0):H(t.props,s)||s[0]==="$"&&s.slice(1)in t?!1:(o[s]=n,!0)},has({_:{data:t,setupState:s,accessCache:n,ctx:a,appContext:i,propsOptions:o}},l){let c;return!!n[l]||t!==W&&H(t,l)||pe(s,l)||(c=o[0])&&H(c,l)||H(a,l)||H(m2,l)||H(i.config.globalProperties,l)},defineProperty(t,s,n){return n.get!=null?t._.accessCache[s]=0:H(n,"value")&&this.set(t,s,n.value,null),Reflect.defineProperty(t,s,n)}};let ke=!0;function u5(t){const s=Je(t),n=t.proxy,a=t.ctx;ke=!1,s.beforeCreate&&k0(s.beforeCreate,t,"bc");const{data:i,computed:o,methods:l,watch:c,provide:h,inject:b,created:v,beforeMount:M,mounted:w,beforeUpdate:C,updated:I,activated:P,deactivated:Y,beforeDestroy:B,beforeUnmount:g1,destroyed:D,unmounted:K,render:a1,renderTracked:s2,renderTriggered:D1,errorCaptured:F,serverPrefetch:n1,expose:J,inheritAttrs:u1,components:S1,directives:N1,filters:h2}=s;if(b&&h5(b,a,null,t.appContext.config.unwrapInjectedRef),l)for(const X in l){const j=l[X];Z(j)&&(a[X]=j.bind(n))}if(i){const X=i.call(n,n);V(X)&&(t.data=Ie(X))}if(ke=!0,o)for(const X in o){const j=o[X],B1=Z(j)?j.bind(n,n):Z(j.get)?j.get.bind(n,n):k1,M2=!Z(j)&&Z(j.set)?j.set.bind(n):k1,j1=B5({get:B1,set:M2});Object.defineProperty(a,X,{enumerable:!0,configurable:!0,get:()=>j1.value,set:M1=>j1.value=M1})}if(c)for(const X in c)xt(c[X],a,n,X);if(h){const X=Z(h)?h.call(n):h;Reflect.ownKeys(X).forEach(j=>{Js(j,X[j])})}v&&k0(v,t,"c");function r1(X,j){E(j)?j.forEach(B1=>X(B1.bind(n))):j&&X(j.bind(n))}if(r1(i5,M),r1(_t,w),r1(o5,C),r1(l5,I),r1(s5,P),r1(n5,Y),r1(p5,F),r1(d5,s2),r1(c5,D1),r1(yt,g1),r1(vt,K),r1(r5,n1),E(J))if(J.length){const X=t.exposed||(t.exposed={});J.forEach(j=>{Object.defineProperty(X,j,{get:()=>n[j],set:B1=>n[j]=B1})})}else t.exposed||(t.exposed={});a1&&t.render===k1&&(t.render=a1),u1!=null&&(t.inheritAttrs=u1),S1&&(t.components=S1),N1&&(t.directives=N1)}function h5(t,s,n=k1,a=!1){E(t)&&(t=Se(t));for(const i in t){const o=t[i];let l;V(o)?"default"in o?l=C2(o.from||i,o.default,!0):l=C2(o.from||i):l=C2(o),d1(l)&&a?Object.defineProperty(s,i,{enumerable:!0,configurable:!0,get:()=>l.value,set:c=>l.value=c}):s[i]=l}}function k0(t,s,n){m1(E(t)?t.map(a=>a.bind(s.proxy)):t.bind(s.proxy),s,n)}function xt(t,s,n,a){const i=a.includes(".")?ht(n,a):()=>n[a];if(s1(t)){const o=s[t];Z(o)&&ce(i,o)}else if(Z(t))ce(i,t.bind(n));else if(V(t))if(E(t))t.forEach(o=>xt(o,s,n,a));else{const o=Z(t.handler)?t.handler.bind(n):s[t.handler];Z(o)&&ce(i,o,t)}}function Je(t){const s=t.type,{mixins:n,extends:a}=s,{mixins:i,optionsCache:o,config:{optionMergeStrategies:l}}=t.appContext,c=o.get(s);let h;return c?h=c:!i.length&&!n&&!a?h=s:(h={},i.length&&i.forEach(b=>I2(h,b,l,!0)),I2(h,s,l)),V(s)&&o.set(s,h),h}function I2(t,s,n,a=!1){const{mixins:i,extends:o}=s;o&&I2(t,o,n,!0),i&&i.forEach(l=>I2(t,l,n,!0));for(const l in s)if(!(a&&l==="expose")){const c=g5[l]||n&&n[l];t[l]=c?c(t[l],s[l]):s[l]}return t}const g5={data:S0,props:V1,emits:V1,methods:V1,computed:V1,beforeCreate:c1,created:c1,beforeMount:c1,mounted:c1,beforeUpdate:c1,updated:c1,beforeDestroy:c1,beforeUnmount:c1,destroyed:c1,unmounted:c1,activated:c1,deactivated:c1,errorCaptured:c1,serverPrefetch:c1,components:V1,directives:V1,watch:m5,provide:S0,inject:b5};function S0(t,s){return s?t?function(){return l1(Z(t)?t.call(this,this):t,Z(s)?s.call(this,this):s)}:s:t}function b5(t,s){return V1(Se(t),Se(s))}function Se(t){if(E(t)){const s={};for(let n=0;n<t.length;n++)s[t[n]]=t[n];return s}return t}function c1(t,s){return t?[...new Set([].concat(t,s))]:s}function V1(t,s){return t?l1(l1(Object.create(null),t),s):s}function m5(t,s){if(!t)return s;if(!s)return t;const n=l1(Object.create(null),t);for(const a in s)n[a]=c1(t[a],s[a]);return n}function _5(t,s,n,a=!1){const i={},o={};H2(o,te,1),t.propsDefaults=Object.create(null),$t(t,s,i,o);for(const l in t.propsOptions[0])l in i||(i[l]=void 0);n?t.props=a?i:zs(i):t.type.props?t.props=i:t.props=o,t.attrs=o}function y5(t,s,n,a){const{props:i,attrs:o,vnode:{patchFlag:l}}=t,c=O(i),[h]=t.propsOptions;let b=!1;if((a||l>0)&&!(l&16)){if(l&8){const v=t.vnode.dynamicProps;for(let M=0;M<v.length;M++){let w=v[M];if(K2(t.emitsOptions,w))continue;const C=s[w];if(h)if(H(o,w))C!==o[w]&&(o[w]=C,b=!0);else{const I=d2(w);i[I]=Me(h,c,I,C,t,!1)}else C!==o[w]&&(o[w]=C,b=!0)}}}else{$t(t,s,i,o)&&(b=!0);let v;for(const M in c)(!s||!H(s,M)&&((v=f2(M))===M||!H(s,v)))&&(h?n&&(n[M]!==void 0||n[v]!==void 0)&&(i[M]=Me(h,c,M,void 0,t,!0)):delete i[M]);if(o!==c)for(const M in o)(!s||!H(s,M))&&(delete o[M],b=!0)}b&&C1(t,"set","$attrs")}function $t(t,s,n,a){const[i,o]=t.propsOptions;let l=!1,c;if(s)for(let h in s){if(T2(h))continue;const b=s[h];let v;i&&H(i,v=d2(h))?!o||!o.includes(v)?n[v]=b:(c||(c={}))[v]=b:K2(t.emitsOptions,h)||(!(h in a)||b!==a[h])&&(a[h]=b,l=!0)}if(o){const h=O(n),b=c||W;for(let v=0;v<o.length;v++){const M=o[v];n[M]=Me(i,h,M,b[M],t,!H(b,M))}}return l}function Me(t,s,n,a,i,o){const l=t[n];if(l!=null){const c=H(l,"default");if(c&&a===void 0){const h=l.default;if(l.type!==Function&&Z(h)){const{propsDefaults:b}=i;n in b?a=b[n]:(p2(i),a=b[n]=h.call(null,s),e2())}else a=h}l[0]&&(o&&!c?a=!1:l[1]&&(a===""||a===f2(n))&&(a=!0))}return a}function kt(t,s,n=!1){const a=s.propsCache,i=a.get(t);if(i)return i;const o=t.props,l={},c=[];let h=!1;if(!Z(t)){const v=M=>{h=!0;const[w,C]=kt(M,s,!0);l1(l,w),C&&c.push(...C)};!n&&s.mixins.length&&s.mixins.forEach(v),t.extends&&v(t.extends),t.mixins&&t.mixins.forEach(v)}if(!o&&!h)return V(t)&&a.set(t,o2),o2;if(E(o))for(let v=0;v<o.length;v++){const M=d2(o[v]);M0(M)&&(l[M]=W)}else if(o)for(const v in o){const M=d2(v);if(M0(M)){const w=o[v],C=l[M]=E(w)||Z(w)?{type:w}:Object.assign({},w);if(C){const I=G0(Boolean,C.type),P=G0(String,C.type);C[0]=I>-1,C[1]=P<0||I<P,(I>-1||H(C,"default"))&&c.push(M)}}}const b=[l,c];return V(t)&&a.set(t,b),b}function M0(t){return t[0]!=="$"}function L0(t){const s=t&&t.toString().match(/^\s*(function|class) (\w+)/);return s?s[2]:t===null?"null":""}function w0(t,s){return L0(t)===L0(s)}function G0(t,s){return E(s)?s.findIndex(n=>w0(n,t)):Z(s)&&w0(s,t)?0:-1}const St=t=>t[0]==="_"||t==="$stable",Xe=t=>E(t)?t.map(G1):[G1(t)],v5=(t,s,n)=>{if(s._n)return s;const a=Rs((...i)=>Xe(s(...i)),n);return a._c=!1,a},Mt=(t,s,n)=>{const a=t._ctx;for(const i in t){if(St(i))continue;const o=t[i];if(Z(o))s[i]=v5(i,o,a);else if(o!=null){const l=Xe(o);s[i]=()=>l}}},Lt=(t,s)=>{const n=Xe(s);t.slots.default=()=>n},x5=(t,s)=>{if(t.vnode.shapeFlag&32){const n=s._;n?(t.slots=O(s),H2(s,"_",n)):Mt(s,t.slots={})}else t.slots={},s&&Lt(t,s);H2(t.slots,te,1)},$5=(t,s,n)=>{const{vnode:a,slots:i}=t;let o=!0,l=W;if(a.shapeFlag&32){const c=s._;c?n&&c===1?o=!1:(l1(i,s),!n&&c===1&&delete i._):(o=!s.$stable,Mt(s,i)),l=s}else s&&(Lt(t,s),l={default:1});if(o)for(const c in i)!St(c)&&!(c in l)&&delete i[c]};function wt(){return{app:null,config:{isNativeTag:Ut,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let k5=0;function S5(t,s){return function(a,i=null){Z(a)||(a=Object.assign({},a)),i!=null&&!V(i)&&(i=null);const o=wt(),l=new Set;let c=!1;const h=o.app={_uid:k5++,_component:a,_props:i,_container:null,_context:o,_instance:null,version:W5,get config(){return o.config},set config(b){},use(b,...v){return l.has(b)||(b&&Z(b.install)?(l.add(b),b.install(h,...v)):Z(b)&&(l.add(b),b(h,...v))),h},mixin(b){return o.mixins.includes(b)||o.mixins.push(b),h},component(b,v){return v?(o.components[b]=v,h):o.components[b]},directive(b,v){return v?(o.directives[b]=v,h):o.directives[b]},mount(b,v,M){if(!c){const w=d(a,i);return w.appContext=o,v&&s?s(w,b):t(w,b,M),c=!0,h._container=b,b.__vue_app__=h,e0(w.component)||w.component.proxy}},unmount(){c&&(t(null,h._container),delete h._container.__vue_app__)},provide(b,v){return o.provides[b]=v,h}};return h}}function Le(t,s,n,a,i=!1){if(E(t)){t.forEach((w,C)=>Le(w,s&&(E(s)?s[C]:s),n,a,i));return}if(E2(a)&&!i)return;const o=a.shapeFlag&4?e0(a.component)||a.component.proxy:a.el,l=i?null:o,{i:c,r:h}=t,b=s&&s.r,v=c.refs===W?c.refs={}:c.refs,M=c.setupState;if(b!=null&&b!==h&&(s1(b)?(v[b]=null,H(M,b)&&(M[b]=null)):d1(b)&&(b.value=null)),Z(h))O1(h,c,12,[l,v]);else{const w=s1(h),C=d1(h);if(w||C){const I=()=>{if(t.f){const P=w?H(M,h)?M[h]:v[h]:h.value;i?E(P)&&Ce(P,o):E(P)?P.includes(o)||P.push(o):w?(v[h]=[o],H(M,h)&&(M[h]=v[h])):(h.value=[o],t.k&&(v[t.k]=h.value))}else w?(v[h]=l,H(M,h)&&(M[h]=l)):C&&(h.value=l,t.k&&(v[t.k]=l))};l?(I.id=-1,p1(I,n)):I()}}}const p1=Ks;function M5(t){return L5(t)}function L5(t,s){const n=es();n.__VUE__=!0;const{insert:a,remove:i,patchProp:o,createElement:l,createText:c,createComment:h,setText:b,setElementText:v,parentNode:M,nextSibling:w,setScopeId:C=k1,insertStaticContent:I}=t,P=(r,u,g,y=null,_=null,k=null,L=!1,$=null,S=!!u.dynamicChildren)=>{if(r===u)return;r&&!J1(r,u)&&(y=L2(r),M1(r,_,k,!0),r=null),u.patchFlag===-2&&(S=!1,u.dynamicChildren=null);const{type:x,ref:N,shapeFlag:G}=u;switch(x){case ee:Y(r,u,g,y);break;case T1:B(r,u,g,y);break;case Z2:r==null&&g1(u,g,y,L);break;case i1:S1(r,u,g,y,_,k,L,$,S);break;default:G&1?a1(r,u,g,y,_,k,L,$,S):G&6?N1(r,u,g,y,_,k,L,$,S):(G&64||G&128)&&x.process(r,u,g,y,_,k,L,$,S,n2)}N!=null&&_&&Le(N,r&&r.ref,k,u||r,!u)},Y=(r,u,g,y)=>{if(r==null)a(u.el=c(u.children),g,y);else{const _=u.el=r.el;u.children!==r.children&&b(_,u.children)}},B=(r,u,g,y)=>{r==null?a(u.el=h(u.children||""),g,y):u.el=r.el},g1=(r,u,g,y)=>{[r.el,r.anchor]=I(r.children,u,g,y,r.el,r.anchor)},D=({el:r,anchor:u},g,y)=>{let _;for(;r&&r!==u;)_=w(r),a(r,g,y),r=_;a(u,g,y)},K=({el:r,anchor:u})=>{let g;for(;r&&r!==u;)g=w(r),i(r),r=g;i(u)},a1=(r,u,g,y,_,k,L,$,S)=>{L=L||u.type==="svg",r==null?s2(u,g,y,_,k,L,$,S):n1(r,u,_,k,L,$,S)},s2=(r,u,g,y,_,k,L,$)=>{let S,x;const{type:N,props:G,shapeFlag:q,transition:T,dirs:A}=r;if(S=r.el=l(r.type,k,G&&G.is,G),q&8?v(S,r.children):q&16&&F(r.children,S,null,y,_,k&&N!=="foreignObject",L,$),A&&U1(r,null,y,"created"),D1(S,r,r.scopeId,L,y),G){for(const R in G)R!=="value"&&!T2(R)&&o(S,R,null,G[R],k,r.children,y,_,q1);"value"in G&&o(S,"value",null,G.value),(x=G.onVnodeBeforeMount)&&w1(x,y,r)}A&&U1(r,null,y,"beforeMount");const U=(!_||_&&!_.pendingBranch)&&T&&!T.persisted;U&&T.beforeEnter(S),a(S,u,g),((x=G&&G.onVnodeMounted)||U||A)&&p1(()=>{x&&w1(x,y,r),U&&T.enter(S),A&&U1(r,null,y,"mounted")},_)},D1=(r,u,g,y,_)=>{if(g&&C(r,g),y)for(let k=0;k<y.length;k++)C(r,y[k]);if(_){let k=_.subTree;if(u===k){const L=_.vnode;D1(r,L,L.scopeId,L.slotScopeIds,_.parent)}}},F=(r,u,g,y,_,k,L,$,S=0)=>{for(let x=S;x<r.length;x++){const N=r[x]=$?A1(r[x]):G1(r[x]);P(null,N,u,g,y,_,k,L,$)}},n1=(r,u,g,y,_,k,L)=>{const $=u.el=r.el;let{patchFlag:S,dynamicChildren:x,dirs:N}=u;S|=r.patchFlag&16;const G=r.props||W,q=u.props||W;let T;g&&W1(g,!1),(T=q.onVnodeBeforeUpdate)&&w1(T,g,u,r),N&&U1(u,r,g,"beforeUpdate"),g&&W1(g,!0);const A=_&&u.type!=="foreignObject";if(x?J(r.dynamicChildren,x,$,g,y,A,k):L||j(r,u,$,null,g,y,A,k,!1),S>0){if(S&16)u1($,u,G,q,g,y,_);else if(S&2&&G.class!==q.class&&o($,"class",null,q.class,_),S&4&&o($,"style",G.style,q.style,_),S&8){const U=u.dynamicProps;for(let R=0;R<U.length;R++){const e1=U[R],_1=G[e1],a2=q[e1];(a2!==_1||e1==="value")&&o($,e1,_1,a2,_,r.children,g,y,q1)}}S&1&&r.children!==u.children&&v($,u.children)}else!L&&x==null&&u1($,u,G,q,g,y,_);((T=q.onVnodeUpdated)||N)&&p1(()=>{T&&w1(T,g,u,r),N&&U1(u,r,g,"updated")},y)},J=(r,u,g,y,_,k,L)=>{for(let $=0;$<u.length;$++){const S=r[$],x=u[$],N=S.el&&(S.type===i1||!J1(S,x)||S.shapeFlag&70)?M(S.el):g;P(S,x,N,null,y,_,k,L,!0)}},u1=(r,u,g,y,_,k,L)=>{if(g!==y){if(g!==W)for(const $ in g)!T2($)&&!($ in y)&&o(r,$,g[$],null,L,u.children,_,k,q1);for(const $ in y){if(T2($))continue;const S=y[$],x=g[$];S!==x&&$!=="value"&&o(r,$,x,S,L,u.children,_,k,q1)}"value"in y&&o(r,"value",g.value,y.value)}},S1=(r,u,g,y,_,k,L,$,S)=>{const x=u.el=r?r.el:c(""),N=u.anchor=r?r.anchor:c("");let{patchFlag:G,dynamicChildren:q,slotScopeIds:T}=u;T&&($=$?$.concat(T):T),r==null?(a(x,g,y),a(N,g,y),F(u.children,g,N,_,k,L,$,S)):G>0&&G&64&&q&&r.dynamicChildren?(J(r.dynamicChildren,q,g,_,k,L,$),(u.key!=null||_&&u===_.subTree)&&Gt(r,u,!0)):j(r,u,g,N,_,k,L,$,S)},N1=(r,u,g,y,_,k,L,$,S)=>{u.slotScopeIds=$,r==null?u.shapeFlag&512?_.ctx.activate(u,g,y,L,S):h2(u,g,y,_,k,L,S):l0(r,u,S)},h2=(r,u,g,y,_,k,L)=>{const $=r.component=Z5(r,y,_);if(X2(r)&&($.ctx.renderer=n2),A5($),$.asyncDep){if(_&&_.registerDep($,r1),!r.el){const S=$.subTree=d(T1);B(null,S,u,g)}return}r1($,r,u,g,_,k,L)},l0=(r,u,g)=>{const y=u.component=r.component;if(Us(r,u,g))if(y.asyncDep&&!y.asyncResolved){X(y,u,g);return}else y.next=u,As(y.update),y.update();else u.el=r.el,y.vnode=u},r1=(r,u,g,y,_,k,L)=>{const $=()=>{if(r.isMounted){let{next:N,bu:G,u:q,parent:T,vnode:A}=r,U=N,R;W1(r,!1),N?(N.el=A.el,X(r,N,L)):N=A,G&&le(G),(R=N.props&&N.props.onVnodeBeforeUpdate)&&w1(R,T,N,A),W1(r,!0);const e1=re(r),_1=r.subTree;r.subTree=e1,P(_1,e1,M(_1.el),L2(_1),r,_,k),N.el=e1.el,U===null&&Ws(r,e1.el),q&&p1(q,_),(R=N.props&&N.props.onVnodeUpdated)&&p1(()=>w1(R,T,N,A),_)}else{let N;const{el:G,props:q}=u,{bm:T,m:A,parent:U}=r,R=E2(u);if(W1(r,!1),T&&le(T),!R&&(N=q&&q.onVnodeBeforeMount)&&w1(N,U,u),W1(r,!0),G&&ie){const e1=()=>{r.subTree=re(r),ie(G,r.subTree,r,_,null)};R?u.type.__asyncLoader().then(()=>!r.isUnmounted&&e1()):e1()}else{const e1=r.subTree=re(r);P(null,e1,g,y,r,_,k),u.el=e1.el}if(A&&p1(A,_),!R&&(N=q&&q.onVnodeMounted)){const e1=u;p1(()=>w1(N,U,e1),_)}(u.shapeFlag&256||U&&E2(U.vnode)&&U.vnode.shapeFlag&256)&&r.a&&p1(r.a,_),r.isMounted=!0,u=g=y=null}},S=r.effect=new Fe($,()=>We(x),r.scope),x=r.update=()=>S.run();x.id=r.uid,W1(r,!0),x()},X=(r,u,g)=>{u.component=r;const y=r.vnode.props;r.vnode=u,r.next=null,y5(r,u.props,y,g),$5(r,u.children,g),Q2(),v0(),u2()},j=(r,u,g,y,_,k,L,$,S=!1)=>{const x=r&&r.children,N=r?r.shapeFlag:0,G=u.children,{patchFlag:q,shapeFlag:T}=u;if(q>0){if(q&128){M2(x,G,g,y,_,k,L,$,S);return}else if(q&256){B1(x,G,g,y,_,k,L,$,S);return}}T&8?(N&16&&q1(x,_,k),G!==x&&v(g,G)):N&16?T&16?M2(x,G,g,y,_,k,L,$,S):q1(x,_,k,!0):(N&8&&v(g,""),T&16&&F(G,g,y,_,k,L,$,S))},B1=(r,u,g,y,_,k,L,$,S)=>{r=r||o2,u=u||o2;const x=r.length,N=u.length,G=Math.min(x,N);let q;for(q=0;q<G;q++){const T=u[q]=S?A1(u[q]):G1(u[q]);P(r[q],T,g,null,_,k,L,$,S)}x>N?q1(r,_,k,!0,!1,G):F(u,g,y,_,k,L,$,S,G)},M2=(r,u,g,y,_,k,L,$,S)=>{let x=0;const N=u.length;let G=r.length-1,q=N-1;for(;x<=G&&x<=q;){const T=r[x],A=u[x]=S?A1(u[x]):G1(u[x]);if(J1(T,A))P(T,A,g,null,_,k,L,$,S);else break;x++}for(;x<=G&&x<=q;){const T=r[G],A=u[q]=S?A1(u[q]):G1(u[q]);if(J1(T,A))P(T,A,g,null,_,k,L,$,S);else break;G--,q--}if(x>G){if(x<=q){const T=q+1,A=T<N?u[T].el:y;for(;x<=q;)P(null,u[x]=S?A1(u[x]):G1(u[x]),g,A,_,k,L,$,S),x++}}else if(x>q)for(;x<=G;)M1(r[x],_,k,!0),x++;else{const T=x,A=x,U=new Map;for(x=A;x<=q;x++){const h1=u[x]=S?A1(u[x]):G1(u[x]);h1.key!=null&&U.set(h1.key,x)}let R,e1=0;const _1=q-A+1;let a2=!1,d0=0;const g2=new Array(_1);for(x=0;x<_1;x++)g2[x]=0;for(x=T;x<=G;x++){const h1=r[x];if(e1>=_1){M1(h1,_,k,!0);continue}let L1;if(h1.key!=null)L1=U.get(h1.key);else for(R=A;R<=q;R++)if(g2[R-A]===0&&J1(h1,u[R])){L1=R;break}L1===void 0?M1(h1,_,k,!0):(g2[L1-A]=x+1,L1>=d0?d0=L1:a2=!0,P(h1,u[L1],g,null,_,k,L,$,S),e1++)}const p0=a2?w5(g2):o2;for(R=p0.length-1,x=_1-1;x>=0;x--){const h1=A+x,L1=u[h1],f0=h1+1<N?u[h1+1].el:y;g2[x]===0?P(null,L1,g,f0,_,k,L,$,S):a2&&(R<0||x!==p0[R]?j1(L1,g,f0,2):R--)}}},j1=(r,u,g,y,_=null)=>{const{el:k,type:L,transition:$,children:S,shapeFlag:x}=r;if(x&6){j1(r.component.subTree,u,g,y);return}if(x&128){r.suspense.move(u,g,y);return}if(x&64){L.move(r,u,g,n2);return}if(L===i1){a(k,u,g);for(let G=0;G<S.length;G++)j1(S[G],u,g,y);a(r.anchor,u,g);return}if(L===Z2){D(r,u,g);return}if(y!==2&&x&1&&$)if(y===0)$.beforeEnter(k),a(k,u,g),p1(()=>$.enter(k),_);else{const{leave:G,delayLeave:q,afterLeave:T}=$,A=()=>a(k,u,g),U=()=>{G(k,()=>{A(),T&&T()})};q?q(k,A,U):U()}else a(k,u,g)},M1=(r,u,g,y=!1,_=!1)=>{const{type:k,props:L,ref:$,children:S,dynamicChildren:x,shapeFlag:N,patchFlag:G,dirs:q}=r;if($!=null&&Le($,null,g,r,!0),N&256){u.ctx.deactivate(r);return}const T=N&1&&q,A=!E2(r);let U;if(A&&(U=L&&L.onVnodeBeforeUnmount)&&w1(U,u,r),N&6)At(r.component,g,y);else{if(N&128){r.suspense.unmount(g,y);return}T&&U1(r,null,u,"beforeUnmount"),N&64?r.type.remove(r,u,g,_,n2,y):x&&(k!==i1||G>0&&G&64)?q1(x,u,g,!1,!0):(k===i1&&G&384||!_&&N&16)&&q1(S,u,g),y&&r0(r)}(A&&(U=L&&L.onVnodeUnmounted)||T)&&p1(()=>{U&&w1(U,u,r),T&&U1(r,null,u,"unmounted")},g)},r0=r=>{const{type:u,el:g,anchor:y,transition:_}=r;if(u===i1){Ft(g,y);return}if(u===Z2){K(r);return}const k=()=>{i(g),_&&!_.persisted&&_.afterLeave&&_.afterLeave()};if(r.shapeFlag&1&&_&&!_.persisted){const{leave:L,delayLeave:$}=_,S=()=>L(g,k);$?$(r.el,k,S):S()}else k()},Ft=(r,u)=>{let g;for(;r!==u;)g=w(r),i(r),r=g;i(u)},At=(r,u,g)=>{const{bum:y,scope:_,update:k,subTree:L,um:$}=r;y&&le(y),_.stop(),k&&(k.active=!1,M1(L,r,u,g)),$&&p1($,u),p1(()=>{r.isUnmounted=!0},u),u&&u.pendingBranch&&!u.isUnmounted&&r.asyncDep&&!r.asyncResolved&&r.suspenseId===u.pendingId&&(u.deps--,u.deps===0&&u.resolve())},q1=(r,u,g,y=!1,_=!1,k=0)=>{for(let L=k;L<r.length;L++)M1(r[L],u,g,y,_)},L2=r=>r.shapeFlag&6?L2(r.component.subTree):r.shapeFlag&128?r.suspense.next():w(r.anchor||r.el),c0=(r,u,g)=>{r==null?u._vnode&&M1(u._vnode,null,null,!0):P(u._vnode||null,r,u,null,null,null,g),v0(),pt(),u._vnode=r},n2={p:P,um:M1,m:j1,r:r0,mt:h2,mc:F,pc:j,pbc:J,n:L2,o:t};let ae,ie;return s&&([ae,ie]=s(n2)),{render:c0,hydrate:ae,createApp:S5(c0,ae)}}function W1({effect:t,update:s},n){t.allowRecurse=s.allowRecurse=n}function Gt(t,s,n=!1){const a=t.children,i=s.children;if(E(a)&&E(i))for(let o=0;o<a.length;o++){const l=a[o];let c=i[o];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=i[o]=A1(i[o]),c.el=l.el),n||Gt(l,c)),c.type===ee&&(c.el=l.el)}}function w5(t){const s=t.slice(),n=[0];let a,i,o,l,c;const h=t.length;for(a=0;a<h;a++){const b=t[a];if(b!==0){if(i=n[n.length-1],t[i]<b){s[a]=i,n.push(a);continue}for(o=0,l=n.length-1;o<l;)c=o+l>>1,t[n[c]]<b?o=c+1:l=c;b<t[n[o]]&&(o>0&&(s[a]=n[o-1]),n[o]=a)}}for(o=n.length,l=n[o-1];o-- >0;)n[o]=l,l=s[l];return n}const G5=t=>t.__isTeleport,i1=Symbol(void 0),ee=Symbol(void 0),T1=Symbol(void 0),Z2=Symbol(void 0),_2=[];let $1=null;function p(t=!1){_2.push($1=t?null:[])}function z5(){_2.pop(),$1=_2[_2.length-1]||null}let k2=1;function z0(t){k2+=t}function N5(t){return t.dynamicChildren=k2>0?$1||o2:null,z5(),k2>0&&$1&&$1.push(t),t}function f(t,s,n,a,i,o){return N5(e(t,s,n,a,i,o,!0))}function q5(t){return t?t.__v_isVNode===!0:!1}function J1(t,s){return t.type===s.type&&t.key===s.key}const te="__vInternal",zt=({key:t})=>t??null,F2=({ref:t,ref_key:s,ref_for:n})=>t!=null?s1(t)||d1(t)||Z(t)?{i:x1,r:t,k:s,f:!!n}:t:null;function e(t,s=null,n=null,a=0,i=null,o=t===i1?0:1,l=!1,c=!1){const h={__v_isVNode:!0,__v_skip:!0,type:t,props:s,key:s&&zt(s),ref:s&&F2(s),scopeId:J2,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:a,dynamicProps:i,dynamicChildren:null,appContext:null,ctx:x1};return c?(Ye(h,n),o&128&&t.normalize(h)):n&&(h.shapeFlag|=s1(n)?8:16),k2>0&&!l&&$1&&(h.patchFlag>0||o&6)&&h.patchFlag!==32&&$1.push(h),h}const d=P5;function P5(t,s=null,n=null,a=0,i=null,o=!1){if((!t||t===f5)&&(t=T1),q5(t)){const c=R1(t,s,!0);return n&&Ye(c,n),k2>0&&!o&&$1&&(c.shapeFlag&6?$1[$1.indexOf(t)]=c:$1.push(c)),c.patchFlag|=-2,c}if(R5(t)&&(t=t.__vccOpts),s){s=T5(s);let{class:c,style:h}=s;c&&!s1(c)&&(s.class=y2(c)),V(h)&&(it(h)&&!E(h)&&(h=l1({},h)),s.style=Pe(h))}const l=s1(t)?1:Vs(t)?128:G5(t)?64:V(t)?4:Z(t)?2:0;return e(t,s,n,a,i,l,o,!0)}function T5(t){return t?it(t)||te in t?l1({},t):t:null}function R1(t,s,n=!1){const{props:a,ref:i,patchFlag:o,children:l}=t,c=s?C5(a||{},s):a;return{__v_isVNode:!0,__v_skip:!0,type:t.type,props:c,key:c&&zt(c),ref:s&&s.ref?n&&i?E(i)?i.concat(F2(s)):[i,F2(s)]:F2(s):i,scopeId:t.scopeId,slotScopeIds:t.slotScopeIds,children:l,target:t.target,targetAnchor:t.targetAnchor,staticCount:t.staticCount,shapeFlag:t.shapeFlag,patchFlag:s&&t.type!==i1?o===-1?16:o|16:o,dynamicProps:t.dynamicProps,dynamicChildren:t.dynamicChildren,appContext:t.appContext,dirs:t.dirs,transition:t.transition,component:t.component,suspense:t.suspense,ssContent:t.ssContent&&R1(t.ssContent),ssFallback:t.ssFallback&&R1(t.ssFallback),el:t.el,anchor:t.anchor,ctx:t.ctx,ce:t.ce}}function z(t=" ",s=0){return d(ee,null,t,s)}function m(t,s){const n=d(Z2,null,t);return n.staticCount=s,n}function G1(t){return t==null||typeof t=="boolean"?d(T1):E(t)?d(i1,null,t.slice()):typeof t=="object"?A1(t):d(ee,null,String(t))}function A1(t){return t.el===null&&t.patchFlag!==-1||t.memo?t:R1(t)}function Ye(t,s){let n=0;const{shapeFlag:a}=t;if(s==null)s=null;else if(E(s))n=16;else if(typeof s=="object")if(a&65){const i=s.default;i&&(i._c&&(i._d=!1),Ye(t,i()),i._c&&(i._d=!0));return}else{n=32;const i=s._;!i&&!(te in s)?s._ctx=x1:i===3&&x1&&(x1.slots._===1?s._=1:(s._=2,t.patchFlag|=1024))}else Z(s)?(s={default:s,_ctx:x1},n=32):(s=String(s),a&64?(n=16,s=[z(s)]):n=8);t.children=s,t.shapeFlag|=n}function C5(...t){const s={};for(let n=0;n<t.length;n++){const a=t[n];for(const i in a)if(i==="class")s.class!==a.class&&(s.class=y2([s.class,a.class]));else if(i==="style")s.style=Pe([s.style,a.style]);else if(B2(i)){const o=s[i],l=a[i];l&&o!==l&&!(E(o)&&o.includes(l))&&(s[i]=o?[].concat(o,l):l)}else i!==""&&(s[i]=a[i])}return s}function w1(t,s,n,a=null){m1(t,s,7,[n,a])}const E5=wt();let D5=0;function Z5(t,s,n){const a=t.type,i=(s?s.appContext:t.appContext)||E5,o={uid:D5++,vnode:t,type:a,parent:s,appContext:i,root:null,next:null,subTree:null,effect:null,update:null,scope:new ts(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(i.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:kt(a,i),emitsOptions:Qt(a,i),emit:null,emitted:null,propsDefaults:W,inheritAttrs:a.inheritAttrs,ctx:W,data:W,props:W,attrs:W,slots:W,refs:W,setupState:W,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=s?s.root:o,o.emit=Is.bind(null,o),t.ce&&t.ce(o),o}let t1=null;const F5=()=>t1||x1,p2=t=>{t1=t,t.scope.on()},e2=()=>{t1&&t1.scope.off(),t1=null};function Nt(t){return t.vnode.shapeFlag&4}let S2=!1;function A5(t,s=!1){S2=s;const{props:n,children:a}=t.vnode,i=Nt(t);_5(t,n,i,s),x5(t,a);const o=i?H5(t,s):void 0;return S2=!1,o}function H5(t,s){const n=t.type;t.accessCache=Object.create(null),t.proxy=ot(new Proxy(t.ctx,Q5));const{setup:a}=n;if(a){const i=t.setupContext=a.length>1?I5(t):null;p2(t),Q2();const o=O1(a,t,0,[t.props,i]);if(u2(),e2(),R0(o)){if(o.then(e2,e2),s)return o.then(l=>{N0(t,l,s)}).catch(l=>{V2(l,t,0)});t.asyncDep=o}else N0(t,o,s)}else qt(t,s)}function N0(t,s,n){Z(s)?t.type.__ssrInlineRender?t.ssrRender=s:t.render=s:V(s)&&(t.setupState=lt(s)),qt(t,n)}let q0;function qt(t,s,n){const a=t.type;if(!t.render){if(!s&&q0&&!a.render){const i=a.template||Je(t).template;if(i){const{isCustomElement:o,compilerOptions:l}=t.appContext.config,{delimiters:c,compilerOptions:h}=a,b=l1(l1({isCustomElement:o,delimiters:c},l),h);a.render=q0(i,b)}}t.render=a.render||k1}p2(t),Q2(),u5(t),u2(),e2()}function O5(t){return new Proxy(t.attrs,{get(s,n){return Q1(t,"get","$attrs"),s[n]}})}function I5(t){const s=a=>{t.exposed=a||{}};let n;return{get attrs(){return n||(n=O5(t))},slots:t.slots,emit:t.emit,expose:s}}function e0(t){if(t.exposed)return t.exposeProxy||(t.exposeProxy=new Proxy(lt(ot(t.exposed)),{get(s,n){if(n in s)return s[n];if(n in m2)return m2[n](t)},has(s,n){return n in s||n in m2}}))}function R5(t){return Z(t)&&"__vccOpts"in t}const B5=(t,s)=>Es(t,s,S2),j5=Symbol(""),U5=()=>C2(j5),W5="3.2.47",V5="http://www.w3.org/2000/svg",X1=typeof document<"u"?document:null,P0=X1&&X1.createElement("template"),K5={insert:(t,s,n)=>{s.insertBefore(t,n||null)},remove:t=>{const s=t.parentNode;s&&s.removeChild(t)},createElement:(t,s,n,a)=>{const i=s?X1.createElementNS(V5,t):X1.createElement(t,n?{is:n}:void 0);return t==="select"&&a&&a.multiple!=null&&i.setAttribute("multiple",a.multiple),i},createText:t=>X1.createTextNode(t),createComment:t=>X1.createComment(t),setText:(t,s)=>{t.nodeValue=s},setElementText:(t,s)=>{t.textContent=s},parentNode:t=>t.parentNode,nextSibling:t=>t.nextSibling,querySelector:t=>X1.querySelector(t),setScopeId(t,s){t.setAttribute(s,"")},insertStaticContent(t,s,n,a,i,o){const l=n?n.previousSibling:s.lastChild;if(i&&(i===o||i.nextSibling))for(;s.insertBefore(i.cloneNode(!0),n),!(i===o||!(i=i.nextSibling)););else{P0.innerHTML=a?`<svg>${t}</svg>`:t;const c=P0.content;if(a){const h=c.firstChild;for(;h.firstChild;)c.appendChild(h.firstChild);c.removeChild(h)}s.insertBefore(c,n)}return[l?l.nextSibling:s.firstChild,n?n.previousSibling:s.lastChild]}};function J5(t,s,n){const a=t._vtc;a&&(s=(s?[s,...a]:[...a]).join(" ")),s==null?t.removeAttribute("class"):n?t.setAttribute("class",s):t.className=s}function X5(t,s,n){const a=t.style,i=s1(n);if(n&&!i){if(s&&!s1(s))for(const o in s)n[o]==null&&we(a,o,"");for(const o in n)we(a,o,n[o])}else{const o=a.display;i?s!==n&&(a.cssText=n):s&&t.removeAttribute("style"),"_vod"in t&&(a.display=o)}}const T0=/\s*!important$/;function we(t,s,n){if(E(n))n.forEach(a=>we(t,s,a));else if(n==null&&(n=""),s.startsWith("--"))t.setProperty(s,n);else{const a=Y5(t,s);T0.test(n)?t.setProperty(f2(a),n.replace(T0,""),"important"):t[a]=n}}const C0=["Webkit","Moz","ms"],fe={};function Y5(t,s){const n=fe[s];if(n)return n;let a=d2(s);if(a!=="filter"&&a in t)return fe[s]=a;a=U0(a);for(let i=0;i<C0.length;i++){const o=C0[i]+a;if(o in t)return fe[s]=o}return s}const E0="http://www.w3.org/1999/xlink";function en(t,s,n,a,i){if(a&&s.startsWith("xlink:"))n==null?t.removeAttributeNS(E0,s.slice(6,s.length)):t.setAttributeNS(E0,s,n);else{const o=jt(s);n==null||o&&!H0(n)?t.removeAttribute(s):t.setAttribute(s,o?"":n)}}function tn(t,s,n,a,i,o,l){if(s==="innerHTML"||s==="textContent"){a&&l(a,i,o),t[s]=n??"";return}if(s==="value"&&t.tagName!=="PROGRESS"&&!t.tagName.includes("-")){t._value=n;const h=n??"";(t.value!==h||t.tagName==="OPTION")&&(t.value=h),n==null&&t.removeAttribute(s);return}let c=!1;if(n===""||n==null){const h=typeof t[s];h==="boolean"?n=H0(n):n==null&&h==="string"?(n="",c=!0):h==="number"&&(n=0,c=!0)}try{t[s]=n}catch{}c&&t.removeAttribute(s)}function sn(t,s,n,a){t.addEventListener(s,n,a)}function nn(t,s,n,a){t.removeEventListener(s,n,a)}function an(t,s,n,a,i=null){const o=t._vei||(t._vei={}),l=o[s];if(a&&l)l.value=a;else{const[c,h]=on(s);if(a){const b=o[s]=cn(a,i);sn(t,c,b,h)}else l&&(nn(t,c,l,h),o[s]=void 0)}}const D0=/(?:Once|Passive|Capture)$/;function on(t){let s;if(D0.test(t)){s={};let a;for(;a=t.match(D0);)t=t.slice(0,t.length-a[0].length),s[a[0].toLowerCase()]=!0}return[t[2]===":"?t.slice(3):f2(t.slice(2)),s]}let Qe=0;const ln=Promise.resolve(),rn=()=>Qe||(ln.then(()=>Qe=0),Qe=Date.now());function cn(t,s){const n=a=>{if(!a._vts)a._vts=Date.now();else if(a._vts<=n.attached)return;m1(dn(a,n.value),s,5,[a])};return n.value=t,n.attached=rn(),n}function dn(t,s){if(E(s)){const n=t.stopImmediatePropagation;return t.stopImmediatePropagation=()=>{n.call(t),t._stopped=!0},s.map(a=>i=>!i._stopped&&a&&a(i))}else return s}const Z0=/^on[a-z]/,pn=(t,s,n,a,i=!1,o,l,c,h)=>{s==="class"?J5(t,a,i):s==="style"?X5(t,n,a):B2(s)?Te(s)||an(t,s,n,a,l):(s[0]==="."?(s=s.slice(1),!0):s[0]==="^"?(s=s.slice(1),!1):fn(t,s,a,i))?tn(t,s,a,o,l,c,h):(s==="true-value"?t._trueValue=a:s==="false-value"&&(t._falseValue=a),en(t,s,a,i))};function fn(t,s,n,a){return a?!!(s==="innerHTML"||s==="textContent"||s in t&&Z0.test(s)&&Z(n)):s==="spellcheck"||s==="draggable"||s==="translate"||s==="form"||s==="list"&&t.tagName==="INPUT"||s==="type"&&t.tagName==="TEXTAREA"||Z0.test(s)&&s1(n)?!1:s in t}const Qn={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String};t5.props;const un=l1({patchProp:pn},K5);let F0;function hn(){return F0||(F0=M5(un))}const gn=(...t)=>{const s=hn().createApp(...t),{mount:n}=s;return s.mount=a=>{const i=bn(a);if(!i)return;const o=s._component;!Z(o)&&!o.render&&!o.template&&(o.template=i.innerHTML),i.innerHTML="";const l=n(i,!1,i instanceof SVGElement);return i instanceof Element&&(i.removeAttribute("v-cloak"),i.setAttribute("data-v-app","")),l},s};function bn(t){return s1(t)?document.querySelector(t):t}const mn="/php-cours/assets/PHP-logo-bf8b7e48.svg",Q=(t,s)=>{const n=t.__vccOpts||t;for(const[a,i]of s)n[a]=i;return n},_n={},yn={class:"slide show"},vn=m('<div class="heading">Présentation sur PHP</div><div class="content grid center"><h3 class="title">Initiation PhP <br></h3><p class="sub-title">Concepts de base et avancés</p><p>Mon portefeuille</p><p><a href="https://kilian-schropp.surge.sh/">https://kilian-schropp.surge.sh/</a></p></div>',2),xn=[vn];function $n(t,s){return p(),f("div",yn,xn)}const kn=Q(_n,[["render",$n]]),Sn={},Mn={class:"slide"},Ln=m('<div class="heading">Pourquoi PHP</div><div class="content"><p> - 15% à 20% de <span style="color:#777bb3ff;">tous les emplois</span> dans la région ont besoin de PHP </p><p> - La plupart des offres qui exigent un <span style="color:#777bb3ff;">bac+2</span> sont pour les développeurs <span style="color:#777bb3ff;">PHP</span></p><p> - les offres de Java, c++, c, Python exigent la plupart du temps un minimum de <span style="color:#777bb3ff;">bac+3</span></p><br><p> PHP est un excellent langage pour vous permettre de démarrer <span style="color:#777bb3ff;">rapidement</span> et d&#39;être <span style="color:#777bb3ff;">compétitif</span> sur le marché du travail lorsque vous aurez terminé cette formation </p></div>',2),wn=[Ln];function Gn(t,s){return p(),f("div",Mn,wn)}const zn=Q(Sn,[["render",Gn]]),Nn="/php-cours/assets/popularity-86aa71ef.svg",qn={},Pn={class:"slide"},Tn=e("div",{class:"heading"},"Utilisation",-1),Cn=e("div",{class:"content grid center"},[e("p",{class:"sub-title"},[e("img",{src:Nn,style:{width:"60%"}})])],-1),En=[Tn,Cn];function Dn(t,s){return p(),f("div",Pn,En)}const Zn=Q(qn,[["render",Dn]]),Fn="/php-cours/assets/server-1e85edd0.svg",An="/php-cours/assets/command-694af1fe.svg",Hn="/php-cours/assets/screen-f06bb38f.svg",On={},In={class:"slide"},Rn=m('<div class="heading">Que fait PHP ?</div><div class="content"><div class="flex-container"><div style="width:80%;"><p class="sub-title"><b>Server-side scripting</b></p><p> générer des fichiers HTML, XML, des documents, des graphiques, des fichiers PDF, etc. </p></div><div style="width:20%;"><img src="'+Fn+'" style="display:inline-block;width:50%;"></div></div><div class="flex-container"><div style="width:80%;"><p class="sub-title"><b>Command-line scripting</b></p><p>tâches d&#39;administration du système</p></div><div style="width:20%;"><img src="'+An+'" style="display:inline-block;width:60%;"></div></div><div class="flex-container"><div style="width:80%;"><p class="sub-title"><b>Client-side GUI applications (Graphical User Interface)</b></p><p>des applications GUI multiplateformes</p></div><div style="width:20%;"><img src="'+Hn+'" style="display:inline-block;width:60%;"></div></div></div>',2),Bn=[Rn];function jn(t,s){return p(),f("div",In,Bn)}const Un=Q(On,[["render",jn]]),Wn="/php-cours/assets/parser-ae97525a.svg",Vn={},Kn={class:"slide"},Jn=m('<div class="heading">Pourquoi PHP</div><div class="content"><p> Lorsque PHP analyse un fichier, il recherche les balises ouvrantes et fermantes, c&#39;est-à-dire &lt;?php et ?&gt;, qui indiquent à PHP de commencer ou d&#39;arrêter d&#39;interpréter le code intermédiaire. </p><div class="flex-container"><div style="width:70%;"><img src="'+Wn+'" style="width:100%;"></div><div style="width:25%;"><p>&lt;? ... ?&gt;:</p><p style="color:red;">Non conseillé</p><br><p>&lt;?php ... ?&gt; :</p><p style="color:green;">conseillé</p></div></div></div>',2),Xn=[Jn];function Yn(t,s){return p(),f("div",Kn,Xn)}const e6=Q(Vn,[["render",Yn]]),t6="/php-cours/assets/cpu-archi-2b63f6dc.svg",s6="/php-cours/assets/cpu-8d1fa5ad.svg",n6={},a6={class:"slide"},i6=e("div",{class:"heading"},"Organisation des systèmes informatiques - CPU",-1),o6=e("div",{class:"content"},[e("p",null,[e("b",null,"Central Processing Unit (CPU) est le cerveau de l'ordinateur")]),e("img",{src:t6,style:{width:"55%"}}),e("img",{src:s6,class:"html-css-logo",style:{left:"70%",top:"45%"}})],-1),l6=[i6,o6];function r6(t,s){return p(),f("div",a6,l6)}const c6=Q(n6,[["render",r6]]);const d6={name:"LightSwitch",data:function(){return{isActive:!1}},methods:{myFilter:function(){console.log("do something"),this.isActive=!this.isActive}}},p6={id:"light",class:"container center"},f6={class:"rec1 center"},Q6={class:"rec2 center"};function u6(t,s,n,a,i,o){return p(),f("div",{class:y2(["encapsulation",{white:t.isActive}])},[e("div",p6,[e("div",f6,[e("div",Q6,[e("button",{class:y2(["switch",{active:t.isActive}]),onClick:s[0]||(s[0]=l=>o.myFilter())},null,2)])])])],2)}const Pt=Q(d6,[["render",u6],["__scopeId","data-v-d445c8f2"]]),h6={class:"slide"},g6=e("div",{class:"heading"},"Introduction à l'informatique - Bits",-1),b6={class:"content"},m6=e("p",null," L'unité de base de la mémoire est appelée bit. Il peut être soit 0 soit 1 ",-1),_6={__name:"SlidePresentation7",setup(t){return(s,n)=>(p(),f("div",h6,[g6,e("div",b6,[m6,d(Pt)])]))}},y6="/php-cours/assets/binary-a2af44b2.svg",v6="/php-cours/assets/alternative-29ae9504.svg",x6={},$6={class:"slide"},k6=m('<div class="heading">Introduction à l&#39;informatique - Bits</div><div class="content"><p>Pourquoi binaire, pourquoi pas Quaternaire?</p><br><div class="flex-container"><div><img src="'+y6+'" style="width:100%;"></div><div><img src="'+v6+'" style="width:100%;"></div></div></div>',2),S6=[k6];function M6(t,s){return p(),f("div",$6,S6)}const L6=Q(x6,[["render",M6]]),w6={},G6={class:"slide"},z6=e("div",{class:"heading"}," Introduction à l'informatique - Rappel du système décimal ",-1),N6=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://codepen.io/MarkBoots/full/vYyoMQg"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),q6=[z6,N6];function P6(t,s){return p(),f("div",G6,q6)}const T6=Q(w6,[["render",P6]]),C6={},E6={class:"slide"},D6=e("div",{class:"heading"},"Introduction à l'informatique - Byte",-1),Z6=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://codepen.io/evanmags/full/ZNWMJW"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")]),e("a",{href:"https://www.advanced-ict.info/mathematics/abacus.html"},"binary abbacus")],-1),F6=[D6,Z6];function A6(t,s){return p(),f("div",E6,F6)}const H6=Q(C6,[["render",A6]]),O6="/php-cours/assets/lightswitches-c115c765.svg",I6={},R6={class:"slide"},B6=e("div",{class:"heading"},"Introduction à l'informatique - Mémoire",-1),j6=e("div",{class:"content"},[e("p",null," Toutes les données d'un ordinateur sont stockées dans des séquences de 0 et de 1. "),e("br"),e("img",{src:O6,style:{width:"70%"}})],-1),U6=[B6,j6];function W6(t,s){return p(),f("div",R6,U6)}const V6=Q(I6,[["render",W6]]),K6="/php-cours/assets/houseAdresse-d7eb7a31.svg",J6="/php-cours/assets/adresse-2a705eca.svg",X6={},Y6={class:"slide"},e3=m('<div class="heading"> Introduction à l&#39;informatique - Adresse de la mémoire </div><div class="content"><div class="flex-container"><div><img src="'+K6+'" style="width:90%;"></div><div><img src="'+J6+'" style="width:75%;"></div></div></div>',2),t3=[e3];function s3(t,s){return p(),f("div",Y6,t3)}const n3=Q(X6,[["render",s3]]),a3="/php-cours/assets/motherboard-2e139c3c.png",i3={},o3={class:"slide"},l3=e("div",{class:"heading"},"Introduction à l'informatique - Motherboard",-1),r3=e("img",{src:a3,style:{width:"50%"}},null,-1),c3=[l3,r3];function d3(t,s){return p(),f("div",o3,c3)}const p3=Q(i3,[["render",d3]]),Tt="/php-cours/assets/pizza-f944b4e1.svg",f3={},Q3={class:"slide"},u3=m('<div class="heading">Algorithme - Pizza exemple</div><div class="content"><ol><li>Préchauffer le four à 500 degrés et y mettre la pierre.</li><li>Sortez la pâte de blé entier de TJ&#39;s.</li><li>Farinez-la et roulez-la</li><li> Puis brosser avec de l&#39;huile d&#39;olive et une solide poussière de farine de maïs. </li><li>Retirez la pierre</li><li>Retournez la croûte sur elle</li><li>Faire cuire pendant environ cinq minutes</li><li>Retirez-le</li><li>Percez les bulles</li><li>Mettez plus d&#39;huile d&#39;olive sur le dessus.</li><li> Puis les garnitures: Huile d&#39;olive, tapenade d&#39;olives, ail frais, champignons, oignons, basilic frais, de la mozzarella en tranches et une pile d&#39;anchois. </li><li>Faites cuire pendant encore 10-15 minutes</li><li>Retirez-le avec votre palette à pizza et prenez-le en photo</li><li> Offrez une tranche à votre invité, en priant pour qu&#39;il ait déjà mangé. </li><li> Consommez-le avec une bonne bouteille de vin rouge bon marché tout en gérant vos nombreuses émotions. </li></ol><img src="'+Tt+'" class="html-css-logo" style="left:80%;top:15%;width:10%;"></div>',2),h3=[u3];function g3(t,s){return p(),f("div",Q3,h3)}const b3=Q(f3,[["render",g3]]),m3={},_3={class:"slide"},y3=e("div",{class:"heading"},"Algorithme - The martingale strategy/Algorithme",-1),v3=e("div",{class:"content"},[e("ol",null,[e("li",null,"Commence avec 1€ de mise"),e("li",null,"Place ta mise sur le noir ou le rouge"),e("li",null,"Laissez tourner la roue"),e("li",null," Si vous perdez, doublez la dernière mise et retournez à l'étape 2 "),e("li",null," Si vous gagnez, prenez votre dernière mise et l'argent gagné, recommencez au début de 1€ et retournez à l'étape 2 ")]),e("div",{class:"iFrame-container","data-link":"https://codepen.io/ozboware/full/QWqEmgE"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"85%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),x3=[y3,v3];function $3(t,s){return p(),f("div",_3,x3)}const k3=Q(m3,[["render",$3]]),S3={},M3={class:"slide"},L3=m(`<div class="heading">Comments</div><div class="content"><p> Les commentaires de double-slash (//) sont le moyen le plus élémentaire de documenter votre code. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#75715e;">&lt;?php</span>
          <span style="color:#75715e;">// This is a comment</span>
          <span style="color:#66d9ef;">echo</span> <span style="color:#e6db74;">&quot;Hello, World!&quot;</span><span style="color:#f8f8f2;">;</span>
          <span style="color:#75715e;">?&gt;</span></pre></div><p> Les commentaires peuvent être placés à la fin d&#39;une ligne, et PHP ignorera le reste de la ligne </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#75715e;">&lt;?php</span>
          <span style="color:#66d9ef;">echo</span> <span style="color:#e6db74;">&quot;Hello, World!&quot;</span><span style="color:#f8f8f2;">;</span> <span style="color:#75715e;">// This is a comment</span>
          <span style="color:#75715e;">?&gt;</span></pre></div><p> Un commentaire ne doit pas nécessairement être un texte qui explique le code, il peut également être utilisé pour empêcher PHP d&#39;exécuter du code </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#75715e;">&lt;?php</span>
          <span style="color:#75715e;">//echo &quot;Hello, World!&quot;;</span>
          <span style="color:#66d9ef;">echo</span> <span style="color:#e6db74;">&quot;Hello, World!&quot;</span><span style="color:#f8f8f2;">;</span>
          <span style="color:#75715e;">?&gt;</span></pre></div></div>`,2),w3=[L3];function G3(t,s){return p(),f("div",M3,w3)}const z3=Q(S3,[["render",G3]]),N3={},q3={class:"slide"},P3=m(`<div class="heading">Comments</div><div class="content"><div class="flex-container"><div style="width:15%;"><p>Shell-style:</p></div><div style="width:80%;"><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#0000ff;">&lt;?php</span>
              <span style="color:#008000;">#######################</span>
              <span style="color:#008000;">## Example Comment</span>
              <span style="color:#008000;">#######################</span>
              <span style="color:#0000ff;">?&gt;</span></pre></div></div></div><div class="flex-container"><div style="width:15%;"><p>C++ style:</p></div><div style="width:80%;"><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#0000ff;">&lt;?php</span>
              <span style="color:#008000;">/////////////////////////////////</span>
              <span style="color:#008000;">// Example Comment</span>
              <span style="color:#008000;">/////////////////////////////////</span>
              <span style="color:#0000ff;">?&gt;</span></pre></div></div></div><div class="flex-container"><div style="width:15%;"><p>C style multiline:</p></div><div style="width:80%;"><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#0000ff;">&lt;?php</span>
              <span style="color:#008000;">/*</span>
              <span style="color:#008000;">Example</span>
              <span style="color:#008000;">multiline</span>
              <span style="color:#008000;">comment</span>
              <span style="color:#008000;">*/</span>
              <span style="color:#0000ff;">?&gt;</span></pre></div></div></div></div>`,2),T3=[P3];function C3(t,s){return p(),f("div",q3,T3)}const E3=Q(N3,[["render",C3]]),D3="/php-cours/assets/case-insensetiv-b7bfd575.svg",Z3="/php-cours/assets/case-sensetiv-f9584dd3.svg",F3={},A3={class:"slide"},H3=m('<div class="heading">Case Sensitivity</div><div class="content"><div class="flex-container"><div><p> les classes et fonctions qui sont user-defined, ainsi que les built-in constructs et les mots-clés tels que echo, while, class, etc. sont case-insensitive </p></div><div><img src="'+D3+'" style="width:70%;"></div></div><br><div class="flex-container"><div><p>Les variables, par contre, sont case-sensitive</p></div><div><img src="'+Z3+'" style="width:70%;"></div></div></div>',2),O3=[H3];function I3(t,s){return p(),f("div",A3,O3)}const R3=Q(F3,[["render",I3]]),B3="/php-cours/assets/variable-8ecd05a5.svg",j3={},U3={class:"slide"},W3=e("div",{class:"heading"},"Variables",-1),V3=e("div",{class:"content"},[e("p",null," Une variable est simplement une zone de stockage. Vous placez des éléments dans vos zones de stockage (variables) afin de pouvoir les utiliser et les manipuler dans vos programmes. "),e("img",{src:B3,style:{width:"82%","padding-left":"15%"}})],-1),K3=[W3,V3];function J3(t,s){return p(),f("div",U3,K3)}const X3=Q(j3,[["render",J3]]),Y3="/php-cours/assets/boxInRam-4a05a89b.svg",ea={},ta={class:"slide"},sa=e("div",{class:"heading"},"Variables",-1),na=e("div",{class:"content"},[e("p",null,` Une variable est le nom d'une cellule de mémoire. Elle est dite "variable" car la valeur contenue dans la cellule peut changer. Chaque cellule de mémoire a une adresse. `),e("img",{src:Y3,style:{width:"90%","padding-left":"15%"}})],-1),aa=[sa,na];function ia(t,s){return p(),f("div",ta,aa)}const oa=Q(ea,[["render",ia]]),la={},ra={class:"slide"},ca=m(`<div class="heading">Statement</div><div class="content"><p> Une instruction (statement) est un ensemble de code PHP qui fait quelque chose </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#0000ff;">&lt;?php</span>
          <span style="color:#0000ff;">echo</span> <span style="color:#a31515;">&quot;Hello, world&quot;</span>;
          myfunc(42, <span style="color:#a31515;">&quot;Kilian&quot;</span>);
          $a = 1;
          $name = <span style="color:#a31515;">&quot;Schropp&quot;</span>;
          $b = $a / 25.0;
          <span style="color:#0000ff;">if</span> ($a == $b) { <span style="color:#0000ff;">echo</span> <span style="color:#a31515;">&quot;Rhyme? And Reason?&quot;</span>; } 
          <span style="color:#0000ff;">?&gt;</span></pre></div><p> PHP utilise les <span style="color:#777bb3ff;">points-virgules</span> pour séparer les déclarations simples. </p><p> Une instruction composée qui utilise des <span style="color:#777bb3ff;">accolades</span> pour marquer un bloc de code, tel qu&#39;un test conditionnel ou une boucle, n&#39;a pas besoin de point-virgule après l&#39;accolade fermante. </p></div>`,2),da=[ca];function pa(t,s){return p(),f("div",ra,da)}const fa=Q(la,[["render",pa]]),Qa={},ua={class:"slide"},ha=m(`<div class="heading">Création de variables</div><div class="content"><p> PHP n&#39;a pas de commande pour déclarer une variable. Une variable est créée au moment où vous lui attribuez une valeur pour la première fois. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">                  <span style="color:#0000ff;">&lt;?php</span>
                  $x = 5;
                  $y = <span style="color:#a31515;">&quot;John&quot;</span>;
                  <span style="color:#008000;">// est la même chose que</span>
                  $y = <span style="color:#a31515;">&#39;John&#39;</span>;
                  <span style="color:#0000ff;">echo</span> $x;
                  <span style="color:#0000ff;">echo</span> $y;
                  <span style="color:#0000ff;">?&gt;</span></pre></div><p>Les noms de variables sont sensibles à la casse</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#0000ff;">&lt;?php</span>
          $a = 4;
          $A = <span style="color:#a31515;">&quot;Sally&quot;</span>;
          <span style="color:#008000;">// A ne remplacera pas a </span>
          <span style="color:#0000ff;">?&gt;</span></pre></div></div>`,2),ga=[ha];function ba(t,s){return p(),f("div",ua,ga)}const ma=Q(Qa,[["render",ba]]),_a={},ya={class:"slide"},va=e("div",{class:"heading"},"Assignment Statement",-1),xa=e("div",{class:"content"},[e("p",null,"echo affiche un message sur la console"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yucz2cs7"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),$a=[va,xa];function ka(t,s){return p(),f("div",ya,$a)}const Sa=Q(_a,[["render",ka]]),Ma={},La={class:"slide"},wa=m(`<div class="heading">Data Types - Integers</div><div class="content"><div style="overflow-y:scroll;height:100%;"><p> En PHP, les Integers sont des nombres entiers nuls, positifs ou négatifs, sans partie fractionnaire et ayant une précision illimitée, par exemple 0, 100, -10. Les éléments suivants sont des littéraux entiers valides en PHP. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">                    <span style="color:#0000ff;">&lt;?php</span>
                    $zero = 0;
                    $hundred = 100;
                    $minusTen = -10;
                    <span style="color:#0000ff;">?&gt;</span></pre></div><p> Les nombres entiers peuvent être des valeurs binaires, octales et hexadécimales </p><div class="codeblock"><pre style="margin:0;line-height:125%;">            <span style="color:#0000ff;">&lt;?php</span>
            $binary = 0b11011000 ; <span style="color:#008000;">// Les littéraux binaires commencent par une tête 0b ou 0B, suivie de chiffres binaires (0-1).</span>
            <span style="color:#0000ff;">echo</span> $binary ; <span style="color:#008000;">// 216</span>
            <span style="color:#0000ff;">echo</span> <span style="color:#a31515;">&quot;\\r\\n&quot;</span> ;

            $octal = 012 ; <span style="color:#008000;">// Les octaux commencent par un 0o ou 0O (zéro et la lettre o en minuscule ou en majuscule), suivi d&#39;une chaîne de chiffres (0-7).</span>
            <span style="color:#0000ff;">echo</span> $octal ; <span style="color:#008000;">// 10</span>
            <span style="color:#0000ff;">echo</span> <span style="color:#a31515;">&quot;\\r\\n&quot;</span> ;

            $hexadecimal = 0x12 ; <span style="color:#008000;">// Les hexadécimaux commencent par un 0x ou 0X, suivi d&#39;une chaîne de chiffres hexadécimaux (0-9 et A-F).</span>
            <span style="color:#0000ff;">echo</span> $hexadecimal ; <span style="color:#008000;">// 18</span>
            <span style="color:#0000ff;">?&gt;</span></pre></div><a href="https://www.rightlobemath.com/digitalabacus/abacus_rebuild.html">decimal, </a><a href="https://codepen.io/evanmags/full/ZNWMJW">binary, </a><a href="https://codepen.io/jakealbaugh/full/MKdZrb">hex</a></div></div>`,2),Ga=[wa];function za(t,s){return p(),f("div",La,Ga)}const Na=Q(Ma,[["render",za]]),qa="/php-cours/assets/swapping-f91c5632.svg",Pa={},Ta={class:"slide"},Ca=m('<div class="heading">Data Types - Integers</div><div class="content"><p>Exercice : Ecrivez un programme en PHP pour échanger deux nombres</p><img src="'+qa+`" style="width:60%;padding-left:15%;padding-bottom:1%;"><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#0000ff;">&lt;?php</span>
          <span style="color:#008000;">//Example:</span>
          $a = 39;
          $b = 25;
          <span style="color:#008000;">//après échange</span>
          <span style="color:#008000;">//a = 25, b = 39 </span>
          <span style="color:#0000ff;">echo</span> $a;
          <span style="color:#0000ff;">echo</span> $b;
          <span style="color:#0000ff;">?&gt;</span></pre></div></div>`,2),Ea=[Ca];function Da(t,s){return p(),f("div",Ta,Ea)}const Za=Q(Pa,[["render",Da]]),Fa={},Aa={class:"slide"},Ha=e("div",{class:"heading"},"Data Types - Integers",-1),Oa=e("div",{class:"content"},[e("p",null,"echo affiche un message sur la console"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yud7hem8"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Ia=[Ha,Oa];function Ra(t,s){return p(),f("div",Aa,Ia)}const Ba=Q(Fa,[["render",Ra]]),ja={},Ua={class:"slide"},Wa=m(`<div class="heading">Data Types - Integers</div><div class="content"><p>Solution:</p><div class="codeblock"><pre style="margin:0;line-height:125%;"><span style="color:#0000ff;">&lt;?php</span>
            $a = 39;
            $b = 25;

            $c = $a;
            $a = $b;
            $b = $c;
            <span style="color:#0000ff;">echo</span> $a;
            <span style="color:#0000ff;">echo</span> <span style="color:#a31515;">&quot;\\r\\n&quot;</span>;
            <span style="color:#0000ff;">echo</span> $b;
            <span style="color:#0000ff;">?&gt;</span></pre></div></div>`,2),Va=[Wa];function Ka(t,s){return p(),f("div",Ua,Va)}const Ja=Q(ja,[["render",Ka]]),Xa="/php-cours/assets/floatingPoint-0b3a2871.svg",Ya={},e8={class:"slide"},t8=m(`<div class="heading">Data Types - Floating-Point</div><div class="content"><p> Float, ou &quot;nombre à virgule flottante&quot;, est un nombre, positif ou négatif, contenant une ou plusieurs décimales. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#0000ff;">&lt;?php</span>
          $a = 1.23;
          $b = 1.0;
          $c = 3.14e-10;
          $d = 4E210;
          $e = 4.0e+210;

          $x = 1.10;
          $y = 1.0;
          $z = -35.59;
          <span style="color:#0000ff;">?&gt;</span></pre></div><img src="`+Xa+'" class="html-css-logo" style="left:36%;top:36%;height:60%;width:60%;"></div>',2),s8=[t8];function n8(t,s){return p(),f("div",e8,s8)}const a8=Q(Ya,[["render",n8]]),i8="/php-cours/assets/arithmetic-e1242fd9.svg",o8={},l8={class:"slide"},r8=m('<div class="heading">Opérateurs arithmétiques</div><div class="content"><p> Les opérateurs arithmétiques sont des opérateurs que vous reconnaîtrez dans l&#39;usage quotidien. </p><img src="'+i8+'" class="html-css-logo" style="left:70%;top:37%;height:50%;"><table class="tg"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Opérateur</span></th><th class="tg-0lax"><span style="font-weight:bold;">Exemple</span></th><th class="tg-0lax"><span style="font-weight:bold;">Explications</span></th></tr></thead><tbody><tr><td class="tg-0lax">+</td><td class="tg-0lax">$x + $y</td><td class="tg-0lax">Addition/Concaténation</td></tr><tr><td class="tg-0lax">-</td><td class="tg-0lax">$x - $y</td><td class="tg-0lax">Soustraction</td></tr><tr><td class="tg-0lax">*</td><td class="tg-0lax">$x * $y</td><td class="tg-0lax">Multiplication</td></tr><tr><td class="tg-0lax">/</td><td class="tg-0lax">$x / $y<br></td><td class="tg-0lax">Division<br></td></tr><tr><td class="tg-0lax">%</td><td class="tg-0lax">$x % $y</td><td class="tg-0lax">Modulo, reste de la division entière</td></tr><tr><td class="tg-0lax">**</td><td class="tg-0lax">$x ** $y</td><td class="tg-0lax">Exponentiation</td></tr></tbody></table></div>',2),c8=[r8];function d8(t,s){return p(),f("div",l8,c8)}const p8=Q(o8,[["render",d8]]),f8="/php-cours/assets/handRecieving-f46a3575.svg",Q8="/php-cours/assets/handGivingMoney-fb231a2f.svg",u8={},h8={class:"slide"},g8=m('<img src="'+f8+'" class="html-css-logo" style="left:1%;top:74%;"><img src="'+Q8+'" class="html-css-logo" style="left:70%;top:74%;"><div class="heading">Opérateurs arithmétiques</div><div class="content grid center"><p class="sub-title"> Exercice: Calcule le salaire mensuel si ton salaire brut en tant que développeur est de 32000€ par an (réaliste dans la région de Toulouse après la formation). Le salaire net est d&#39;environ 75% du salaire annuel. </p></div>',4),b8=[g8];function m8(t,s){return p(),f("div",h8,b8)}const _8=Q(u8,[["render",m8]]),y8={},v8={class:"slide"},x8=e("div",{class:"heading"},"Opérateurs arithmétiques",-1),$8=e("div",{class:"content"},[e("p",null,"Calcule le salaire mensuel"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yudbc4js"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),k8=[x8,$8];function S8(t,s){return p(),f("div",v8,k8)}const M8=Q(y8,[["render",S8]]),L8="/php-cours/assets/mod-c4ca7121.svg",w8="/php-cours/assets/clock-15cff115.svg";const G8={name:"TimeMod",data:function(){return{isActive:!1,mins:0,hours:0,draggedElem:null,time:null}},mounted:function(){this.$nextTick(function(){this.time=this.$refs.time})},methods:{showTime:function(){const t=`${this.mins}`.padStart(2,"0");this.$refs.timestamp.textContent=`${this.hours}:${t}`},updateTime:function(t,s){let n=(Math.round(s/6)+60)%60;t==="hours"?(this.hours=Math.floor(n/5),this.hours===0&&(this.hours=12)):this.mins=n,this.showTime()},setHandPosition:function(t,s){t.style.transform=`rotateZ(${s}deg)`;const n=t.classList.contains("hour-hand");this.updateTime(n?"hours":"minutes",s)},onMouseMove:function(t){if(this.draggedElem){const s=this.draggedElem.parentElement.getBoundingClientRect(),a=t.pageX-s.left.toFixed()-this.draggedElem.parentElement.clientWidth/2,o=t.pageY-s.top.toFixed()-this.draggedElem.parentElement.clientHeight/2;let l=Math.atan2(o,a)*(180/Math.PI);l+=90,this.setHandPosition(this.draggedElem,l)}},onMouseDown:function(t){this.draggedElem=t.target,this.draggedElem.onmousemove=this.onMouseMove,this.time.onmousemove=this.onMouseMove},onMouseUp:function(t){t=t||window.event,t.preventDefault(),this.draggedElem&&(this.draggedElem.onmousemove=null,this.time.onmousemove=null,this.draggedElem=null)}}},z8=t=>(Ve("data-v-39c31f7e"),t=t(),Ke(),t),N8=z8(()=>e("img",{class:"unselectable",src:w8},null,-1)),q8={ref:"timestamp",id:"timestamp"};function P8(t,s,n,a,i,o){return p(),f(i1,null,[e("div",{id:"time",class:"time",onMouseup:s[4]||(s[4]=(...l)=>o.onMouseUp&&o.onMouseUp(...l)),ref:"time"},[N8,e("div",{class:"hand hour-hand",onMousedown:s[0]||(s[0]=(...l)=>o.onMouseDown&&o.onMouseDown(...l)),onMouseup:s[1]||(s[1]=(...l)=>o.onMouseUp&&o.onMouseUp(...l))},null,32),e("div",{class:"hand minute-hand",onMousedown:s[2]||(s[2]=(...l)=>o.onMouseDown&&o.onMouseDown(...l)),onMouseup:s[3]||(s[3]=(...l)=>o.onMouseUp&&o.onMouseUp(...l))},null,32)],544),e("div",null,[e("h2",null,[z("The time is "),e("span",q8,null,512)])])],64)}const T8=Q(G8,[["render",P8],["__scopeId","data-v-39c31f7e"]]),C8={class:"slide"},E8=e("div",{class:"heading"},"Opérateurs arithmétiques",-1),D8={class:"content"},Z8=e("p",null," Exercice: Il est actuellement minuit. Quelle heure sera-t-il après 40 heures passées sur une horloge de 12 heures ? Utilisez l'opérateur modulo % pour calculer l'heure ",-1),F8=e("img",{src:L8,class:"html-css-logo",style:{left:"40%",top:"unset",height:"60%",width:"60%"}},null,-1),A8={__name:"SlidePresentation32",setup(t){return(s,n)=>(p(),f("div",C8,[E8,e("div",D8,[Z8,F8,d(T8)])]))}},H8={},O8={class:"slide"},I8=e("div",{class:"heading"},"Opérateurs arithmétiques",-1),R8=e("div",{class:"content"},[e("p",null,"Calcule le temps"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yudexea6"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),B8=[I8,R8];function j8(t,s){return p(),f("div",O8,B8)}const U8=Q(H8,[["render",j8]]),W8={},V8={class:"slide"},K8=m(`<div class="heading">Opérateurs arithmétiques</div><div class="content"><p>Solution pour l&#39;exo modulo:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">        <span style="color:#557799;">&lt;?php</span>
          <span style="color:#996633;">$hours</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">40</span>;
          <span style="color:#996633;">$clock</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">12</span>;
          <span style="color:#996633;">$time</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">0</span>;
          <span style="color:#996633;">$time</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$hours</span> <span style="color:#333333;">%</span> <span style="color:#996633;">$clock</span>;
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;it is &quot;</span> <span style="color:#333333;">.</span> <span style="color:#996633;">$time</span> <span style="color:#333333;">.</span><span style="background-color:#fff0f0;">&quot; o&#39;clock&quot;</span>;
        <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),J8=[K8];function X8(t,s){return p(),f("div",V8,J8)}const Y8=Q(W8,[["render",X8]]),e4={},t4={class:"slide"},s4=m(`<div class="heading">Opérateurs d&#39;assignation arithmétiques</div><div class="content"><div class="flex-container"><div><table class="tg"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Opérateur</span></th><th class="tg-0lax"><span style="font-weight:bold;">Exemple</span></th><th class="tg-0lax"><span style="font-weight:bold;">Identique à</span></th></tr></thead><tbody><tr><td class="tg-0lax">=</td><td class="tg-0lax">$x = 5</td><td class="tg-0lax">$x = 5</td></tr><tr><td class="tg-0lax">+=</td><td class="tg-0lax">$x += 3</td><td class="tg-0lax">$x = $x + 3</td></tr><tr><td class="tg-0lax">-=</td><td class="tg-0lax">$x -= 3</td><td class="tg-0lax">$x = $x - 3</td></tr><tr><td class="tg-0lax">*=</td><td class="tg-0lax">$x *= 3<br></td><td class="tg-0lax">$x = $x * 3<br></td></tr><tr><td class="tg-0lax">/=</td><td class="tg-0lax">$x /= 3</td><td class="tg-0lax">$x = $x / 3</td></tr><tr><td class="tg-0lax">%=</td><td class="tg-0lax">$x %= 3</td><td class="tg-0lax">$x = $x % 3</td></tr><tr><td class="tg-0lax">**=</td><td class="tg-0lax">$x **= 3</td><td class="tg-0lax">$x = $x ** 3</td></tr></tbody></table></div><div><p>Exemples:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$x</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">5</span>
              <span style="color:#996633;">$x</span> <span style="color:#333333;">+=</span> <span style="color:#0000DD;font-weight:bold;">3</span>
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$x</span> <span style="color:#888888;">#8</span>
              <span style="color:#557799;">?&gt;</span></pre></div><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$x</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">5</span>;
              <span style="color:#996633;">$x</span> <span style="color:#333333;">/=</span> <span style="color:#0000DD;font-weight:bold;">3</span>;
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$x</span>;<span style="color:#888888;">//1.6666666666666667</span>
              <span style="color:#557799;">?&gt;</span></pre></div><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$x</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">5</span>;
              <span style="color:#996633;">$x</span> <span style="color:#333333;">-=</span> <span style="color:#0000DD;font-weight:bold;">3</span>;
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$x</span>; <span style="color:#888888;">//2</span>
              <span style="color:#557799;">?&gt;</span></pre></div></div></div></div>`,2),n4=[s4];function a4(t,s){return p(),f("div",t4,n4)}const i4=Q(e4,[["render",a4]]),o4={},l4={class:"slide"},r4=m(`<div class="heading">Data Types - Strings</div><div class="content"><div style="overflow-y:scroll;height:100%;"><p> Les Strings (chaînes de caractères) sont le type de PHP pour représenter du texte. </p><p> En PHP, les chaînes de caractères sont entourées soit de guillemets simples, soit de guillemets doubles. &#39;bonjour&#39; est identique à &quot;bonjour&quot;. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">            <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$a</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Bonjour&quot;</span>;
              <span style="color:#996633;">$b</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;Bonjour&#39;</span>;
            <span style="color:#557799;">?&gt;</span></pre></div><p> La syntaxe Heredoc constitue une troisième possibilité de délimiter les chaînes : &lt;&lt;&lt;. Après cet opérateur, un identificateur quelconque est indiqué, puis une nouvelle ligne. </p><p><b>Heredoc</b>:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">            <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$str</span> <span style="color:#333333;">=</span> <span style="color:#333333;">&lt;&lt;&lt;</span>EOD
                Exemple de chaîne de caractères
                s&#39;étendant sur plusieurs lignes
                en utilisant la syntaxe heredoc<span style="color:#333333;">.</span>
                EOD;
            <span style="color:#557799;">?&gt;</span></pre></div><br><p><b>Nowdoc</b>:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">            <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$str</span> <span style="color:#333333;">=</span> <span style="color:#333333;">&lt;&lt;&lt;</span><span style="background-color:#fff0f0;">&#39;EOD&#39;</span>
                Un exemple de chaîne de caractères s&#39;étendant sur plusieurs lignes
                en utilisant la syntaxe Nowdoc<span style="color:#333333;">.</span> Les anti<span style="color:#333333;">-</span>slashs sont toujours considérés comme des
                lettres<span style="color:#333333;">.</span> Par exemple \\\\ et \\&#39;<span style="color:#333333;">.</span>
                EOD;

            <span style="color:#557799;">?&gt;</span></pre></div></div></div>`,2),c4=[r4];function d4(t,s){return p(),f("div",l4,c4)}const p4=Q(o4,[["render",d4]]),f4={},Q4={class:"slide"},u4=m('<div class="heading">Data Types - Escape Sequences in String</div><div class="content"><p> Le caractère backslash (\\) a une fonction particulière dans les strings JavaScript. Combiné avec le caractère qui le suit, il représente un caractère qui n&#39;est pas autrement représentable dans le string. </p><div class="flex-container"><div><table class="tg"><thead><tr><th class="tg-0pky"><span style="font-weight:bold;">Sequence</span></th><th class="tg-0pky"><span style="font-weight:bold;">Caractère représenté</span></th></tr></thead><tbody><tr><td class="tg-0pky">\\t</td><td class="tg-0pky">Horizontal tab</td></tr><tr><td class="tg-0pky">\\n</td><td class="tg-0pky">Nouvelle ligne</td></tr><tr><td class="tg-0pky">\\r</td><td class="tg-0pky">Retour à la ligne</td></tr><tr><td class="tg-0pky">\\{</td><td class="tg-0pky">Left brace</td></tr><tr><td class="tg-0pky">\\}</td><td class="tg-0pky">Right brace</td></tr><tr><td class="tg-0pky">\\0 through \\777</td><td class="tg-0pky">ASCII octal value</td></tr></tbody></table></div><div><table class="tg"><thead><tr><th class="tg-0pky"><span style="font-weight:bold;">Sequence</span></th><th class="tg-0pky"><span style="font-weight:bold;">Caractère représenté</span></th></tr></thead><tbody><tr><td class="tg-0pky">\\&quot;</td><td class="tg-0pky">Guillemets doubles</td></tr><tr><td class="tg-0pky">\\&#39;</td><td class="tg-0pky">Apostrophe ou Guillemets simples</td></tr><tr><td class="tg-0pky">\\\\</td><td class="tg-0pky">Backslash</td></tr><tr><td class="tg-0pky">\\$</td><td class="tg-0pky">Dollar sign</td></tr><tr><td class="tg-0pky">\\[</td><td class="tg-0pky">Left bracket</td></tr><tr><td class="tg-0pky">\\]</td><td class="tg-0pky">Right bracket</td></tr></tbody></table></div></div></div>',2),h4=[u4];function g4(t,s){return p(),f("div",Q4,h4)}const b4=Q(f4,[["render",g4]]),ue="/php-cours/assets/heart-cded5529.svg",m4={},_4={class:"slide"},y4=m('<div class="heading">Data Types - Strings</div><div class="content"><img src="'+ue+'" class="html-css-logo" style="left:70%;top:73%;"><img src="'+ue+'" class="html-css-logo" style="left:50%;top:75%;"><img src="'+ue+`" class="html-css-logo" style="left:10%;top:74%;"><p> Exercice : Assignez la phrase de l&#39;exercice à une variable (<b>$text</b>) et imprimez-la avec <b>echo $text</b>; </p><p> Phrase: <span style="color:#a31515;">&quot;j&#39;adore&quot; tellement Perl que je n&#39;arrive pas à y croire! Le meilleur langage de programmation au monde, je vous le jure ;)\\</span></p><div class="codeblock"><pre style="margin:0;line-height:125%;"><span style="color:#008000;">#Perl example:</span>
          @P=split<span style="color:#a31515;">//</span>,<span style="color:#a31515;">&quot;.URRUU\\c8R&quot;</span>;@d=split<span style="color:#a31515;">//</span>,<span style="color:#a31515;">&quot;\\nrekcah xinU / lreP rehtona tsuJ&quot;</span>;<span style="color:#0000ff;">sub </span>p{
            @p{<span style="color:#a31515;">&quot;r$p&quot;</span>,<span style="color:#a31515;">&quot;u$p&quot;</span>}=(P,P);pipe<span style="color:#a31515;">&quot;r$p&quot;</span>,<span style="color:#a31515;">&quot;u$p&quot;</span>;++$p;($q*=2)+=$f=!fork;map{$P=$P[$f^ord
            ($p{$_})&amp;6];$p{$_}=<span style="color:#a31515;">/ ^$P/ix</span>?$P:close$_}keys%p}p;p;p;p;p;map{$p{$_}=~<span style="color:#a31515;">/^[P.]/</span>&amp;&amp;
            close$_}%p;wait <span style="color:#0000ff;">until</span>$?;map{<span style="color:#a31515;">/^r/</span>&amp;&amp;<span style="color:#a31515;">&lt;$_&gt;</span>}%p;$_=$d[$q];sleep rand(2)<span style="color:#0000ff;">if</span><span style="color:#a31515;">/\\S/</span>;<span style="color:#0000ff;">print</span>
          </pre></div><p>Perl a été conçu par Larry Wall qui a étudié la linguistique. MDR</p></div>`,2),v4=[y4];function x4(t,s){return p(),f("div",_4,v4)}const $4=Q(m4,[["render",x4]]),k4={},S4={class:"slide"},M4=e("div",{class:"heading"},"Data Types - Strings",-1),L4=e("div",{class:"content"},[e("p",null,"Échapper la chaîne de caractères"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yudj8k7m"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),w4=[M4,L4];function G4(t,s){return p(),f("div",S4,w4)}const z4=Q(k4,[["render",G4]]),N4="/php-cours/assets/chain-a17c67ea.svg",q4={},P4={class:"slide"},T4=m(`<div class="heading">Data Types - String - Concatenation</div><div class="content"><p> L&#39;une des fonctions intégrées de PHP est la possibilité de concaténer des chaînes de caractères. </p><p>Using <b>.</b> operator</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$s1</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;Quoi &quot;</span>;
            <span style="color:#996633;">$s2</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;de &quot;</span>;
            <span style="color:#996633;">$s3</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;neuf&quot;</span>;
            <span style="color:#996633;">$s4</span><span style="color:#333333;">=</span><span style="color:#996633;">$s1</span><span style="color:#333333;">.</span><span style="color:#996633;">$s2</span><span style="color:#333333;">.</span><span style="color:#996633;">$s3</span>;
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$s4</span>;
          <span style="color:#557799;">?&gt;</span></pre></div><img src="`+N4+'" class="html-css-logo" style="left:40%;top:50%;width:60%;height:40%;"></div>',2),C4=[T4];function E4(t,s){return p(),f("div",P4,C4)}const D4=Q(q4,[["render",E4]]),Z4={},F4={class:"slide"},A4=m(`<div class="heading">Data Types - String - Concatenation / parsing</div><div class="content"><p>Using <b>{ }</b></p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
          <span style="color:#996633;">$s1</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;Quoi &quot;</span>;
          <span style="color:#996633;">$s2</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;de &quot;</span>;
          <span style="color:#996633;">$s3</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;neuf&quot;</span>;
          <span style="color:#996633;">$s4</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;</span><span style="background-color:#eeeeee;">{</span><span style="color:#996633;">$s1</span><span style="background-color:#eeeeee;">}{</span><span style="color:#996633;">$s2</span><span style="background-color:#eeeeee;">}{</span><span style="color:#996633;">$s3</span><span style="background-color:#eeeeee;">}</span><span style="background-color:#fff0f0;">&quot;</span>;
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$s4</span>;
        <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),H4=[A4];function O4(t,s){return p(),f("div",F4,H4)}const I4=Q(Z4,[["render",O4]]),R4={},B4={class:"slide"},j4=m(`<div class="heading">Data Types - String - Concatenation / parsing</div><div class="content"><p>Sans opérateur</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
          <span style="color:#996633;">$s1</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;Quoi &quot;</span>;
          <span style="color:#996633;">$s2</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;de &quot;</span>;
          <span style="color:#996633;">$s3</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;neuf&quot;</span>;
          <span style="color:#996633;">$s4</span><span style="color:#333333;">=</span><span style="background-color:#fff0f0;">&quot;</span><span style="background-color:#eeeeee;">$s1$s2$s3</span><span style="background-color:#fff0f0;">&quot;</span>;
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$s4</span>;
        <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),U4=[j4];function W4(t,s){return p(),f("div",B4,U4)}const V4=Q(R4,[["render",W4]]),K4={},J4={class:"slide"},X4=e("div",{class:"heading"}," Data Types - String - Guillemets simples et guillemets doubles ",-1),Y4=e("div",{class:"content"},[e("p",null," Avec des guillemets simples, les variables et les séquences d'échappement pour les caractères spéciaux ne seront pas étendues. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yudm4n2v"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ei=[X4,Y4];function ti(t,s){return p(),f("div",J4,ei)}const si=Q(K4,[["render",ti]]),ni={},ai={class:"slide"},ii=m('<div class="heading">Data Types - String - parsing performance</div><div class="content"><p> Les règles du style &quot;performance maximale du code&quot; sont les suivantes </p><br><p><b>1:</b> Utilisez des chaînes de caractères à double <span style="color:#777bb3ff;">guillemet</span> pour la concaténation. </p><p><b>2:</b> Mettez vos variables dans la notation &quot;Ceci est une <span style="color:#777bb3ff;">{$variable}</span>&quot;, car c&#39;est la méthode la plus <span style="color:#777bb3ff;">rapide</span> qui permet encore des expansions <span style="color:#777bb3ff;">complexes</span>. </p><p><b>3:</b> N&#39;hésitez pas à utiliser des chaînes entre <span style="color:#777bb3ff;">guillemets</span> pour les chaînes <b><span style="color:#777bb3ff;">TOTALEMENT</span></b> littérales. Exemple: &#39;This is a literal string&#39;. Aucune variable n&#39;est interprétée et injectée dans la chaîne. </p></div>',2),oi=[ii];function li(t,s){return p(),f("div",ai,oi)}const ri=Q(ni,[["render",li]]),ci={class:"slide"},di=e("div",{class:"heading"},"Data Types - Booleans",-1),pi={class:"content"},fi=e("p",null,[z(" Une valeur booléenne représente la vérité ou la fausseté, on ou off, oui ou non. Il n'y a que deux valeurs possibles de ce type. Les mots réservés "),e("b",null,"true"),z(" et "),e("b",null,"false"),z(" évaluent ces deux valeurs ")],-1),Qi={__name:"SlidePresentation45",setup(t){return(s,n)=>(p(),f("div",ci,[di,e("div",pi,[fi,d(Pt)])]))}},ui={},hi={class:"slide"},gi=e("div",{class:"heading"},"Data Types - Booleans",-1),bi=e("div",{class:"content"},[e("p",null,[z(" Les valeurs suivantes se convertissent en, et donc fonctionnent comme, "),e("b",null,"false"),z(". Toutes les "),e("b",null,"autres"),z(" valeurs sont converties en, et fonctionnent comme, "),e("b",null,"true")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yufrqxnw"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),mi=[gi,bi];function _i(t,s){return p(),f("div",hi,mi)}const yi=Q(ui,[["render",_i]]),vi="/php-cours/assets/none-e2d8174e.svg",xi={},$i={class:"slide"},ki=m('<div class="heading">Data Types - null</div><div class="content"><div class="flex-container"><div><p> Le mot-clé null est utilisé pour définir une valeur nulle, ou aucune valeur du tout. </p><p> null n&#39;est pas la même chose que 0, False ou une chaîne vide. null est un type de données à part entière et seul null peut être null. </p></div><div style="width:55%;"><img src="'+vi+'" style="width:100%;height:100%;"></div></div></div>',2),Si=[ki];function Mi(t,s){return p(),f("div",$i,Si)}const Li=Q(xi,[["render",Mi]]),wi="/php-cours/assets/inception-var-320c04c6.svg",Gi={},zi={class:"slide"},Ni=m(`<div class="heading">Variables - Variable Variables</div><div class="content"><div class="flex-container"><div style="width:77%;"><p> Vous pouvez faire référence à la valeur d&#39;une variable dont le nom est stocké dans une autre variable. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
                <span style="color:#996633;">$box</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;inception&#39;</span>;
                <span style="color:#996633;">$$box</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;Leonardo DiCaprio&#39;</span>; <span style="color:#888888;">//le double $$ est intentionnel et non une faute de frappe</span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$inception</span>; <span style="color:#888888;">//La variable $inception existe à cause de la deuxième instruction</span>
              <span style="color:#557799;">?&gt;</span></pre></div><br><p> Après l&#39;exécution de la deuxième instruction, la variable $inception a la valeur &quot;Leonardo DiCaprio&quot;. </p></div><div style="width:18%;"><img src="`+wi+'" style="width:95%;"></div></div></div>',2),qi=[Ni];function Pi(t,s){return p(),f("div",zi,qi)}const Ti=Q(Gi,[["render",Pi]]),Ci="/php-cours/assets/sicssor-155a32e3.svg",Ei={},Di={class:"slide"},Zi=m(`<div class="heading">Variables - References</div><div class="content"><div class="flex-container"><div><p> En PHP, les références sont le moyen de créer des alias de variables </p><p> Après l&#39;affectation, les deux variables sont des noms alternatifs pour la même valeur. La suppression (unset())d&#39;une variable aliasée n&#39;affecte pas les autres noms de la valeur de cette variable. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$white</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;snow&quot;</span>;
              <span style="color:#996633;">$black</span> <span style="color:#333333;">=&amp;</span> <span style="color:#996633;">$white</span>;
              <span style="color:#007020;">unset</span>(<span style="color:#996633;">$white</span>);
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$black</span>;
              <span style="color:#557799;">?&gt;</span></pre></div></div><div style="width:50%;"><img src="`+Ci+'" style="width:100%;height:100%;"></div></div></div>',2),Fi=[Zi];function Ai(t,s){return p(),f("div",Di,Fi)}const Hi=Q(Ei,[["render",Ai]]),Oi={},Ii={class:"slide"},Ri=e("div",{class:"heading"},"Variables - References",-1),Bi=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yufzp9bp"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ji=[Ri,Bi];function Ui(t,s){return p(),f("div",Ii,ji)}const Wi=Q(Oi,[["render",Ui]]),Vi={},Ki={class:"slide"},Ji=e("div",{class:"heading"},"Variables - Constants",-1),Xi=e("div",{class:"content"},[e("p",null,[z(" Une "),e("span",{style:{color:"#777bb3ff"}},"constante"),z(" est un identifiant pour une valeur simple ; seules les valeurs scalaires - Boolean, integer, double/float, et string - peuvent être des constantes. Une fois définie, la valeur d'une constante "),e("span",{style:{color:"#777bb3ff"}},"ne peut pas changer")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yug25m4g"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Yi=[Ji,Xi];function eo(t,s){return p(),f("div",Ki,Yi)}const to=Q(Vi,[["render",eo]]),so="/php-cours/assets/arrayIndex-4cf84bf9.svg",no="/php-cours/assets/arrayboxes-c221b913.svg",ao={},io={class:"slide"},oo=m('<div class="heading">Arrays</div><div class="content"><div class="flex-container"><div style="width:78%;"><p> Une array est une <b>collection ordonnée de valeurs</b>. Chaque valeur est appelée un élément, et chaque élément a une position numérique dans le array, appelée son index. Les arrays PHP sont non typés : un élément de tableau peut être de <b>n&#39;importe quel type</b>, et différents éléments d&#39;un même tableau peuvent être de types différents. </p></div><div style="width:20%;"><img src="'+so+'" style="width:100%;"></div></div><img src="'+no+'" class="html-css-logo" style="left:10%;top:50%;height:45%;width:45%;"></div>',2),lo=[oo];function ro(t,s){return p(),f("div",io,lo)}const co=Q(ao,[["render",ro]]),po="/php-cours/assets/knitting-5fcc9b95.svg",fo={},Qo={class:"slide"},uo=m(`<div class="heading">Creating Arrays</div><div class="content"><p>Il existe deux façons de créer des tableaux indexés :</p><p> L&#39;indice peut être attribué automatiquement (l&#39;indice commence toujours à 0), comme ceci : </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$cars</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Volvo&quot;</span>, <span style="background-color:#fff0f0;">&quot;BMW&quot;</span>, <span style="background-color:#fff0f0;">&quot;Toyota&quot;</span>);
          <span style="color:#557799;">?&gt;</span></pre></div><p>ou l&#39;index peut être attribué manuellement :</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$cars</span>[<span style="color:#0000DD;font-weight:bold;">0</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Volvo&quot;</span>;
            <span style="color:#996633;">$cars</span>[<span style="color:#0000DD;font-weight:bold;">1</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;BMW&quot;</span>;
            <span style="color:#996633;">$cars</span>[<span style="color:#0000DD;font-weight:bold;">2</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Toyota&quot;</span>; 
          <span style="color:#557799;">?&gt;</span></pre></div><img src="`+po+'" class="html-css-logo" style="left:50%;top:55%;height:40%;width:40%;"></div>',2),ho=[uo];function go(t,s){return p(),f("div",Qo,ho)}const bo=Q(fo,[["render",go]]),mo={},_o={class:"slide"},yo=m(`<div class="heading">Lecture et écriture des éléments d&#39;une array</div><div class="content"><p> Vous accédez à un élément d&#39;une liste en utilisant l&#39;opérateur <b>[ ]</b>. Une référence au array doit apparaître à gauche des crochets. Une expression arbitraire dont la valeur est un nombre <b>entier non négatif</b> doit se trouver à l&#39;intérieur des parenthèses. Vous pouvez utiliser cette syntaxe pour lire et écrire la valeur d&#39;un élément d&#39;une liste </p><div class="codeblock"><pre style="margin:0;line-height:125%;">        <span style="color:#557799;">&lt;?php</span>
          <span style="color:#996633;">$a</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;monde&quot;</span>, <span style="background-color:#fff0f0;">&quot;bonjour&quot;</span>, <span style="background-color:#fff0f0;">&quot;mec&quot;</span>); <span style="color:#888888;">// Commencez par créer une liste</span>
          <span style="color:#996633;">$value</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$a</span>[<span style="color:#0000DD;font-weight:bold;">0</span>];  <span style="color:#888888;">// Lecture de l&#39;élément index 0</span>
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$value</span> <span style="color:#333333;">.</span> <span style="background-color:#fff0f0;">&quot;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\r\\n</span><span style="background-color:#fff0f0;">&quot;</span>;

          <span style="color:#996633;">$i</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">1</span>;
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$a</span>[<span style="color:#996633;">$i</span>] <span style="color:#333333;">.</span> <span style="background-color:#fff0f0;">&quot;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\r\\n</span><span style="background-color:#fff0f0;">&quot;</span>; <span style="color:#888888;">//bonjour</span>
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$a</span>[<span style="color:#996633;">$i</span> <span style="color:#333333;">+</span> <span style="color:#0000DD;font-weight:bold;">1</span>] <span style="color:#333333;">.</span> <span style="background-color:#fff0f0;">&quot;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\r\\n</span><span style="background-color:#fff0f0;">&quot;</span>; <span style="color:#888888;">//mec</span>
          
          <span style="color:#996633;">$a</span>[<span style="color:#0000DD;font-weight:bold;">2</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;changement&quot;</span>;
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$a</span>[<span style="color:#0000DD;font-weight:bold;">2</span>]; <span style="color:#888888;">//changement</span>
        <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),vo=[yo];function xo(t,s){return p(),f("div",_o,vo)}const $o=Q(mo,[["render",xo]]),ko={},So={class:"slide"},Mo=e("div",{class:"heading"},"Array",-1),Lo=e("div",{class:"content"},[e("p",null,[z(" Exercice : enregistrez 5 variables prédéfinies dans un array et donnez le contenu du array. Pour imprimer le contenu du array, utilisez "),e("b",null,"echo"),z(" et concaténer les éléments du liste avec le symbole "),e("b",null,"."),z(". ")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yugdwnjz"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),wo=[Mo,Lo];function Go(t,s){return p(),f("div",So,wo)}const zo=Q(ko,[["render",Go]]),No="/php-cours/assets/ruler-1d8808f6.svg",qo={},Po={class:"slide"},To=m(`<div class="heading">Array count/length</div><div class="content"><p> La function count() spécifie le nombre d&#39;éléments du array. Sa valeur est supérieure d&#39;une unité à l&#39;indice le plus élevé du array </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$a</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(); <span style="color:#888888;">// =&gt; 0 : la liste n&#39;a pas d&#39;éléments</span>
            <span style="color:#996633;">$b</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;a&quot;</span>,<span style="background-color:#fff0f0;">&quot;b&quot;</span>,<span style="background-color:#fff0f0;">&quot;c&quot;</span>); <span style="color:#888888;">// =&gt; 3 : l&#39;indice le plus élevé est 2, la longueur est 3</span>
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#007020;">count</span>(<span style="color:#996633;">$a</span>) <span style="color:#333333;">.</span> <span style="background-color:#fff0f0;">&quot;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\r\\n</span><span style="background-color:#fff0f0;">&quot;</span>; <span style="color:#888888;">//0</span>
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#007020;">count</span>(<span style="color:#996633;">$b</span>); <span style="color:#888888;">//3</span>
          <span style="color:#557799;">?&gt;</span></pre></div><img src="`+No+'" class="html-css-logo" style="left:3%;top:65%;height:40%;width:105%;"></div>',2),Co=[To];function Eo(t,s){return p(),f("div",Po,Co)}const Do=Q(qo,[["render",Eo]]);const Zo={name:"LightSwitch",data:function(){return{extraItems:["Bacon","Butter","Cereal","Coffee","Creamer","Fruit","Mayo","Milk","Yogurt"],items:["Meat","Eggs","Juice","Vegetables"],theArrayUl:this.$refs.arrayui}},mounted:function(){this.$nextTick(function(){this.theArrayUl=this.$refs.arrayui})},methods:{pushListener:function(){const t=this.extraItems[Math.floor(Math.random()*this.extraItems.length)];this.items.push(t)},popListener:function(){this.items.pop()},reverseListener:function(){this.items.reverse()},sortListener:function(){this.items.sort()}}},Fo={class:"maincontent"},Ao={id:"arrayContainer"},Ho={id:"theArrayUl"},Oo={id:"controls"};function Io(t,s,n,a,i,o){return p(),f("div",Fo,[e("div",Ao,[e("ul",Ho,[(p(!0),f(i1,null,D2(t.items,(l,c)=>(p(),f("li",{class:"listItem show",key:l.id},[z(F1(l)+" ",1),e("div",null,F1(c),1)]))),128))])]),e("div",Oo,[e("button",{id:"push",onClick:s[0]||(s[0]=(...l)=>o.pushListener&&o.pushListener(...l))},"array_push"),e("button",{id:"pop",onClick:s[1]||(s[1]=(...l)=>o.popListener&&o.popListener(...l))},"array_pop"),e("button",{id:"reverse",onClick:s[2]||(s[2]=(...l)=>o.reverseListener&&o.reverseListener(...l))},"array_reverse"),e("button",{id:"sort",onClick:s[3]||(s[3]=(...l)=>o.sortListener&&o.sortListener(...l))},"sort")])])}const Ct=Q(Zo,[["render",Io],["__scopeId","data-v-87ac2b40"]]),Ro={class:"slide"},Bo=e("div",{class:"heading"},"Array Manipulation",-1),jo={class:"content"},Uo=e("p",null,[z(" Il existe de nombreuses fonctions de array directement disponibles sur un type de array. "),e("b",null,"Je ne vais pas les détailler"),z(" car nous n'avons pas encore abordé les fonctions/methods et cela pourrait prêter à confusion. Cependant, je veux donner un aperçu "),e("b",null,"rapide"),z(" de ce qui est possible avec les arrays. ")],-1),Wo={__name:"SlidePresentation57",setup(t){return(s,n)=>(p(),f("div",Ro,[Bo,e("div",jo,[Uo,d(Ct)])]))}},Vo="/php-cours/assets/ford-75b29f1c.svg",Ko="/php-cours/assets/Ford_Mustang-beda808a.svg",Jo={},Xo={class:"slide"},Yo=m(`<div class="heading">Associative Arrays</div><div class="content"><div style="width:100%;"><p> Les Associative Arrays sont utilisés pour stocker des valeurs de données dans des paires clé:valeur. Un Associative Array est une collection qui est ordonnée, modifiable et qui ne permet pas les doublons. </p><p>Il existe deux façons de créer un tableau associatif :</p></div><div class="codeblock"><pre style="margin:0;line-height:125%;">                    <span style="color:#557799;">&lt;?php</span>
                      <span style="color:#996633;">$car</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;brand&quot;</span><span style="color:#333333;">=&gt;</span><span style="background-color:#fff0f0;">&quot;Ford&quot;</span>, <span style="background-color:#fff0f0;">&quot;model&quot;</span><span style="color:#333333;">=&gt;</span><span style="background-color:#fff0f0;">&quot;Mustang&quot;</span>, <span style="background-color:#fff0f0;">&quot;year&quot;</span><span style="color:#333333;">=&gt;</span><span style="background-color:#fff0f0;">&quot;2001&quot;</span>);
                    <span style="color:#557799;">?&gt;</span></pre></div><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$car</span>[<span style="background-color:#fff0f0;">&#39;brand&#39;</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Ford&quot;</span>;
            <span style="color:#996633;">$car</span>[<span style="background-color:#fff0f0;">&#39;model&#39;</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Mustang&quot;</span>;
            <span style="color:#996633;">$car</span>[<span style="background-color:#fff0f0;">&#39;year&#39;</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;2001&quot;</span>; 
          <span style="color:#557799;">?&gt;</span></pre></div><img src="`+Vo+'" class="html-css-logo" style="left:60%;top:51%;"><img src="'+Ko+'" class="html-css-logo" style="left:50%;top:72%;width:40%;"></div>',2),el=[Yo];function tl(t,s){return p(),f("div",Xo,el)}const sl=Q(Jo,[["render",tl]]),nl={},al={class:"slide"},il=e("div",{class:"heading"},"Associative Arrays",-1),ol=e("div",{class:"content"},[e("p",null,"Les clés nommées peuvent ensuite être utilisées dans un script"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yugq5kd4"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ll=[il,ol];function rl(t,s){return p(),f("div",al,ll)}const cl=Q(nl,[["render",rl]]),dl={},pl={class:"slide"},fl=e("div",{class:"heading"},"Associative Array",-1),Ql=e("div",{class:"content"},[e("p",null,[e("b",null,"Exercice"),z(" : Créez un Associative Array de vous-même. Quels sont les attributs qu'il pourrait être intéressant de connaître à votre sujet ? Exemple : "),e("b",null,"prénom, nom de famille, sexe")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yugqdh64"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ul=[fl,Ql];function hl(t,s){return p(),f("div",pl,ul)}const gl=Q(dl,[["render",hl]]),bl={},ml={class:"slide"},_l=e("div",{class:"heading"},"Associative Array",-1),yl=e("div",{class:"content"},[e("p",null," Les Associative Array sont modifiables, ce qui signifie que nous pouvons modifier, ajouter ou supprimer des éléments après la création du assoc (Associative Array). "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yugruh5k"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),vl=[_l,yl];function xl(t,s){return p(),f("div",ml,vl)}const $l=Q(bl,[["render",xl]]),kl="/php-cours/assets/scale-bc0842b9.svg",Sl={},Ml={class:"slide"},Ll=m('<div class="heading">Opérateurs de comparaison</div><div class="content"><div class="flex-container"><div><table class="tg" style="font-size:0.8rem;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Operator</span></th><th class="tg-0lax"><span style="font-weight:bold;">Nom</span></th><th class="tg-0lax"><span style="font-weight:bold;">Exemple</span></th></tr></thead><tbody><tr><td class="tg-0lax">==</td><td class="tg-0lax">Egale</td><td class="tg-0lax">x == y</td></tr><tr><td class="tg-0lax">===</td><td class="tg-0lax">Identique (egale,même type)</td><td class="tg-0lax">x === y</td></tr><tr><td class="tg-0lax">!=</td><td class="tg-0lax">Non égal</td><td class="tg-0lax">x != y</td></tr><tr><td class="tg-0lax">&lt;&gt;</td><td class="tg-0lax">Non égal</td><td class="tg-0lax">x &lt;&gt; y</td></tr><tr><td class="tg-0lax">!==</td><td class="tg-0lax">Non Identique</td><td class="tg-0lax">x !== y</td></tr><tr><td class="tg-0lax">&gt;</td><td class="tg-0lax">Supérieur à</td><td class="tg-0lax">x &gt; y<br></td></tr><tr><td class="tg-0lax">&lt;</td><td class="tg-0lax">Inférieur à</td><td class="tg-0lax">x &lt; y</td></tr><tr><td class="tg-0lax">&gt;=</td><td class="tg-0lax">Supérieur ou égal à</td><td class="tg-0lax">x &gt;= y</td></tr><tr><td class="tg-0lax">&lt;=</td><td class="tg-0lax">Inférieur ou égal à</td><td class="tg-0lax">x &lt;= y</td></tr></tbody></table></div><div><p> Les opérateurs de comparaison sont utilisés pour comparer deux valeurs et renvoyer un résultat booléen, que nous testerons et sur lequel nous agirons dans une déclaration et un programme plus larges </p><img src="'+kl+'" style="width:50%;"></div></div></div>',2),wl=[Ll];function Gl(t,s){return p(),f("div",Ml,wl)}const zl=Q(Sl,[["render",Gl]]),Nl="/php-cours/assets/scale1-2-f86bad33.svg",ql="/php-cours/assets/scale20-1-aee9a237.svg",A0="/php-cours/assets/scale20-20-f261dabc.svg",Pl={},Tl={class:"slide"},Cl=m('<div class="heading">Opérateurs de comparaison</div><div class="content"><div class="flex-container"><div><table class="tg"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Operator exemple</span></th><th class="tg-0lax"><span style="font-weight:bold;">Illustration</span></th><th class="tg-0lax"><span style="font-weight:bold;">Résultat</span></th></tr></thead><tbody><tr><td class="tg-0lax">1 &lt; 2</td><td class="tg-0lax"><img src="'+Nl+'" style="width:47%;"></td><td class="tg-0lax"><span style="color:rgb(2, 85, 27);"><b>True</b></span></td></tr><tr><td class="tg-0lax">2.0 &gt;= 1</td><td class="tg-0lax"><img src="'+ql+'" style="width:47%;"></td><td class="tg-0lax"><span style="color:rgb(2, 85, 27);"><b>True</b></span></td></tr></tbody></table></div><div><table class="tg"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Operator exemple</span></th><th class="tg-0lax"><span style="font-weight:bold;">Illustration</span></th><th class="tg-0lax"><span style="font-weight:bold;">Résultat</span></th></tr></thead><tbody><tr><td class="tg-0lax">2.0 == 2.0</td><td class="tg-0lax"><img src="'+A0+'" style="width:60%;"></td><td class="tg-0lax"><span style="color:rgb(2, 85, 27);"><b>True</b></span></td></tr><tr><td class="tg-0lax">2.0 != 2.0</td><td class="tg-0lax"><img src="'+A0+'" style="width:60%;"></td><td class="tg-0lax"><span style="color:red;"><b>False</b></span></td></tr></tbody></table></div></div></div>',2),El=[Cl];function Dl(t,s){return p(),f("div",Tl,El)}const Zl=Q(Pl,[["render",Dl]]),Fl="/php-cours/assets/range-1e754a26.svg",Al={},Hl={class:"slide"},Ol=m(`<div class="heading">Opérateurs de comparaison - spaceship</div><div class="content"><div class="flex-container"><div style="width:57%;"><p><b>Cet opérateur &lt;=&gt; offre une comparaison combinée</b></p><p>- Retourne 0 si les valeurs de part et d&#39;autre sont égales</p><p>- Retourne 1 si la valeur de gauche est supérieure</p><p>- Retourne -1 si la valeur de droite est plus grande</p><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
                <span style="color:#888888;">// Comparing Integers</span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#0000DD;font-weight:bold;">1</span> <span style="color:#333333;">&lt;=&gt;</span> <span style="color:#0000DD;font-weight:bold;">1</span>; <span style="color:#888888;">// outputs 0</span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#0000DD;font-weight:bold;">3</span> <span style="color:#333333;">&lt;=&gt;</span> <span style="color:#0000DD;font-weight:bold;">4</span>; <span style="color:#888888;">// outputs -1</span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#0000DD;font-weight:bold;">4</span> <span style="color:#333333;">&lt;=&gt;</span> <span style="color:#0000DD;font-weight:bold;">3</span>; <span style="color:#888888;">// outputs 1</span>

                <span style="color:#888888;">// String Comparison</span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;a&quot;</span> <span style="color:#333333;">&lt;=&gt;</span> <span style="background-color:#fff0f0;">&quot;a&quot;</span>; <span style="color:#888888;">// outputs 0 </span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;m&quot;</span> <span style="color:#333333;">&lt;=&gt;</span> <span style="background-color:#fff0f0;">&quot;y&quot;</span>; <span style="color:#888888;">// outputs -1</span>
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;y&quot;</span> <span style="color:#333333;">&lt;=&gt;</span> <span style="background-color:#fff0f0;">&quot;c&quot;</span>; <span style="color:#888888;">// outputs 1</span>
              <span style="color:#557799;">?&gt;</span></pre></div></div><div style="width:42%;"><img src="`+Fl+'" style="width:95%;"></div></div></div>',2),Il=[Ol];function Rl(t,s){return p(),f("div",Hl,Il)}const Bl=Q(Al,[["render",Rl]]),jl={},Ul={class:"slide"},Wl=e("div",{class:"heading"},"Opérateurs de comparaison - Quiz",-1),Vl=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://docs.google.com/forms/d/e/1FAIpQLScP5xI3CL5xsW1NHLSrBd3M7fC7aBi0DheBGSPr0BVBTRDisw/viewform?embedded=true"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Kl=[Wl,Vl];function Jl(t,s){return p(),f("div",Ul,Kl)}const Xl=Q(jl,[["render",Jl]]),Yl="/php-cours/assets/andornot-701dd41a.svg",er={},tr={class:"slide"},sr=m('<div class="heading">Opérateurs logiques</div><div class="content"><table class="tg" style="width:100%;height:50%;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Operator</span></th><th class="tg-0lax"><span style="font-weight:bold;">Alternative</span></th><th class="tg-0lax"><span style="font-weight:bold;">Description</span></th><th class="tg-0lax"><span style="font-weight:bold;">Exemple</span></th></tr></thead><tbody><tr><td class="tg-0lax">and</td><td class="tg-0lax">&amp;&amp;</td><td class="tg-0lax"> Retourne Vrai si les deux déclarations sont vraies </td><td class="tg-0lax">$x &lt; 5 and $x &lt; 10</td></tr><tr><td class="tg-0lax">or</td><td class="tg-0lax">||</td><td class="tg-0lax"> Renvoie Vrai si l&#39;une des déclarations est vraie. </td><td class="tg-0lax">$x &lt; 5 or $x &lt; 4</td></tr><tr><td class="tg-0lax">!</td><td class="tg-0lax"></td><td class="tg-0lax"> Inverse le résultat, renvoie Faux si le résultat est vrai. </td><td class="tg-0lax">!($x &lt; 5)</td></tr><tr><td class="tg-0lax">xor</td><td class="tg-0lax"></td><td class="tg-0lax"> Retourne Vrai lorsque l&#39;une ou l&#39;autre des deux entrées est vraie, mais pas les deux. </td><td class="tg-0lax">$x &lt; 5 xor $x &lt; 10</td></tr></tbody></table><img src="'+Yl+'" style="width:48%;margin-top:1%;"></div>',2),nr=[sr];function ar(t,s){return p(),f("div",tr,nr)}const ir=Q(er,[["render",ar]]),or={},lr={class:"slide"},rr=m(`<div class="heading">Opérateurs logiques - and</div><div class="content"><p> Elle donne <b>True</b> si les <b>deux conditions</b> sont <b>True</b>. Et elle donne <b>False</b> si <b>l&#39;une ou l&#39;autre</b> des conditions a ou b est <b>False</b>. </p><table class="tg" style="width:100%;height:50%;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">a</span></th><th class="tg-0lax"><span style="font-weight:bold;">b</span></th><th class="tg-0lax"><span style="font-weight:bold;">a and b</span></th></tr></thead><tbody><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td></tr><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#800400;">False</td></tr></tbody></table><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">True</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//true</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">False</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//false</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">False</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//false</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">True</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//false</span>
          <span style="color:#557799;">?&gt;</span>
          </pre></div></div>`,2),cr=[rr];function dr(t,s){return p(),f("div",lr,cr)}const pr=Q(or,[["render",dr]]),fr="/php-cours/assets/andGate-e52be862.svg",Qr={},ur={class:"slide"},hr=e("div",{class:"heading"},"Logic Gates - AND",-1),gr=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://logic.ly/embed/?document_path=/lessons/documents/and-gate.logicly",style:{width:"70%",display:"inline-block"}},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")]),e("div",{style:{display:"inline-block","padding-left":"2%",width:"29%"}},[e("img",{src:fr,style:{"padding-top":"10%",width:"45%"}})])],-1),br=[hr,gr];function mr(t,s){return p(),f("div",ur,br)}const _r=Q(Qr,[["render",mr]]),yr={},vr={class:"slide"},xr=m(`<div class="heading">Opérateurs logiques - or</div><div class="content"><p> Comme l&#39;opérateur <b>and</b>, l&#39;opérateur <b>or</b> vérifie plusieurs conditions. Mais il renvoie <b>True</b> lorsque <b>l&#39;une ou l&#39;autre ou les deux conditions</b> individuelles sont vraies (True) : </p><table class="tg" style="width:100%;height:50%;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">a</span></th><th class="tg-0lax"><span style="font-weight:bold;">b</span></th><th class="tg-0lax"><span style="font-weight:bold;">a or b</span></th></tr></thead><tbody><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td></tr><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#008000;">True</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td></tr></tbody></table><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">True</span> <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//true</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">False</span> <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//true</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">False</span> <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//false</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">True</span> <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//true</span>
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),$r=[xr];function kr(t,s){return p(),f("div",vr,$r)}const Sr=Q(yr,[["render",kr]]),Mr="/php-cours/assets/orGate-3d360db0.svg",Lr={},wr={class:"slide"},Gr=e("div",{class:"heading"},"Logic Gates - OR",-1),zr=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://logic.ly/embed/?document_path=/lessons/documents/or-gate.logicly",style:{width:"70%",display:"inline-block"}},[e("iframe",{src:"lightswitch.html",width:"70%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")]),e("div",{style:{display:"inline-block","padding-left":"2%",width:"29%"}},[e("img",{src:Mr,style:{"padding-top":"10%",width:"45%"}})])],-1),Nr=[Gr,zr];function qr(t,s){return p(),f("div",wr,Nr)}const Pr=Q(Lr,[["render",qr]]),Tr="/php-cours/assets/uno-reverse-24a938eb.svg",Cr={},Er={class:"slide"},Dr=m(`<div class="heading">Opérateurs logiques - ! (not)</div><div class="content"><p> L&#39;opérateur <b>!</b> s&#39;applique à une seule condition. Et il inverse le résultat de cette condition, <b>True</b> devient <b>False</b> et <b>False</b> devient <b>True</b>. </p><table class="tg" style="width:30%;height:50%;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">a</span></th><th class="tg-0lax"><span style="font-weight:bold;">! a</span></th></tr></thead><tbody><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#800400;">False</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#008000;">True</td></tr></tbody></table><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#333333;">!</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//false</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#333333;">!</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//true</span>
          <span style="color:#557799;">?&gt;</span></pre></div><img src="`+Tr+'" class="html-css-logo" style="left:40%;top:30%;height:66%;width:unset;"></div>',2),Zr=[Dr];function Fr(t,s){return p(),f("div",Er,Zr)}const Ar=Q(Cr,[["render",Fr]]),Hr="/php-cours/assets/notGate-35477b07.svg",Or={},Ir={class:"slide"},Rr=e("div",{class:"heading"},"Logic Gates - NOT",-1),Br=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://logic.ly/embed/?document_path=/lessons/documents/not-gate.logicly",style:{width:"70%",display:"inline-block"}},[e("iframe",{src:"lightswitch.html",width:"70%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")]),e("div",{style:{display:"inline-block","padding-left":"2%",width:"29%"}},[e("img",{src:Hr,style:{"padding-top":"10%",width:"45%"}})])],-1),jr=[Rr,Br];function Ur(t,s){return p(),f("div",Ir,jr)}const Wr=Q(Or,[["render",Ur]]),Vr={},Kr={class:"slide"},Jr=m(`<div class="heading">Opérateurs logiques - xor</div><div class="content"><p> Comme l&#39;opérateur <b>and</b>, l&#39;opérateur <b>or</b> vérifie plusieurs conditions. Mais il renvoie <b>True</b> lorsque <b>l&#39;une ou l&#39;autre ou les deux conditions</b> individuelles sont vraies (True) : </p><table class="tg" style="width:100%;height:50%;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">a</span></th><th class="tg-0lax"><span style="font-weight:bold;">b</span></th><th class="tg-0lax"><span style="font-weight:bold;">a xor b</span></th></tr></thead><tbody><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#800400;">False</td></tr><tr><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#008000;">True</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#800400;">False</td></tr><tr><td class="tg-0lax" style="color:#800400;">False</td><td class="tg-0lax" style="color:#008000;">True</td><td class="tg-0lax" style="color:#008000;">True</td></tr></tbody></table><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">True</span> <span style="color:#008800;font-weight:bold;">xor</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//false</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">False</span> <span style="color:#008800;font-weight:bold;">xor</span> <span style="color:#008800;font-weight:bold;">True</span>); <span style="color:#888888;">//true</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">False</span> <span style="color:#008800;font-weight:bold;">xor</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//false</span>
            <span style="color:#007020;">var_dump</span>((bool) <span style="color:#008800;font-weight:bold;">True</span> <span style="color:#008800;font-weight:bold;">xor</span> <span style="color:#008800;font-weight:bold;">False</span>); <span style="color:#888888;">//true</span>
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Xr=[Jr];function Yr(t,s){return p(),f("div",Kr,Xr)}const e9=Q(Vr,[["render",Yr]]),t9="/php-cours/assets/xorGate-0367b30f.svg",s9={},n9={class:"slide"},a9=e("div",{class:"heading"},"Logic Gates - XOR",-1),i9=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://logic.ly/embed/?document_path=/lessons/documents/xor-gate.logicly",style:{width:"70%",display:"inline-block"}},[e("iframe",{src:"lightswitch.html",width:"70%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")]),e("div",{style:{display:"inline-block","padding-left":"2%",width:"29%"}},[e("img",{src:t9,style:{"padding-top":"10%",width:"45%"}})])],-1),o9=[a9,i9];function l9(t,s){return p(),f("div",n9,o9)}const r9=Q(s9,[["render",l9]]),c9="/php-cours/assets/dominance-e10b1fcc.svg",d9={},p9={class:"slide"},f9=m('<div class="heading">Prédominance des opérateurs logiques</div><div class="content"><p> Lorsque vous mélangez les opérateurs logiques dans une expression, Python les évalue dans l&#39;ordre qui est appelé la précédence des opérateurs. </p><p> L&#39;exemple suivant montre la préséance des opérateurs <b>not</b>, <b>and</b>, et <b>or</b> : </p><table class="tg" style="width:30%;height:50%;"><thead><tr><th class="tg-0lax"><span style="font-weight:bold;">Operator</span></th><th class="tg-0lax"><span style="font-weight:bold;">Prédominance</span></th></tr></thead><tbody><tr><td class="tg-0lax">!</td><td class="tg-0lax">Haut</td></tr><tr><td class="tg-0lax">and</td><td class="tg-0lax">Moyen</td></tr><tr><td class="tg-0lax">or</td><td class="tg-0lax">Faible</td></tr></tbody></table><img src="'+c9+'" class="html-css-logo" style="left:36%;top:45%;height:unset;width:50%;"></div>',2),Q9=[f9];function u9(t,s){return p(),f("div",p9,Q9)}const h9=Q(d9,[["render",u9]]),g9={},b9={class:"slide"},m9=m(`<div class="heading">Prédominance des opérateurs logiques</div><div class="content"><table class="tg" style="height:50%;"><tbody><tr><td class="tg-0lax">$a or $b and $c</td><td class="tg-0lax">signifie</td><td class="tg-0lax">$a or ($b and $c)</td></tr><tr><td class="tg-0lax">$a and $b or $c and $d</td><td class="tg-0lax">signifie</td><td class="tg-0lax">($a and $b) or ($c and $d)</td></tr><tr><td class="tg-0lax">$a and $b and $c or $d</td><td class="tg-0lax">signifie</td><td class="tg-0lax">(($a and $b) and $c) or $d</td></tr><tr><td class="tg-0lax">! $a and $b or $c</td><td class="tg-0lax">signifie</td><td class="tg-0lax">((! $a) and $b) or $c</td></tr></tbody></table><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$a</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">True</span>;
            <span style="color:#996633;">$b</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">False</span>;
            <span style="color:#996633;">$c</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">True</span>;
            <span style="color:#007020;">var_dump</span>(<span style="color:#996633;">$a</span> <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#996633;">$b</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#996633;">$c</span>); <span style="color:#888888;">//True</span>
            <span style="color:#007020;">var_dump</span>(<span style="color:#996633;">$a</span> <span style="color:#008800;font-weight:bold;">or</span> (<span style="color:#996633;">$b</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#996633;">$c</span>)); <span style="color:#888888;">//True (même instruction que ci-dessus)</span>
            <span style="color:#007020;">var_dump</span>(<span style="color:#333333;">!</span> <span style="color:#996633;">$a</span> <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#996633;">$b</span> <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#996633;">$c</span>); <span style="color:#888888;">//True</span>
            <span style="color:#007020;">var_dump</span>(((<span style="color:#333333;">!</span> <span style="color:#996633;">$a</span>) <span style="color:#008800;font-weight:bold;">and</span> <span style="color:#996633;">$b</span>) <span style="color:#008800;font-weight:bold;">or</span> <span style="color:#996633;">$c</span>); <span style="color:#888888;">//True (même instruction que ci-dessus)</span>
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),_9=[m9];function y9(t,s){return p(),f("div",b9,_9)}const v9=Q(g9,[["render",y9]]),x9={},$9={class:"slide"},k9=e("div",{class:"heading"},"Opérateurs logiques - Quiz",-1),S9=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://docs.google.com/forms/d/e/1FAIpQLSfNF6SkqXJOZYB8bO8pOl9V3bAJG4Is5IY7pEk0DuBkCrCFjA/viewform?embedded=true"},[e("iframe",{src:"lightswitch.html",width:"640",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),M9=[k9,S9];function L9(t,s){return p(),f("div",$9,M9)}const w9=Q(x9,[["render",L9]]),G9={},z9={class:"slide"},N9=e("div",{class:"heading"},"Bloc syntax",-1),q9=e("div",{class:"content"},[e("p",null," Un bloc est un morceau de texte de programme PHP qui est exécuté en tant qu'unité. "),e("p",null,"Toutes les instructions composées PHP:"),e("div",{class:"codeblock"},[e("pre",{style:{margin:"0","line-height":"125%"}},`          Ligne d'en-tête{
                  Bloc d'instructions imbriquées
          }`)]),e("br"),e("p",null," Le bloc est délimité par une paire d'accolades { } et elles sont obligatoires. ")],-1),P9=[N9,q9];function T9(t,s){return p(),f("div",z9,P9)}const C9=Q(G9,[["render",T9]]),E9="/php-cours/assets/function-ebfb8b95.svg",D9={},Z9={class:"slide"},F9=m('<div class="heading">Functions</div><div class="content"><div class="flex-container"><div><ul><li> Une fonction est un bloc de code qui ne s&#39;exécute que lorsqu&#39;il est appelé. </li><br><li> Vous pouvez transmettre des données, appelées paramètres, à une fonction. </li><br><li>Une fonction peut renvoyer des données comme résultat.</li></ul></div><div style="width:60%;"><img src="'+E9+'" style="width:100%;"></div></div></div>',2),A9=[F9];function H9(t,s){return p(),f("div",Z9,A9)}const O9=Q(D9,[["render",H9]]),I9={},R9={class:"slide"},B9=e("div",{class:"heading"},"Functions - Pourquoi utiliser des fonctions ?",-1),j9=e("div",{class:"content"},[e("p",null," Avant d'entrer dans les détails, il faut établir une image claire de ce que sont les fonctions "),e("ul",null,[e("li",null,[e("b",null,"Maximiser la réutilisation du code et minimiser la redondance")]),e("br"),e("li",null,[e("b",null,"Procedural decomposition"),z("(diviser les systèmes en parties) ")])]),e("img",{src:Tt,class:"html-css-logo",style:{left:"30%",top:"46%",width:"50%",height:"50%"}})],-1),U9=[B9,j9];function W9(t,s){return p(),f("div",R9,U9)}const V9=Q(I9,[["render",W9]]),K9="/php-cours/assets/functiondescriptionsimple-977d4b08.svg",J9={},X9={class:"slide"},Y9=m(`<div class="heading">Functions - Définir une fonction</div><div class="content"><p> Une fonction est créée avec une expression qui commence par le mot clé <b>function</b></p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">nom</span>(<span style="color:#996633;">$parametre1</span>, <span style="color:#996633;">$parametre2</span>, <span style="color:#996633;">$parametre3</span>){
              <span style="color:#888888;">//code a executer</span>
            }
          <span style="color:#557799;">?&gt;</span></pre></div><img src="`+K9+'" class="html-css-logo" style="left:15%;top:40%;width:70%;height:70%;"></div>',2),e7=[Y9];function t7(t,s){return p(),f("div",X9,e7)}const s7=Q(J9,[["render",t7]]),n7={},a7={class:"slide"},i7=e("div",{class:"heading"},"Functions - Simple",-1),o7=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yuk5ptkn"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),l7=[i7,o7];function r7(t,s){return p(),f("div",a7,l7)}const c7=Q(n7,[["render",r7]]),d7={},p7={class:"slide"},f7=e("div",{class:"heading"},"Functions - Valeurs de retour",-1),Q7=e("div",{class:"content"},[e("p",null," Pour qu'une fonction renvoie une valeur, utilisez l'instruction return : "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupab7pa"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),u7=[f7,Q7];function h7(t,s){return p(),f("div",p7,u7)}const g7=Q(d7,[["render",h7]]),b7={},m7={class:"slide"},_7=m(`<div class="heading">Functions - Calls/Appelle</div><div class="content"><p> L&#39;instruction <b>function</b> crée une fonction mais ne l&#39;appelle pas. Après l&#39;exécution de l&#39;instruction <b>function</b>, vous pouvez appeler (exécuter) la fonction dans votre programme en ajoutant des parenthèses après le nom de la fonction </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">times</span>(<span style="color:#996633;">$x</span>, <span style="color:#996633;">$y</span>){ <span style="color:#888888;">// Créer et attribuer une fonction</span>
            <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#996633;">$x</span> <span style="color:#333333;">*</span> <span style="color:#996633;">$y</span>; 
            }
          <span style="color:#557799;">?&gt;</span></pre></div><br><p> Les parenthèses peuvent éventuellement contenir un ou plusieurs arguments d&#39;objet, qui seront passés (assignés) aux noms de l&#39;en-tête de la fonction </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          times(2, 4) <span style="color:#008000;">// Arguments in parentheses</span>
          <span style="color:#008000;">//La fonction renvoie 8</span></pre></div></div>`,2),y7=[_7];function v7(t,s){return p(),f("div",m7,y7)}const x7=Q(b7,[["render",v7]]),$7="/php-cours/assets/variable-living-space-db1426ae.svg",k7={},S7={class:"slide"},M7=e("div",{class:"heading"},"Scopes",-1),L7=e("div",{class:"content"},[e("p",null," Les scopes permettent d'éviter les conflits de noms dans le code de votre programme : les noms définis dans une unité de programme n'interfèrent pas avec les noms d'une autre unité. "),e("br"),e("div",{class:"flex-container"},[e("div",null,[e("p",null,[z(" Lorsque vous utilisez un nom dans un programme, PHP crée, modifie ou recherche le nom dans ce que l'on appelle un "),e("b",null,"espace de noms, c'est-à-dire un endroit où vivent les noms"),z(". ")]),e("p",null," L'endroit où vous attribuez un nom dans votre code source détermine l'espace de nom dans lequel il va vivre et donc sa visibilité. ")]),e("div",null,[e("img",{src:$7,style:{width:"100%"}})])])],-1),w7=[M7,L7];function G7(t,s){return p(),f("div",S7,w7)}const z7=Q(k7,[["render",G7]]),N7={},q7={class:"slide"},P7=m(`<div class="heading">Functions - Scopes</div><div class="content"><p> les variables peuvent être assignées à trois endroits différents, correspondant à trois scopes différentes </p><ul><li> une <b>variable</b> assignée à l&#39;intérieur d&#39;une <b>function</b>, est <b>locale</b> à cette fonction. </li><li> une <b>variable</b> assignée en dehors de toutes les <b>functions</b>, est <b>globale</b> à l&#39;ensemble du fichier. </li></ul><br><p> Par exemple, dans le fichier de module suivant, l&#39;affectation X = 99 crée une variable globale nommée X, mais l&#39;affectation X = 88 crée une variable locale X : </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#996633;">$x</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">99</span>; <span style="color:#888888;">// Global scope X</span>

          <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">func</span>() {
              <span style="color:#996633;">$x</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">88</span>; <span style="color:#888888;">// Local (function) scope X: une autre variable</span>
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$x</span>;
          }

          func(); <span style="color:#888888;">// prints 88</span>
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$x</span>; <span style="color:#888888;">// prints 99</span></pre></div></div>`,2),T7=[P7];function C7(t,s){return p(),f("div",q7,T7)}const E7=Q(N7,[["render",C7]]),D7="/php-cours/assets/magnifier-8ead6c09.svg",Z7={},F7={class:"slide"},A7=m('<div class="heading">Functions - Scopes (LEGS lookup rule)</div><div class="content"><div class="flex-container"><div><p> PHP recherche jusqu&#39;à quatre scopes - le <b>local (L) scope</b>, puis les <b>Eclosing locals scopes (E)</b>, puis le <b>scope global (G)</b>, et enfin la <b>superglobal (S) scope</b> - et s&#39;arrête au premier endroit où le nom est trouvé. Si le nom n&#39;est pas trouvé au cours de cette recherche, PHP signale une erreur. </p><p><b>Ignorons pour l&#39;instant les superglobals</b></p></div><div style="width:50%;"><img src="'+D7+'" style="width:100%;"></div></div></div>',2),H7=[A7];function O7(t,s){return p(),f("div",F7,H7)}const I7=Q(Z7,[["render",O7]]),R7={},B7={class:"slide"},j7=m(`<div class="heading">Functions - La déclaration globale</div><div class="content"><p> Le mot-clé global importe des variables de la portée globale dans la portée locale d&#39;une fonction. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$X</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">88</span>; <span style="color:#888888;">// Global X</span>
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$X</span>; <span style="color:#888888;">// prints 88</span>

            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">func</span>() {
                <span style="color:#008800;font-weight:bold;">global</span> <span style="color:#996633;">$X</span>; <span style="color:#888888;">// reference the global variable</span>
                <span style="color:#996633;">$X</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">99</span>; <span style="color:#888888;">// global X: en dehors de def</span>
            }

            func();
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$X</span>; <span style="color:#888888;">// prints 99</span>
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),U7=[j7];function W7(t,s){return p(),f("div",B7,U7)}const V7=Q(R7,[["render",W7]]),K7="/php-cours/assets/arguments-9817260f.svg",J7={},X7={class:"slide"},Y7=e("div",{class:"heading"},"Functions - Arguments",-1),ec=e("div",{class:"content"},[e("div",{class:"flex-container"},[e("div",null,[e("p",null," Les diapositives suivantes poursuivent l'histoire des fonctions en étudiant les concepts du passage d'arguments en PHP, c'est-à-dire la façon dont les objets sont envoyés aux fonctions en tant que données d'entrée. "),e("p",null,[z(" Comme nous le verrons, "),e("b",null,"les arguments"),z(" (aussi appelés paramètres) sont affectés à des "),e("b",null,"noms dans une fonction"),z(", mais ils ont plus à voir avec les références d'objets qu'avec les scopes de variables. ")])]),e("div",null,[e("img",{src:K7,style:{width:"80%"}})])])],-1),tc=[Y7,ec];function sc(t,s){return p(),f("div",X7,tc)}const nc=Q(J7,[["render",sc]]),ac="/php-cours/assets/argumentPassing-52a2896f.svg",ic={},oc={class:"slide"},lc=m('<div class="heading"> Functions - Argument-Passing Basics - pass by value </div><div class="content"><div class="flex-container"><div style="width:60%;"><p><b>Les arguments sont transmis en assignant automatiquement des objets aux noms de variables locales. </b></p><p> Par défaut, les valeurs des arguments réels sont transmises par valeur aux arguments formels qui deviennent des variables locales à l&#39;intérieur de la fonction. </p><p><b>C&#39;est un peu comme faire : box = box2 = &quot;text&quot;</b></p></div><div><img src="'+ac+'" style="width:85%;"></div></div></div>',2),rc=[lc];function cc(t,s){return p(),f("div",oc,rc)}const dc=Q(ic,[["render",cc]]),pc={},fc={class:"slide"},Qc=e("div",{class:"heading"}," Functions - Argument-Passing Basics - pass by value ",-1),uc=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yukhyb9m"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),hc=[Qc,uc];function gc(t,s){return p(),f("div",fc,hc)}const bc=Q(pc,[["render",gc]]),mc={},_c={class:"slide"},yc=e("div",{class:"heading"}," Functions - Argument-Passing Basics - pass by reference ",-1),vc=e("div",{class:"content"},[e("p",null," Afin de recevoir des arguments par référence, la variable utilisée comme argument formel doit être préfixée par le symbole &. Il fait référence aux variables utilisées pour appeler la fonction. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yukj5ttu"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),xc=[yc,vc];function $c(t,s){return p(),f("div",_c,xc)}const kc=Q(mc,[["render",$c]]),Sc={},Mc={class:"slide"},Lc=m(`<div class="heading">Functions - Nombre d&#39;arguments</div><div class="content"><p> Par défaut, une fonction doit être appelée avec le nombre correct d&#39;arguments. </p><p>Cette fonction attend 2 arguments, et reçoit 2 arguments :</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">my_function</span>(<span style="color:#996633;">$fname</span>, <span style="color:#996633;">$lname</span>) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$fname</span> <span style="color:#333333;">.</span> <span style="background-color:#fff0f0;">&quot; &quot;</span> <span style="color:#333333;">.</span> <span style="color:#996633;">$lname</span>;
            }
            my_function(<span style="background-color:#fff0f0;">&quot;Emil&quot;</span>, <span style="background-color:#fff0f0;">&quot;Refsnes&quot;</span>);
          <span style="color:#557799;">?&gt;</span></pre></div><p>Cette fonction attend 2 arguments, mais n&#39;en reçoit qu&#39;un seul:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">my_function</span>(<span style="color:#996633;">$fname</span>, <span style="color:#996633;">$lname</span>) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$fname</span> <span style="color:#333333;">.</span> <span style="background-color:#fff0f0;">&quot; &quot;</span> <span style="color:#333333;">.</span> <span style="color:#996633;">$lname</span>;
            }
            my_function(<span style="background-color:#fff0f0;">&quot;Emil&quot;</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),wc=[Lc];function Gc(t,s){return p(),f("div",Mc,wc)}const zc=Q(Sc,[["render",Gc]]),Nc={},qc={class:"slide"},Pc=e("div",{class:"heading"},"Functions - Paramètres manquants",-1),Tc=e("div",{class:"content"},[e("p",null,[e("a",{href:"https://www.jdoodle.com/php-online-editor/"},"Dans les anciennes versions (< PHP 7.1.0)"),z(", PHP vous permet d'être aussi paresseux que vous le souhaitez : lorsque vous appelez une fonction, vous pouvez lui passer n'importe quel nombre d'arguments. Dans des versions plus récentes, le même code cause des erreurs ")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yup4h9bb"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Cc=[Pc,Tc];function Ec(t,s){return p(),f("div",qc,Cc)}const Dc=Q(Nc,[["render",Ec]]),Zc="/php-cours/assets/defaultParameter-efab766a.svg",Fc={},Ac={class:"slide"},Hc=m(`<div class="heading">Functions - Paramètre Valeur par défaut</div><div class="content"><p> Si nous appelons la fonction sans argument, elle utilise la valeur par défaut </p><div class="flex-container"><div><div class="codeblock"><pre style="margin:0;line-height:125%;">              <span style="color:#557799;">&lt;?php</span>
                <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">multiply</span>(<span style="color:#996633;">$x</span>, <span style="color:#996633;">$y</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">4</span>) {
                  <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#996633;">$x</span> <span style="color:#333333;">*</span> <span style="color:#996633;">$y</span>;
                }
                <span style="color:#008800;font-weight:bold;">echo</span> multiply(<span style="color:#0000DD;font-weight:bold;">8</span>);
              <span style="color:#557799;">?&gt;</span></pre></div></div><div><img src="`+Zc+'" style="width:100%;"></div></div><br></div>',2),Oc=[Hc];function Ic(t,s){return p(),f("div",Ac,Oc)}const Rc=Q(Fc,[["render",Ic]]),Bc={},jc={class:"slide"},Uc=m(`<div class="heading">Functions - Variable Parameters</div><div class="content"><p> Pour déclarer une fonction avec un nombre variable d&#39;arguments d&#39;arguments, laissez le bloc de paramètres entièrement vide </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">getPreferences</span>()
            {
              <span style="color:#888888;">// some code</span>
            }
          <span style="color:#557799;">?&gt;</span></pre></div><p> PHP fournit trois fonctions que vous pouvez utiliser dans la fonction pour récupérer les paramètres passés à la fonction </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#996633;">$array</span> <span style="color:#333333;">=</span> <span style="color:#007020;">func_get_args</span>();
          <span style="color:#996633;">$count</span> <span style="color:#333333;">=</span> <span style="color:#007020;">func_num_args</span>();
          <span style="color:#996633;">$value</span> <span style="color:#333333;">=</span> <span style="color:#007020;">func_get_arg</span>(argument_number);</pre></div></div>`,2),Wc=[Uc];function Vc(t,s){return p(),f("div",jc,Wc)}const Kc=Q(Bc,[["render",Vc]]),Jc={},Xc={class:"slide"},Yc=e("div",{class:"heading"},"Functions - Variable Parameters",-1),ed=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yup2bh3s"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),td=[Yc,ed];function sd(t,s){return p(),f("div",Xc,td)}const nd=Q(Jc,[["render",sd]]),ad="/php-cours/assets/ifelse-eed394d5.svg",id={},od={class:"slide"},ld=m('<div class="heading">if Tests</div><div class="content"><div class="flex-container"><div style="width:40%;"><p> Ce chapitre présente l&#39;instruction <b>if</b> de PHP, qui est la principale instruction utilisée pour sélectionner des actions alternatives en fonction des résultats des tests. </p></div><div style="width:60%;"><img src="'+ad+'" style="width:90%;"></div></div></div>',2),rd=[ld];function cd(t,s){return p(),f("div",od,rd)}const dd=Q(id,[["render",cd]]),pd={},fd={class:"slide"},Qd=m(`<div class="heading">if Tests - Format général</div><div class="content"><p> Lorsque l&#39;instruction if s&#39;exécute, PHP exécute le bloc de code associé au premier test dont l&#39;évaluation est vraie, ou le bloc else si tous les tests sont faux. La forme générale d&#39;une instruction if ressemble à ceci </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">if</span> (test1) {
              <span style="color:#888888;">// if test</span>
              statements1 <span style="color:#888888;">// bloc associé</span>
            } <span style="color:#008800;font-weight:bold;">elseif</span> (test2) {
              <span style="color:#888888;">// Optionnel elifs</span>
              statements2;
            } <span style="color:#008800;font-weight:bold;">else</span> {
              <span style="color:#888888;">// Optionnel else</span>
              statements3;
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),ud=[Qd];function hd(t,s){return p(),f("div",fd,ud)}const gd=Q(pd,[["render",hd]]),bd={},md={class:"slide"},_d=e("div",{class:"heading"},"if Tests - Format général",-1),yd=e("div",{class:"content"},[e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupb5zny"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),vd=[_d,yd];function xd(t,s){return p(),f("div",md,vd)}const $d=Q(bd,[["render",xd]]),kd={},Sd={class:"slide"},Md=e("div",{class:"heading"},"if Tests - Exercice",-1),Ld=e("div",{class:"content"},[e("p",null,` Faites un message d'accueil "bonne journée" si l'heure est inférieure à 18:00 `),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupb8xtq"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),wd=[Md,Ld];function Gd(t,s){return p(),f("div",Sd,wd)}const zd=Q(kd,[["render",Gd]]),Nd={},qd={class:"slide"},Pd=e("div",{class:"heading"},"if Tests - Exercice",-1),Td=e("div",{class:"content"},[e("p",null,` Maintenant, nous prolongeons l'exercice précédent et souhaitons "Bonne soirée" après 18:00. `),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupbcnqe"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Cd=[Pd,Td];function Ed(t,s){return p(),f("div",qd,Cd)}const Dd=Q(Nd,[["render",Ed]]),Zd={},Fd={class:"slide"},Ad=e("div",{class:"heading"},"if Tests - Exercice",-1),Hd=e("div",{class:"content"},[e("p",null,' Ok maintenant, la dernière étape est de souhaiter une "bonne matinée" avant 9:00. '),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupbcnqe"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Od=[Ad,Hd];function Id(t,s){return p(),f("div",Fd,Od)}const Rd=Q(Zd,[["render",Id]]),Bd={},jd={class:"slide"},Ud=m(`<div class="heading">if Tests - Nested</div><div class="content"><p>Nous pouvons imbriquer les if tests bien sûr</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
          <span style="color:#008800;font-weight:bold;">if</span> (condition) {
            <span style="color:#008800;font-weight:bold;">if</span> (condition) {
            }
          }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Wd=[Ud];function Vd(t,s){return p(),f("div",jd,Wd)}const Kd=Q(Bd,[["render",Vd]]),Jd={},Xd={class:"slide"},Yd=e("div",{class:"heading"},"if Tests - Exercice",-1),ep=e("div",{class:"content"},[e("p",null," Comme je viens d'Allemagne, nous disons autre chose selon l'heure de la journée. Développons notre exercice en vérifiant si nous sommes en Allemagne ou non et en saluant dans la langue correspondante. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupcsgtj"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),tp=[Yd,ep];function sp(t,s){return p(),f("div",Xd,tp)}const np=Q(Jd,[["render",sp]]),ap={},ip={class:"slide"},op=m(`<div class="heading">if/else Ternary Expression</div><div class="content"><p> Parfois, les éléments d&#39;une déclaration sont si simples qu&#39;il semble exagéré de les répartir sur plusieurs lignes. </p><p> PHP nous offre un format d&#39;expression qui nous permet de faire des if/else dans une seule expression. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">(Condition) <span style="color:#333333;">?</span> (Statement1) <span style="color:#333333;">:</span> (Statement2);</pre></div><p>Navigation exemple</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$direction</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Toulouse&quot;</span>;
            <span style="color:#996633;">$result</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$direction</span> <span style="color:#333333;">==</span> <span style="background-color:#fff0f0;">&quot;Toulouse&quot;</span> <span style="color:#333333;">?</span> <span style="background-color:#fff0f0;">&quot;aller à gauche&quot;</span> <span style="color:#333333;">:</span> <span style="background-color:#fff0f0;">&quot;aller à droite&quot;</span>;
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$result</span>;
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),lp=[op];function rp(t,s){return p(),f("div",ip,lp)}const cp=Q(ap,[["render",rp]]),dp={},pp={class:"slide"},fp=e("div",{class:"heading"},"if/else Ternary Expression - Exercice",-1),Qp=e("div",{class:"content"},[e("p",null,[e("b",null,"Exercice : Pouvez-vous diminuer le nombre de ligne avec des tests ternary ?")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupemryp"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),up=[fp,Qp];function hp(t,s){return p(),f("div",pp,up)}const gp=Q(dp,[["render",hp]]),bp={},mp={class:"slide"},_p=e("div",{class:"heading"},"if/else chained condition - Exercice",-1),yp=e("div",{class:"content"},[e("p",null,[z(" Le coût d'entrée dans un parc pour enfants est de 10€ pour toute personne âgée de 4 à 12 ans. Les autres personnes ne paient que 6€. Écrivez un "),e("b",null,"test if"),z(" utilisant "),e("b",null,"&&"),z(" qui vérifie la tranche d'âge et ajuste le prix en conséquence. ")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupeqkru"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),vp=[_p,yp];function xp(t,s){return p(),f("div",mp,vp)}const $p=Q(bp,[["render",xp]]),kp={},Sp={class:"slide"},Mp=m(`<div class="heading">Switch</div><div class="content"><p> Utilisez l&#39;instruction switch pour sélectionner l&#39;un des nombreux blocs de code à exécuter </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">switch</span>(expression) {
              <span style="color:#008800;font-weight:bold;">case</span> x<span style="color:#333333;">:</span>
                  <span style="color:#888888;">// code block</span>
                  <span style="color:#008800;font-weight:bold;">break</span>;
              <span style="color:#008800;font-weight:bold;">case</span> y<span style="color:#333333;">:</span>
                  <span style="color:#888888;">// code block</span>
                  <span style="color:#008800;font-weight:bold;">break</span>;
              <span style="color:#008800;font-weight:bold;">default</span><span style="color:#333333;">:</span>
                  <span style="color:#888888;">// code block</span>
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Lp=[Mp];function wp(t,s){return p(),f("div",Sp,Lp)}const Gp=Q(kp,[["render",wp]]),zp={},Np={class:"slide"},qp=e("div",{class:"heading"},"Classic if/else",-1),Pp=e("div",{class:"content"},[e("p",null," Cet exemple utilise le numéro du jour de la semaine pour calculer le nom du jour de la semaine. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupjhv5w"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Tp=[qp,Pp];function Cp(t,s){return p(),f("div",Np,Tp)}const Ep=Q(zp,[["render",Cp]]),Dp={},Zp={class:"slide"},Fp=e("div",{class:"heading"},"Switch",-1),Ap=e("div",{class:"content"},[e("p",null,"Cet exemple utilise le switch"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yuprg5rc"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Hp=[Fp,Ap];function Op(t,s){return p(),f("div",Zp,Hp)}const Ip=Q(Dp,[["render",Op]]),Rp={},Bp={class:"slide"},jp=e("div",{class:"heading"},"while et for Loops",-1),Up=e("div",{class:"content"},[e("p",null," Je vais présenter les les deux principales constructions de boucles du langage - des énoncés qui répètent une action encore et encore "),e("svg",{"xmlns:xlink":"http://www.w3.org/1999/xlink","image-rendering":"optimizeSpeed",baseProfile:"basic",version:"1.1",xmlns:"http://www.w3.org/2000/svg",id:"island01.svg",viewBox:"0 0 512 384",height:"90%"},[e("defs",null,[e("linearGradient",{id:"LGp1_15a1"},[e("stop",{style:{"stop-color":"#66ccff","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#33cc99","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp1_19a1"},[e("stop",{style:{"stop-color":"#ffcc00","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#dc4f4f","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp1_31a1"},[e("stop",{style:{"stop-color":"#cc9900","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#663300","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp1_33a1"},[e("stop",{style:{"stop-color":"#33cc00","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#336600","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp1_44a1"},[e("stop",{style:{"stop-color":"#ff9966","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#cc6600","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp1_45a1"},[e("stop",{style:{"stop-color":"#cc9900","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#cc6600","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp1_53a1"},[e("stop",{style:{"stop-color":"#669900","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#999933","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_18a1"},[e("stop",{style:{"stop-color":"#66ccff","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#33cc99","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_22a1"},[e("stop",{style:{"stop-color":"#ffcc00","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#dc4f4f","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_34a1"},[e("stop",{style:{"stop-color":"#cc9900","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#663300","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_36a1"},[e("stop",{style:{"stop-color":"#33cc00","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#336600","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_47a1"},[e("stop",{style:{"stop-color":"#ff9966","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#cc6600","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_48a1"},[e("stop",{style:{"stop-color":"#cc9900","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#cc6600","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"LGp7_56a1"},[e("stop",{style:{"stop-color":"#669900","stop-opacity":"1"},offset:"0"}),e("stop",{style:{"stop-color":"#999933","stop-opacity":"1"},offset:"1"})]),e("linearGradient",{id:"SGp1_15a1","xlink:href":"#LGp1_15a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp1_19a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_20a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.6008",x2:"1.0000",y2:"0.3718"}),e("linearGradient",{id:"SGp1_21a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.6772",x2:"1.0000",y2:"0.4387"}),e("linearGradient",{id:"SGp1_22a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5465",x2:"1.0000",y2:"0.4463"}),e("linearGradient",{id:"SGp1_23a1","xlink:href":"#LGp1_19a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp1_25a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_26a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_27a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_29a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4996",x2:"1.0000",y2:"0.4996"}),e("linearGradient",{id:"SGp1_31a1","xlink:href":"#LGp1_31a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp1_32a1","xlink:href":"#LGp1_31a1",x1:"0.4970",y1:"0.9996",x2:"0.5539",y2:"0.0000"}),e("linearGradient",{id:"SGp1_33a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.4984",x2:"0.0108",y2:"0.4984"}),e("linearGradient",{id:"SGp1_34a1","xlink:href":"#LGp1_33a1",x1:"0.0000",y1:"0.4992",x2:"1.0007",y2:"0.4992"}),e("linearGradient",{id:"SGp1_35a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.4993",x2:"0.0000",y2:"0.3491"}),e("linearGradient",{id:"SGp1_36a1","xlink:href":"#LGp1_33a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_37a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.5000",x2:"0.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_38a1","xlink:href":"#LGp1_33a1",x1:"0.0000",y1:"0.5000",x2:"0.9984",y2:"0.5000"}),e("linearGradient",{id:"SGp1_39a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.5000",x2:"0.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp1_40a1","xlink:href":"#LGp1_33a1",x1:"0.4122",y1:"0.9990",x2:"0.4122",y2:"0.0000"}),e("linearGradient",{id:"SGp1_41a1","xlink:href":"#LGp1_33a1",x1:"0.5057",y1:"0.9990",x2:"0.5057",y2:"0.0000"}),e("linearGradient",{id:"SGp1_42a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4997",x2:"1.0000",y2:"0.4997"}),e("linearGradient",{id:"SGp1_43a1","xlink:href":"#LGp1_19a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp1_44a1","xlink:href":"#LGp1_44a1",x1:"0.0381",y1:"1.0000",x2:"0.8910",y2:"-0.1609"}),e("linearGradient",{id:"SGp1_45a1","xlink:href":"#LGp1_45a1",x1:"0.2163",y1:"1.0284",x2:"0.6966",y2:"-0.1108"}),e("linearGradient",{id:"SGp1_46a1","xlink:href":"#LGp1_45a1",x1:"0.4979",y1:"0.9977",x2:"0.4979",y2:"0.0000"}),e("linearGradient",{id:"SGp1_48a1","xlink:href":"#LGp1_45a1",x1:"0.6254",y1:"1.0000",x2:"0.6317",y2:"0.0000"}),e("linearGradient",{id:"SGp1_52a1","xlink:href":"#LGp1_45a1",x1:"0.5806",y1:"1.0203",x2:"0.1944",y2:"0.2568"}),e("linearGradient",{id:"SGp1_53a1","xlink:href":"#LGp1_53a1",x1:"0.4431",y1:"1.0000",x2:"0.4431",y2:"0.1643"}),e("linearGradient",{id:"SGp1_54a1","xlink:href":"#LGp1_44a1",x1:"0.9714",y1:"1.0309",x2:"0.0743",y2:"-0.3580"}),e("linearGradient",{id:"SGp2_26a1","xlink:href":"#LGp1_15a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp2_30a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_31a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.6008",x2:"1.0000",y2:"0.3718"}),e("linearGradient",{id:"SGp2_32a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.6772",x2:"1.0000",y2:"0.4387"}),e("linearGradient",{id:"SGp2_33a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5465",x2:"1.0000",y2:"0.4463"}),e("linearGradient",{id:"SGp2_34a1","xlink:href":"#LGp1_19a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp2_36a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_37a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_38a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_40a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4996",x2:"1.0000",y2:"0.4996"}),e("linearGradient",{id:"SGp2_42a1","xlink:href":"#LGp1_31a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp2_43a1","xlink:href":"#LGp1_31a1",x1:"0.4970",y1:"0.9996",x2:"0.5539",y2:"0.0000"}),e("linearGradient",{id:"SGp2_44a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.4984",x2:"0.0108",y2:"0.4984"}),e("linearGradient",{id:"SGp2_45a1","xlink:href":"#LGp1_33a1",x1:"0.0000",y1:"0.4992",x2:"1.0007",y2:"0.4992"}),e("linearGradient",{id:"SGp2_46a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.4993",x2:"0.0000",y2:"0.3491"}),e("linearGradient",{id:"SGp2_47a1","xlink:href":"#LGp1_33a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_48a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.5000",x2:"0.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_49a1","xlink:href":"#LGp1_33a1",x1:"0.0000",y1:"0.5000",x2:"0.9984",y2:"0.5000"}),e("linearGradient",{id:"SGp2_50a1","xlink:href":"#LGp1_33a1",x1:"1.0000",y1:"0.5000",x2:"0.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp2_51a1","xlink:href":"#LGp1_33a1",x1:"0.4122",y1:"0.9990",x2:"0.4122",y2:"0.0000"}),e("linearGradient",{id:"SGp2_52a1","xlink:href":"#LGp1_33a1",x1:"0.5057",y1:"0.9990",x2:"0.5057",y2:"0.0000"}),e("linearGradient",{id:"SGp2_53a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4997",x2:"1.0000",y2:"0.4997"}),e("linearGradient",{id:"SGp2_54a1","xlink:href":"#LGp1_19a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp2_55a1","xlink:href":"#LGp1_44a1",x1:"0.0381",y1:"1.0057",x2:"0.8910",y2:"-0.1609"}),e("linearGradient",{id:"SGp2_56a1","xlink:href":"#LGp1_45a1",x1:"0.2163",y1:"1.0284",x2:"0.6966",y2:"-0.1108"}),e("linearGradient",{id:"SGp2_57a1","xlink:href":"#LGp1_45a1",x1:"0.5000",y1:"1.0000",x2:"0.5000",y2:"0.0000"}),e("linearGradient",{id:"SGp2_59a1","xlink:href":"#LGp1_45a1",x1:"0.6297",y1:"1.0000",x2:"0.6297",y2:"0.0000"}),e("linearGradient",{id:"SGp2_63a1","xlink:href":"#LGp1_45a1",x1:"0.5861",y1:"1.0168",x2:"0.1944",y2:"0.2559"}),e("linearGradient",{id:"SGp2_64a1","xlink:href":"#LGp1_53a1",x1:"0.4434",y1:"1.0000",x2:"0.4434",y2:"0.1577"}),e("linearGradient",{id:"SGp2_65a1","xlink:href":"#LGp1_44a1",x1:"0.9714",y1:"1.0309",x2:"0.0743",y2:"-0.3519"}),e("linearGradient",{id:"SGp3_18a1","xlink:href":"#LGp1_15a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp3_22a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp3_23a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.6571",x2:"1.0000",y2:"0.3008"}),e("linearGradient",{id:"SGp3_24a1","xlink:href":"#LGp1_19a1",x1:"0.0086",y1:"0.8466",x2:"1.0997",y2:"0.3335"}),e("linearGradient",{id:"SGp3_25a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5881",x2:"1.1866",y2:"0.4802"}),e("linearGradient",{id:"SGp3_26a1","xlink:href":"#LGp1_19a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp3_28a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp3_29a1","xlink:href":"#LGp1_19a1",x1:"-0.5859",y1:"0.6677",x2:"1.3984",y2:"0.3307"}),e("linearGradient",{id:"SGp3_30a1","xlink:href":"#LGp1_19a1",x1:"-0.1466",y1:"0.2344",x2:"1.2775",y2:"0.7656"}),e("linearGradient",{id:"SGp3_32a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4996",x2:"1.0000",y2:"0.4996"}),e("linearGradient",{id:"SGp3_34a1","xlink:href":"#LGp1_31a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp3_35a1","xlink:href":"#LGp1_31a1",x1:"0.4970",y1:"0.9996",x2:"0.5539",y2:"0.0000"}),e("linearGradient",{id:"SGp3_36a1","xlink:href":"#LGp1_33a1",x1:"1.0392",y1:"0.6094",x2:"0.0081",y2:"0.2596"}),e("linearGradient",{id:"SGp3_37a1","xlink:href":"#LGp1_33a1",x1:"0.0395",y1:"0.3612",x2:"0.9986",y2:"0.8959"}),e("linearGradient",{id:"SGp3_38a1","xlink:href":"#LGp1_33a1",x1:"1.0565",y1:"0.5832",x2:"0.0000",y2:"0.2163"}),e("linearGradient",{id:"SGp3_39a1","xlink:href":"#LGp1_33a1",x1:"0.0768",y1:"0.4316",x2:"0.9889",y2:"0.6633"}),e("linearGradient",{id:"SGp3_40a1","xlink:href":"#LGp1_33a1",x1:"1.0719",y1:"0.5350",x2:"-0.0479",y2:"0.4206"}),e("linearGradient",{id:"SGp3_41a1","xlink:href":"#LGp1_33a1",x1:"0.1134",y1:"0.4521",x2:"0.9658",y2:"0.5915"}),e("linearGradient",{id:"SGp3_42a1","xlink:href":"#LGp1_33a1",x1:"1.1366",y1:"0.5290",x2:"-0.0546",y2:"0.4466"}),e("linearGradient",{id:"SGp3_43a1","xlink:href":"#LGp1_33a1",x1:"-0.2488",y1:"0.9885",x2:"0.5885",y2:"0.0042"}),e("linearGradient",{id:"SGp3_44a1","xlink:href":"#LGp1_33a1",x1:"0.2174",y1:"1.0086",x2:"0.6929",y2:"-0.0043"}),e("linearGradient",{id:"SGp3_45a1","xlink:href":"#LGp1_19a1",x1:"-0.0221",y1:"0.2938",x2:"0.9603",y2:"0.6533"}),e("linearGradient",{id:"SGp3_46a1","xlink:href":"#LGp1_19a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp3_47a1","xlink:href":"#LGp1_44a1",x1:"0.5585",y1:"0.0000",x2:"0.4849",y2:"0.9798"}),e("linearGradient",{id:"SGp3_48a1","xlink:href":"#LGp1_45a1",x1:"-0.0096",y1:"0.3971",x2:"1.0288",y2:"0.5812"}),e("linearGradient",{id:"SGp3_49a1","xlink:href":"#LGp1_45a1",x1:"0.2515",y1:"1.0246",x2:"0.6716",y2:"-0.1011"}),e("linearGradient",{id:"SGp3_51a1","xlink:href":"#LGp1_45a1",x1:"0.3463",y1:"0.9685",x2:"0.7683",y2:"-0.0186"}),e("linearGradient",{id:"SGp3_55a1","xlink:href":"#LGp1_45a1",x1:"0.4874",y1:"1.0528",x2:"0.3384",y2:"0.0755"}),e("linearGradient",{id:"SGp3_56a1","xlink:href":"#LGp1_53a1",x1:"0.6454",y1:"1.0567",x2:"0.8418",y2:"0.3167"}),e("linearGradient",{id:"SGp3_57a1","xlink:href":"#LGp1_44a1",x1:"1.0321",y1:"0.2690",x2:"-0.0493",y2:"0.6579"}),e("linearGradient",{id:"SGp4_18a1","xlink:href":"#LGp1_15a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp4_22a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp4_23a1","xlink:href":"#LGp1_19a1",x1:"-0.0421",y1:"0.7332",x2:"1.0961",y2:"0.2318"}),e("linearGradient",{id:"SGp4_24a1","xlink:href":"#LGp1_19a1",x1:"0.0393",y1:"0.6997",x2:"0.8967",y2:"0.3640"}),e("linearGradient",{id:"SGp4_25a1","xlink:href":"#LGp1_19a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp4_27a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp4_28a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp4_29a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp4_31a1","xlink:href":"#LGp1_19a1",x1:"-0.0072",y1:"0.8340",x2:"0.9723",y2:"0.4193"}),e("linearGradient",{id:"SGp4_33a1","xlink:href":"#LGp1_31a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp4_34a1","xlink:href":"#LGp1_31a1",x1:"0.1629",y1:"0.9996",x2:"0.8943",y2:"0.0000"}),e("linearGradient",{id:"SGp4_35a1","xlink:href":"#LGp1_33a1",x1:"1.0845",y1:"0.7992",x2:"0.0014",y2:"0.0260"}),e("linearGradient",{id:"SGp4_36a1","xlink:href":"#LGp1_33a1",x1:"0.1073",y1:"-0.1018",x2:"0.9950",y2:"1.0108"}),e("linearGradient",{id:"SGp4_37a1","xlink:href":"#LGp1_33a1",x1:"1.1212",y1:"0.8661",x2:"0.0000",y2:"0.0000"}),e("linearGradient",{id:"SGp4_38a1","xlink:href":"#LGp1_33a1",x1:"0.1857",y1:"-0.0735",x2:"0.9319",y2:"1.0591"}),e("linearGradient",{id:"SGp4_39a1","xlink:href":"#LGp1_33a1",x1:"0.9865",y1:"0.5950",x2:"-0.1365",y2:"0.2994"}),e("linearGradient",{id:"SGp4_40a1","xlink:href":"#LGp1_33a1",x1:"0.2503",y1:"0.3608",x2:"0.8828",y2:"0.8418"}),e("linearGradient",{id:"SGp4_41a1","xlink:href":"#LGp1_33a1",x1:"0.9466",y1:"0.5749",x2:"-0.1461",y2:"0.3573"}),e("linearGradient",{id:"SGp4_42a1","xlink:href":"#LGp1_33a1",x1:"-0.1122",y1:"0.9692",x2:"0.9833",y2:"0.0126"}),e("linearGradient",{id:"SGp4_43a1","xlink:href":"#LGp1_33a1",x1:"0.0729",y1:"1.0271",x2:"0.8698",y2:"-0.0111"}),e("linearGradient",{id:"SGp4_44a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4997",x2:"1.0000",y2:"0.4997"}),e("linearGradient",{id:"SGp4_45a1","xlink:href":"#LGp1_19a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp4_46a1","xlink:href":"#LGp1_19a1",x1:"0.0048",y1:"0.0545",x2:"0.9566",y2:"0.6808"}),e("linearGradient",{id:"SGp4_47a1","xlink:href":"#LGp1_44a1",x1:"0.0835",y1:"1.0753",x2:"0.8295",y2:"-0.3054"}),e("linearGradient",{id:"SGp4_48a1","xlink:href":"#LGp1_45a1",x1:"0.2163",y1:"1.0284",x2:"0.6966",y2:"-0.1108"}),e("linearGradient",{id:"SGp4_49a1","xlink:href":"#LGp1_45a1",x1:"0.5926",y1:"0.9826",x2:"0.0988",y2:"0.0697"}),e("linearGradient",{id:"SGp4_51a1","xlink:href":"#LGp1_45a1",x1:"0.7302",y1:"0.9633",x2:"0.2786",y2:"0.0157"}),e("linearGradient",{id:"SGp4_55a1","xlink:href":"#LGp1_45a1",x1:"0.7029",y1:"0.8601",x2:"0.0767",y2:"0.3382"}),e("linearGradient",{id:"SGp4_56a1","xlink:href":"#LGp1_53a1",x1:"0.5178",y1:"0.9067",x2:"0.3756",y2:"0.0634"}),e("linearGradient",{id:"SGp4_57a1","xlink:href":"#LGp1_44a1",x1:"0.9944",y1:"0.7351",x2:"0.0264",y2:"0.2649"}),e("linearGradient",{id:"SGp5_18a1","xlink:href":"#LGp1_15a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp5_22a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp5_23a1","xlink:href":"#LGp1_19a1",x1:"0.1201",y1:"0.2477",x2:"0.8948",y2:"1.3517"}),e("linearGradient",{id:"SGp5_24a1","xlink:href":"#LGp1_19a1",x1:"0.2222",y1:"0.5739",x2:"0.8534",y2:"0.4686"}),e("linearGradient",{id:"SGp5_25a1","xlink:href":"#LGp1_19a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp5_27a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp5_28a1","xlink:href":"#LGp1_19a1",x1:"-2.8333",y1:"0.6371",x2:"3.0417",y2:"0.3629"}),e("linearGradient",{id:"SGp5_29a1","xlink:href":"#LGp1_19a1",x1:"-1.5862",y1:"0.3182",x2:"2.7586",y2:"0.6832"}),e("linearGradient",{id:"SGp5_31a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4996",x2:"1.0000",y2:"0.4996"}),e("linearGradient",{id:"SGp5_33a1","xlink:href":"#LGp1_31a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp5_34a1","xlink:href":"#LGp1_31a1",x1:"0.7823",y1:"0.9996",x2:"0.1229",y2:"0.0000"}),e("linearGradient",{id:"SGp5_35a1","xlink:href":"#LGp1_33a1",x1:"0.8916",y1:"-0.1002",x2:"0.0195",y2:"1.0079"}),e("linearGradient",{id:"SGp5_36a1","xlink:href":"#LGp1_33a1",x1:"0.0960",y1:"0.7451",x2:"1.0264",y2:"0.0590"}),e("linearGradient",{id:"SGp5_37a1","xlink:href":"#LGp1_33a1",x1:"0.8471",y1:"0.0697",x2:"0.0000",y2:"0.9980"}),e("linearGradient",{id:"SGp5_38a1","xlink:href":"#LGp1_33a1",x1:"-0.1208",y1:"0.6574",x2:"1.0475",y2:"0.2101"}),e("linearGradient",{id:"SGp5_39a1","xlink:href":"#LGp1_33a1",x1:"0.7350",y1:"0.3673",x2:"0.1346",y2:"0.8644"}),e("linearGradient",{id:"SGp5_40a1","xlink:href":"#LGp1_33a1",x1:"-0.0415",y1:"0.6091",x2:"1.0871",y2:"0.2892"}),e("linearGradient",{id:"SGp5_41a1","xlink:href":"#LGp1_33a1",x1:"0.6870",y1:"0.3940",x2:"0.1922",y2:"0.7328"}),e("linearGradient",{id:"SGp5_42a1","xlink:href":"#LGp1_33a1",x1:"0.9213",y1:"1.0332",x2:"0.1022",y2:"-0.0140"}),e("linearGradient",{id:"SGp5_43a1","xlink:href":"#LGp1_33a1",x1:"1.0920",y1:"0.9709",x2:"-0.0368",y2:"0.0116"}),e("linearGradient",{id:"SGp5_44a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.4997",x2:"1.0000",y2:"0.4997"}),e("linearGradient",{id:"SGp5_45a1","xlink:href":"#LGp1_19a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp5_46a1","xlink:href":"#LGp1_19a1",x1:"0.0048",y1:"0.4879",x2:"0.9532",y2:"0.5044"}),e("linearGradient",{id:"SGp5_47a1","xlink:href":"#LGp1_44a1",x1:"0.3886",y1:"0.9862",x2:"0.5542",y2:"0.0323"}),e("linearGradient",{id:"SGp5_48a1","xlink:href":"#LGp1_45a1",x1:"0.9429",y1:"0.2500",x2:"0.1385",y2:"1.1692"}),e("linearGradient",{id:"SGp5_49a1","xlink:href":"#LGp1_45a1",x1:"0.8874",y1:"0.1242",x2:"0.1885",y2:"1.1438"}),e("linearGradient",{id:"SGp5_51a1","xlink:href":"#LGp1_45a1",x1:"0.9401",y1:"0.6325",x2:"-0.0200",y2:"0.1425"}),e("linearGradient",{id:"SGp5_55a1","xlink:href":"#LGp1_45a1",x1:"1.0494",y1:"0.5176",x2:"0.0608",y2:"0.6482"}),e("linearGradient",{id:"SGp5_56a1","xlink:href":"#LGp1_53a1",x1:"0.8329",y1:"0.7950",x2:"0.2585",y2:"0.5036"}),e("linearGradient",{id:"SGp5_57a1","xlink:href":"#LGp1_44a1",x1:"0.9887",y1:"0.0741",x2:"-0.1017",y2:"0.8346"}),e("linearGradient",{id:"SGp6_18a1","xlink:href":"#LGp1_15a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp6_22a1","xlink:href":"#LGp1_19a1",x1:"-0.1024",y1:"1.2094",x2:"0.8757",y2:"0.4946"}),e("linearGradient",{id:"SGp6_23a1","xlink:href":"#LGp1_19a1",x1:"-0.0384",y1:"0.6011",x2:"1.0556",y2:"0.3720"}),e("linearGradient",{id:"SGp6_24a1","xlink:href":"#LGp1_19a1",x1:"0.0052",y1:"0.6771",x2:"1.0652",y2:"0.4387"}),e("linearGradient",{id:"SGp6_25a1","xlink:href":"#LGp1_19a1",x1:"0.0242",y1:"0.5692",x2:"0.9885",y2:"0.4649"}),e("linearGradient",{id:"SGp6_26a1","xlink:href":"#LGp1_19a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp6_28a1","xlink:href":"#LGp1_19a1",x1:"0.0000",y1:"0.5840",x2:"1.0000",y2:"0.5840"}),e("linearGradient",{id:"SGp6_29a1","xlink:href":"#LGp1_19a1",x1:"0.1332",y1:"0.4194",x2:"0.8623",y2:"0.5763"}),e("linearGradient",{id:"SGp6_30a1","xlink:href":"#LGp1_19a1",x1:"-0.0111",y1:"0.4936",x2:"1.0089",y2:"0.5064"}),e("linearGradient",{id:"SGp6_32a1","xlink:href":"#LGp1_19a1",x1:"0.0104",y1:"0.0929",x2:"1.0186",y2:"0.5953"}),e("linearGradient",{id:"SGp6_34a1","xlink:href":"#LGp1_31a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp6_35a1","xlink:href":"#LGp1_31a1",x1:"0.3772",y1:"0.9996",x2:"0.7566",y2:"0.0000"}),e("linearGradient",{id:"SGp6_36a1","xlink:href":"#LGp1_33a1",x1:"1.0391",y1:"0.7318",x2:"0.0070",y2:"0.0783"}),e("linearGradient",{id:"SGp6_37a1","xlink:href":"#LGp1_33a1",x1:"0.0404",y1:"-0.0820",x2:"0.9985",y2:"1.0196"}),e("linearGradient",{id:"SGp6_38a1","xlink:href":"#LGp1_33a1",x1:"1.0565",y1:"0.5830",x2:"0.0000",y2:"0.2145"}),e("linearGradient",{id:"SGp6_39a1","xlink:href":"#LGp1_33a1",x1:"0.0788",y1:"0.3124",x2:"0.9882",y2:"1.0193"}),e("linearGradient",{id:"SGp6_40a1","xlink:href":"#LGp1_33a1",x1:"1.0719",y1:"0.5359",x2:"-0.0462",y2:"0.4197"}),e("linearGradient",{id:"SGp6_41a1","xlink:href":"#LGp1_33a1",x1:"0.1156",y1:"0.4515",x2:"0.9633",y2:"0.5934"}),e("linearGradient",{id:"SGp6_42a1","xlink:href":"#LGp1_33a1",x1:"1.1370",y1:"0.5290",x2:"-0.0548",y2:"0.4446"}),e("linearGradient",{id:"SGp6_43a1","xlink:href":"#LGp1_33a1",x1:"0.2141",y1:"1.0075",x2:"0.6965",y2:"-0.0032"}),e("linearGradient",{id:"SGp6_44a1","xlink:href":"#LGp1_19a1",x1:"0.0319",y1:"0.7935",x2:"1.0438",y2:"0.4052"}),e("linearGradient",{id:"SGp6_45a1","xlink:href":"#LGp1_19a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp6_46a1","xlink:href":"#LGp1_44a1",x1:"0.0036",y1:"0.4891",x2:"0.9692",y2:"0.4674"}),e("linearGradient",{id:"SGp6_47a1","xlink:href":"#LGp1_45a1",x1:"1.0100",y1:"0.6645",x2:"-0.0576",y2:"0.3783"}),e("linearGradient",{id:"SGp6_48a1","xlink:href":"#LGp1_45a1",x1:"1.0128",y1:"0.6945",x2:"-0.0692",y2:"0.3601"}),e("linearGradient",{id:"SGp6_50a1","xlink:href":"#LGp1_45a1",x1:"0.7786",y1:"0.9158",x2:"0.0807",y2:"0.0269"}),e("linearGradient",{id:"SGp6_54a1","xlink:href":"#LGp1_45a1",x1:"0.7597",y1:"0.7636",x2:"-0.0530",y2:"0.4208"}),e("linearGradient",{id:"SGp6_55a1","xlink:href":"#LGp1_53a1",x1:"0.6840",y1:"0.8173",x2:"0.4074",y2:"0.1571"}),e("linearGradient",{id:"SGp6_56a1","xlink:href":"#LGp1_44a1",x1:"0.0387",y1:"0.9868",x2:"0.9097",y2:"0.0395"}),e("linearGradient",{id:"SGp6_65a1","xlink:href":"#LGp1_33a1",x1:"0.8144",y1:"0.9898",x2:"0.2118",y2:"0.0038"}),e("linearGradient",{id:"SGp7_18a1","xlink:href":"#LGp7_18a1",x1:"0.5000",y1:"0.0000",x2:"0.5022",y2:"0.9997"}),e("linearGradient",{id:"SGp7_22a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_23a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.6008",x2:"1.0000",y2:"0.3718"}),e("linearGradient",{id:"SGp7_24a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.6772",x2:"1.0000",y2:"0.4387"}),e("linearGradient",{id:"SGp7_25a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.5465",x2:"1.0000",y2:"0.4463"}),e("linearGradient",{id:"SGp7_26a1","xlink:href":"#LGp7_22a1",x1:"0.9979",y1:"0.5110",x2:"-0.0021",y2:"0.4890"}),e("linearGradient",{id:"SGp7_28a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_29a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_30a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_32a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.4996",x2:"1.0000",y2:"0.4996"}),e("linearGradient",{id:"SGp7_34a1","xlink:href":"#LGp7_34a1",x1:"0.5001",y1:"0.0000",x2:"0.4964",y2:"1.2827"}),e("linearGradient",{id:"SGp7_35a1","xlink:href":"#LGp7_34a1",x1:"0.4970",y1:"0.9996",x2:"0.5539",y2:"0.0000"}),e("linearGradient",{id:"SGp7_36a1","xlink:href":"#LGp7_36a1",x1:"1.0000",y1:"0.4984",x2:"0.0108",y2:"0.4984"}),e("linearGradient",{id:"SGp7_37a1","xlink:href":"#LGp7_36a1",x1:"0.0000",y1:"0.4992",x2:"1.0007",y2:"0.4992"}),e("linearGradient",{id:"SGp7_38a1","xlink:href":"#LGp7_36a1",x1:"1.0000",y1:"0.4993",x2:"0.0000",y2:"0.3491"}),e("linearGradient",{id:"SGp7_39a1","xlink:href":"#LGp7_36a1",x1:"0.0000",y1:"0.5000",x2:"1.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_40a1","xlink:href":"#LGp7_36a1",x1:"1.0000",y1:"0.5000",x2:"0.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_41a1","xlink:href":"#LGp7_36a1",x1:"0.0000",y1:"0.5000",x2:"0.9984",y2:"0.5000"}),e("linearGradient",{id:"SGp7_42a1","xlink:href":"#LGp7_36a1",x1:"1.0000",y1:"0.5000",x2:"0.0000",y2:"0.5000"}),e("linearGradient",{id:"SGp7_43a1","xlink:href":"#LGp7_36a1",x1:"0.4122",y1:"0.9990",x2:"0.4122",y2:"0.0000"}),e("linearGradient",{id:"SGp7_44a1","xlink:href":"#LGp7_36a1",x1:"0.5057",y1:"0.9990",x2:"0.5057",y2:"0.0000"}),e("linearGradient",{id:"SGp7_45a1","xlink:href":"#LGp7_22a1",x1:"0.0000",y1:"0.4997",x2:"1.0000",y2:"0.4997"}),e("linearGradient",{id:"SGp7_46a1","xlink:href":"#LGp7_22a1",x1:"-0.3281",y1:"0.5055",x2:"0.9699",y2:"0.5055"}),e("linearGradient",{id:"SGp7_47a1","xlink:href":"#LGp7_47a1",x1:"0.0381",y1:"1.0000",x2:"0.8910",y2:"-0.1609"}),e("linearGradient",{id:"SGp7_48a1","xlink:href":"#LGp7_48a1",x1:"0.2163",y1:"1.0284",x2:"0.6966",y2:"-0.1108"}),e("linearGradient",{id:"SGp7_49a1","xlink:href":"#LGp7_48a1",x1:"0.4979",y1:"0.9977",x2:"0.4979",y2:"0.0000"}),e("linearGradient",{id:"SGp7_51a1","xlink:href":"#LGp7_48a1",x1:"0.6254",y1:"1.0000",x2:"0.6317",y2:"0.0000"}),e("linearGradient",{id:"SGp7_55a1","xlink:href":"#LGp7_48a1",x1:"0.5806",y1:"1.0203",x2:"0.1944",y2:"0.2568"}),e("linearGradient",{id:"SGp7_56a1","xlink:href":"#LGp7_56a1",x1:"0.4431",y1:"1.0000",x2:"0.4431",y2:"0.1643"}),e("linearGradient",{id:"SGp7_57a1","xlink:href":"#LGp7_47a1",x1:"0.9714",y1:"1.0309",x2:"0.0743",y2:"-0.3580"}),e("g",{id:"BSp1a1"},[e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-34.44,82.31L-31.81,93.56 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-36.12,71.00L-34.75,77.56 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M392.38,58.88L389.75,99.62 388.88,100.50 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M473.00,88.38L475.62,99.62 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M471.31,77.06L472.69,83.62 "}),e("path",{fill:"#99ffcc",stroke:"none","stroke-width":"3.00",d:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("path",{fill:"url(#SGp1_15a1)",stroke:"none","stroke-width":"3.00",d:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("path",{fill:"#ffffff",stroke:"none",d:"M437.31,236.00Q452.62,236.25 464.12,239.25 Q474.44,242.56 475.31,247.00 Q474.44,251.44 464.12,254.75 Q452.62,257.75 437.31,258.00 Q421.94,257.75 410.50,254.75 Q400.12,251.44 399.31,247.00 Q400.12,242.56 410.50,239.25 Q421.94,236.25 437.31,236.00 Z"}),e("path",{fill:"#ffffff",stroke:"none",d:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z"}),e("path",{fill:"#ffffff",stroke:"none",d:"M22.50,213.06Q42.88,213.38 58.12,217.69 Q71.81,222.44 72.94,228.81 Q71.81,235.19 58.12,239.94 Q42.88,244.19 22.50,244.56 Q2.06,244.19 -13.12,239.94 Q-26.81,235.19 -27.94,228.81 Q-26.81,222.44 -13.12,217.69 Q2.06,213.38 22.50,213.06 Z"}),e("path",{fill:"url(#SGp1_19a1)",stroke:"none",d:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 "}),e("path",{fill:"url(#SGp1_20a1)",stroke:"none",d:"M37.38,152.25Q39.00,136.94 42.62,117.19 Q45.75,105.88 50.50,99.44 Q54.88,91.19 62.19,83.88 Q69.81,76.19 81.75,69.75 Q91.31,64.25 110.44,59.00 Q139.94,51.50 167.81,45.62 Q183.50,41.44 190.00,41.38 Q202.81,42.31 210.19,44.31 L173.69,63.88 Q164.00,68.75 147.56,78.38 Q133.50,87.25 120.25,97.12 Q107.31,107.31 97.38,115.19 Q89.44,118.50 81.75,124.56 Q68.69,140.19 59.56,153.50 L37.38,162.50 "}),e("path",{fill:"url(#SGp1_21a1)",stroke:"none",d:"M46.25,170.81Q41.81,167.94 37.38,162.50 Q29.50,157.81 37.38,152.25 Q57.38,148.12 91.50,140.12 Q122.44,128.00 147.56,114.00 Q164.62,103.25 178.19,94.00 Q202.88,81.25 219.94,73.56 Q218.06,78.88 212.50,90.94 Q205.69,104.19 197.44,117.94 Q190.56,128.38 184.19,137.12 Q175.88,149.56 170.88,157.25 L169.62,161.88 Q152.94,179.19 126.44,196.44 Q103.19,201.12 86.75,196.06 Q76.69,195.94 70.69,191.38 Q56.81,181.62 47.00,173.06 "}),e("path",{fill:"url(#SGp1_22a1)",stroke:"none",d:"M37.38,152.25Q30.88,152.25 20.56,160.44 Q9.94,172.06 4.94,193.12 Q5.56,220.06 10.19,238.88 L34.19,237.06 Q39.19,236.38 47.19,234.25 Q54.69,230.88 58.94,228.31 Q48.12,224.50 35.44,215.56 Q27.94,206.62 27.62,194.94 Q27.69,181.06 32.88,170.81 Q39.69,164.69 45.25,164.69 L45.25,156.44 "}),e("path",{fill:"url(#SGp1_23a1)",stroke:"none",d:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 "}),e("path",{fill:"#610000",stroke:"none",d:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z"}),e("path",{fill:"url(#SGp1_25a1)",stroke:"none",d:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 "}),e("path",{fill:"url(#SGp1_26a1)",stroke:"none",d:"M261.88,198.19Q261.31,199.31 263.38,196.62 Q267.44,190.75 273.44,181.06 Q279.25,170.50 282.56,163.88 Q279.12,172.25 273.56,183.94 Q268.06,193.00 264.88,197.12 "}),e("path",{fill:"url(#SGp1_27a1)",stroke:"none",d:"M238.88,198.81Q239.56,199.94 236.81,197.25 Q231.19,191.44 222.94,181.88 Q214.88,171.44 210.38,164.88 Q215.06,173.12 222.75,184.75 Q230.25,193.75 234.75,197.81 "}),e("path",{fill:"#610000",stroke:"none",d:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z"}),e("path",{fill:"url(#SGp1_29a1)",stroke:"none",d:"M431.75,194.56Q430.00,180.12 426.25,162.31 Q423.00,152.62 418.06,148.81 Q413.44,142.94 405.81,139.62 Q397.81,136.06 385.38,136.06 Q375.25,135.75 355.31,140.81 Q324.44,149.25 295.31,158.50 Q278.75,162.88 272.00,166.31 Q258.50,174.19 250.94,180.19 L289.12,179.94 Q299.12,179.62 316.38,180.31 Q331.12,181.62 345.06,184.31 Q358.56,187.50 369.00,189.94 Q377.25,188.94 385.38,190.88 Q399.00,199.44 408.56,207.81 L431.75,204.81 "}),e("path",{fill:"#e8e8e8",stroke:"none",d:"M250.88,290.62Q313.88,291.38 360.94,301.69 Q403.38,313.06 406.88,328.44 Q403.44,343.69 361.12,355.12 Q314.19,365.38 251.19,366.19 Q188.06,365.38 141.06,355.12 Q98.62,343.69 95.19,328.44 Q98.50,313.06 140.88,301.69 Q187.81,291.38 250.88,290.62 Z"}),e("path",{fill:"url(#SGp1_31a1)",stroke:"none","stroke-width":"3.00",d:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("path",{fill:"url(#SGp1_32a1)",stroke:"none","stroke-width":"3.00",d:"M250.31,134.69L263.31,134.31 Q263.50,148.12 263.88,171.19 Q264.06,185.00 264.50,208.06 Q265.12,249.50 265.69,281.81 Q266.31,283.19 264.75,285.25 Q261.25,287.25 255.62,287.94 Q249.75,287.88 245.94,286.12 Q244.19,283.69 244.88,281.81 Q245.31,268.00 246.19,245.00 Q246.69,231.19 247.56,208.25 Q249.06,166.88 250.31,134.69 Z"}),e("path",{fill:"url(#SGp1_33a1)",stroke:"none","stroke-width":"3.00",d:"M255.19,137.56Q255.75,137.06 259.50,134.44 Q264.44,130.25 272.06,125.56 Q278.81,121.94 286.69,120.31 Q294.50,118.56 303.56,119.38 Q312.62,119.94 322.75,124.31 Q334.62,130.56 343.69,138.50 Q349.94,144.94 351.44,150.19 Q354.44,157.44 353.19,159.31 Q350.62,156.50 343.69,149.44 Q336.19,144.75 327.62,141.50 Q320.38,138.88 313.81,137.38 Q307.12,134.75 300.50,133.62 Q294.25,133.75 286.62,135.50 Q275.44,137.00 267.75,138.06 "}),e("path",{fill:"url(#SGp1_34a1)",stroke:"none","stroke-width":"3.00",d:"M256.19,137.69Q256.12,137.19 253.25,134.44 Q248.75,130.19 241.69,125.44 Q235.44,121.75 228.19,120.06 Q220.88,118.19 212.62,118.94 Q204.19,119.44 194.94,123.81 Q184.00,130.00 175.69,137.88 Q169.88,144.31 168.50,149.50 Q165.69,156.69 166.88,158.56 Q169.19,155.75 175.69,148.75 Q182.56,144.12 190.44,140.94 Q197.12,138.38 203.25,136.88 Q209.31,134.31 215.44,133.31 Q221.19,133.44 228.25,135.25 Q238.50,136.81 245.62,138.00 "}),e("path",{fill:"url(#SGp1_35a1)",stroke:"none","stroke-width":"3.00",d:"M256.19,137.69Q256.19,137.19 258.50,134.69 Q261.88,130.81 267.31,126.69 Q272.00,123.50 277.50,122.44 Q282.94,121.19 289.25,122.69 Q295.56,123.88 302.69,129.00 Q310.94,136.06 317.25,144.62 Q321.62,151.50 322.75,156.81 Q324.81,164.25 323.94,166.06 Q322.12,163.06 317.25,155.56 Q312.06,150.31 306.12,146.50 Q301.00,143.38 296.44,141.38 Q291.75,138.25 287.12,136.69 Q282.75,136.38 277.50,137.62 Q269.69,138.31 264.31,138.88 "}),e("path",{fill:"url(#SGp1_36a1)",stroke:"none","stroke-width":"3.00",d:"M255.19,137.56Q255.00,133.31 252.69,126.81 Q249.31,121.44 244.19,117.69 Q239.62,114.12 234.44,113.25 Q229.19,112.19 223.38,114.44 Q217.50,116.44 211.12,123.25 Q203.62,132.56 198.06,143.56 Q194.19,152.31 193.44,158.88 Q191.69,168.19 192.62,170.31 Q194.12,166.50 198.44,156.88 Q203.06,150.06 208.56,144.94 Q213.19,140.75 217.44,137.94 Q221.69,133.75 226.00,131.50 Q230.06,130.81 235.12,131.88 Q242.38,132.19 247.44,132.44 "}),e("path",{fill:"url(#SGp1_37a1)",stroke:"none","stroke-width":"3.00",d:"M260.25,135.88Q260.62,131.62 262.75,125.38 Q265.50,120.31 269.44,117.06 Q272.88,114.06 276.62,113.81 Q280.31,113.31 284.25,116.31 Q288.19,119.00 292.19,126.62 Q296.69,136.94 299.75,148.69 Q301.69,158.00 301.75,164.75 Q302.19,174.31 301.44,176.38 Q300.62,172.31 298.38,162.12 Q295.62,154.69 292.25,148.88 Q289.31,144.06 286.56,140.75 Q283.88,136.00 281.12,133.19 Q278.31,132.00 274.75,132.56 Q269.56,131.94 266.00,131.56 "}),e("path",{fill:"url(#SGp1_38a1)",stroke:"none","stroke-width":"3.00",d:"M256.19,137.69Q256.12,133.50 254.81,127.19 Q252.81,121.94 249.69,118.38 Q246.88,115.00 243.69,114.25 Q240.44,113.31 236.75,115.69 Q233.00,117.81 228.94,124.75 Q224.06,134.06 220.38,145.00 Q217.81,153.81 217.25,160.44 Q216.00,169.62 216.56,171.69 Q217.56,167.88 220.38,158.25 Q223.38,151.44 226.94,146.25 Q229.88,141.94 232.62,139.06 Q235.31,134.88 238.06,132.50 Q240.56,131.62 243.75,132.56 Q248.31,132.69 251.50,132.81 "}),e("path",{fill:"url(#SGp1_39a1)",stroke:"none","stroke-width":"3.00",d:"M255.50,139.56Q255.50,135.38 256.44,129.12 Q257.81,124.00 260.06,120.62 Q262.00,117.38 264.25,116.81 Q266.50,116.06 269.06,118.69 Q271.62,121.00 274.50,128.12 Q277.81,137.75 280.44,148.94 Q282.25,157.88 282.69,164.50 Q283.50,173.75 283.12,175.75 Q282.38,171.88 280.44,162.12 Q278.31,155.12 275.88,149.69 Q273.75,145.25 271.88,142.25 Q269.94,137.94 268.12,135.44 Q266.31,134.50 264.19,135.25 Q261.00,135.06 258.81,135.00 "}),e("path",{fill:"url(#SGp1_40a1)",stroke:"none","stroke-width":"3.00",d:"M252.69,120.75Q254.00,115.88 258.06,116.81 Q263.19,121.25 267.44,130.69 Q269.44,138.56 269.00,146.62 Q269.69,153.88 268.56,161.06 Q265.62,172.19 262.75,176.56 Q261.88,174.38 262.38,163.75 Q262.44,153.75 261.88,145.19 Q260.69,140.06 258.56,137.69 Q256.19,134.00 254.31,129.94 Q252.25,124.81 252.69,120.75 Z"}),e("path",{fill:"url(#SGp1_41a1)",stroke:"none","stroke-width":"3.00",d:"M258.75,123.25Q256.75,117.88 251.88,118.06 Q247.12,122.50 243.75,132.31 Q242.00,140.31 242.38,148.38 Q241.75,155.62 242.75,162.75 Q245.25,173.75 247.75,178.00 Q248.12,176.75 248.12,165.19 Q249.31,151.38 251.44,138.88 Q253.19,132.56 255.12,131.00 Q258.25,126.75 258.75,123.25 Z"}),e("path",{fill:"url(#SGp1_42a1)",stroke:"none",d:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 "}),e("path",{fill:"url(#SGp1_43a1)",stroke:"none",d:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 "}),e("path",{fill:"url(#SGp1_44a1)",stroke:"none","stroke-width":"1.00",d:"M255.81,70.62Q254.44,71.62 252.12,72.19 Q250.62,72.69 248.88,72.62 Q246.75,72.25 244.12,71.81 Q241.12,71.75 238.44,71.88 Q235.75,71.75 234.50,71.62 Q233.19,71.12 230.56,71.50 Q227.25,73.19 224.94,75.00 L224.75,73.12 Q225.00,72.94 225.56,72.56 Q226.19,72.06 226.62,71.75 Q225.25,71.94 223.12,72.19 Q220.94,72.31 219.75,72.12 Q218.94,71.69 220.00,71.12 Q221.75,70.69 224.00,70.44 Q225.44,70.12 225.94,70.06 Q224.88,69.38 223.31,68.50 Q221.88,68.06 221.06,67.69 Q220.12,66.75 220.50,66.31 Q221.50,66.38 223.44,67.19 Q225.31,67.88 226.50,68.38 Q225.25,66.88 224.38,65.19 Q224.50,63.88 225.69,64.19 Q226.50,65.50 227.62,67.44 Q227.62,68.31 229.81,68.56 Q234.38,69.31 240.31,69.31 Q245.44,68.38 247.94,67.31 Q248.50,67.00 250.38,67.06 Q253.00,67.25 255.25,68.12 Q256.56,69.31 255.81,70.62 Z"}),e("path",{fill:"url(#SGp1_45a1)",stroke:"none","stroke-width":"1.00",d:"M250.19,102.75L243.06,119.81 L239.69,119.81 L237.50,119.25 L237.12,119.31 Q237.12,118.81 236.81,118.06 Q236.12,117.38 235.25,116.88 Q234.44,116.44 234.12,116.38 Q233.75,116.44 233.44,116.88 Q233.25,117.62 233.31,118.25 L234.88,119.31 L233.56,119.94 L233.31,121.00 Q234.06,121.44 235.25,122.50 Q236.12,123.75 236.56,124.69 Q237.50,124.31 238.88,124.06 Q240.00,124.00 240.62,124.12 Q241.50,123.75 243.25,123.69 Q245.25,124.06 246.69,124.56 Q247.19,124.00 247.50,122.69 Q247.06,120.81 246.50,119.44 L248.19,115.56 L255.50,103.19 "}),e("path",{fill:"url(#SGp1_46a1)",stroke:"none","stroke-width":"1.00",d:"M257.69,106.69L257.88,125.19 L254.69,126.50 L252.44,126.88 L252.12,127.06 Q251.94,126.56 251.38,126.06 Q250.50,125.69 249.50,125.62 Q248.62,125.56 248.25,125.62 Q248.00,125.75 247.88,126.25 Q247.94,126.94 248.19,127.56 L250.06,127.94 L249.19,129.06 L249.31,130.12 Q250.19,130.19 251.69,130.69 Q253.00,131.50 253.75,132.19 Q254.44,131.56 255.62,130.81 Q256.62,130.31 257.25,130.19 Q257.94,129.44 259.50,128.62 Q261.50,128.12 263.00,128.12 Q263.25,127.44 263.00,126.12 Q261.88,124.50 260.81,123.44 L260.81,119.19 L262.62,105.00 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.75,52.31Q250.06,54.19 250.31,56.50 Q250.12,57.25 249.94,58.25 Q250.12,60.94 250.44,63.25 L249.94,65.44 L252.62,74.75 "}),e("path",{fill:"url(#SGp1_48a1)",stroke:"none","stroke-width":"1.00",d:"M253.19,70.06Q250.50,75.19 247.69,82.44 Q246.12,87.19 247.12,90.50 Q248.69,94.50 251.69,96.69 Q253.50,97.75 256.50,97.38 Q261.50,98.50 265.50,97.62 Q266.88,94.88 266.19,90.12 Q266.62,86.75 266.75,82.00 Q266.44,74.75 265.75,68.94 Q265.38,66.38 264.50,66.19 Q262.81,63.94 261.50,62.44 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.31,50.50Q251.50,50.75 249.75,52.31 Q247.50,53.56 245.69,57.19 Q244.50,63.25 244.44,68.19 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.19,55.44L249.56,56.56 L248.12,64.62 Q248.25,66.38 248.38,69.19 Q248.25,71.75 248.06,73.19 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.75,52.31L248.06,58.31 246.62,72.31 "}),e("path",{fill:"url(#SGp1_52a1)",stroke:"none","stroke-width":"3.00",d:"M255.50,68.06Q256.50,68.25 256.25,67.62 Q256.50,67.38 256.94,67.19 Q257.38,67.00 258.44,66.56 Q260.12,66.00 261.62,65.12 Q262.19,64.19 262.19,63.25 Q262.38,62.56 262.81,61.44 Q263.75,59.88 264.00,57.50 Q263.75,54.56 261.81,52.25 Q259.44,50.06 255.81,50.44 Q251.25,51.88 248.25,55.38 Q247.19,59.12 248.12,61.69 Q246.94,61.88 244.94,62.75 Q242.81,63.62 241.56,65.19 Q240.81,67.12 241.62,68.62 Q242.50,69.38 244.31,68.88 Q246.31,68.19 248.06,67.00 Q249.38,65.69 249.75,64.94 Q252.50,66.50 255.50,68.06 Z"}),e("path",{fill:"url(#SGp1_53a1)",stroke:"none","stroke-width":"1.00",d:"M266.38,94.81L247.12,90.50 245.88,105.56 251.31,106.50 251.69,107.94 254.12,107.94 271.62,106.94 "}),e("path",{fill:"url(#SGp1_54a1)",stroke:"none","stroke-width":"1.00",d:"M264.31,69.38Q265.69,70.44 267.88,71.06 Q269.25,71.62 270.81,71.69 Q272.56,71.44 274.94,71.25 Q277.50,71.38 280.06,71.75 Q282.56,71.88 283.81,71.88 Q284.75,71.50 287.19,72.06 Q290.38,73.81 292.75,75.62 L292.62,73.88 Q292.31,73.69 291.81,73.38 Q291.19,72.88 290.88,72.50 Q292.12,72.81 294.12,73.19 Q296.00,73.50 297.06,73.44 Q297.75,73.00 296.81,72.31 Q295.12,71.75 293.06,71.44 Q291.62,71.06 291.19,70.94 Q292.06,70.38 293.44,69.75 Q294.56,69.44 295.25,69.12 Q295.94,68.38 295.62,67.94 Q294.81,67.94 293.25,68.50 Q291.56,69.00 290.50,69.38 Q291.44,68.06 292.12,66.56 Q291.75,65.31 290.69,65.56 Q290.00,66.69 289.31,68.38 Q289.38,69.25 287.50,69.38 Q283.44,69.69 278.12,69.19 Q273.38,67.94 271.00,66.81 Q270.44,66.44 268.81,66.25 Q266.38,66.19 264.50,66.94 Q263.38,68.00 264.31,69.38 Z"}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.75,52.31L254.75,52.25 Q255.94,55.19 258.06,59.12 Q259.69,60.62 261.50,62.75 Q263.75,67.81 265.25,72.00 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M254.75,52.25L258.44,54.75 Q259.00,56.06 260.75,58.75 Q262.94,61.25 265.31,63.88 Q267.25,66.69 268.12,68.25 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.31,50.50L260.38,50.69 Q262.00,52.12 265.38,54.88 Q269.25,57.94 271.94,60.06 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M254.75,52.25Q257.88,54.75 262.19,57.94 Q265.12,59.75 266.62,60.50 Q267.75,61.12 268.06,61.50 Q268.69,62.31 269.06,62.94 Q269.56,63.19 270.38,63.81 Q271.06,64.62 271.50,65.31 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.31,50.50Q255.56,51.19 259.62,52.88 Q261.44,54.44 262.75,56.44 Q265.31,58.50 267.75,60.31 Q269.56,61.94 270.12,62.62 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.31,50.50Q253.25,50.19 255.50,50.06 Q257.88,50.19 260.38,50.69 Q262.25,50.81 263.81,51.44 Q265.31,52.12 267.44,53.62 Q270.62,55.75 273.00,57.44 "}),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00",d:"M251.62,58.25Q251.81,58.19 252.19,58.50 Q252.56,58.75 253.00,59.31 Q253.38,59.88 253.50,60.44 Q253.50,60.94 253.25,61.19 Q253.06,61.25 252.75,60.94 Q252.31,60.50 251.94,59.94 Q251.56,59.38 251.50,58.94 Q251.44,58.44 251.62,58.25 Z"}),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00",d:"M247.50,58.88Q247.56,58.75 247.69,59.12 Q247.75,59.50 247.81,60.12 Q247.88,60.75 247.94,61.31 Q248.00,61.81 248.00,62.00 Q247.88,62.06 247.75,61.75 Q247.62,61.31 247.62,60.69 Q247.56,60.06 247.56,59.56 Q247.50,59.00 247.50,58.88 Z"})])]),e("g",{id:"SVG_Start"},[e("rect",{fill:"white",x:"0",y:"0",width:"512",height:"384"},[e("animate",{id:"Sa",begin:"0s;Sa.end",dur:"4.9s",attributeName:"visibility",from:"visible",to:"visible"})])]),e("use",{"xlink:href":"#BSp1a1"},[e("set",{fill:"freeze",begin:"Sa.begin",attributeName:"visibility",to:"visible"})]),e("rect",{fill:"black",width:"512",height:"384"},[e("set",{fill:"freeze",begin:"0s",attributeName:"display",to:"none"})]),e("g",{id:"P2a1"},[e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-143.50,-36.38L-145.38,-7.25 -146.00,-6.62 ",to:"M-143.50,-36.38L-145.38,-7.25 -146.00,-6.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-134.50,-30.50Q-136.12,-28.88 -139.19,-25.81 Q-142.50,-22.12 -144.75,-19.62 L-136.56,-5.69 ",to:"M-134.50,-30.50Q-136.12,-28.88 -139.19,-25.81 Q-142.50,-22.12 -144.75,-19.62 L-136.56,-5.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-132.38,-16.56Q-134.62,-13.56 -134.88,-9.38 Q-132.75,-6.56 -129.88,-7.25 Q-128.56,-9.88 -129.31,-13.75 Q-130.44,-16.81 -132.38,-16.56 Z",to:"M-132.38,-16.56Q-134.62,-13.56 -134.88,-9.38 Q-132.75,-6.56 -129.88,-7.25 Q-128.56,-9.88 -129.31,-13.75 Q-130.44,-16.81 -132.38,-16.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-125.56,-17.25L-121.25,-6.62 Q-122.19,-10.94 -122.50,-15.81 Q-122.00,-18.88 -120.00,-17.69 Q-117.19,-13.94 -115.06,-9.75 Q-116.12,-13.88 -116.44,-18.06 Q-115.31,-20.38 -113.19,-17.88 Q-111.25,-12.19 -110.12,-6.62 ",to:"M-125.56,-17.25L-121.25,-6.62 Q-122.19,-10.94 -122.50,-15.81 Q-122.00,-18.88 -120.00,-17.69 Q-117.19,-13.94 -115.06,-9.75 Q-116.12,-13.88 -116.44,-18.06 Q-115.31,-20.38 -113.19,-17.88 Q-111.25,-12.19 -110.12,-6.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-107.81,-15.38Q-107.12,-18.69 -104.75,-18.50 Q-100.62,-15.00 -99.12,-10.44 Q-101.94,-8.00 -106.56,-9.19 Q-108.50,-11.69 -107.81,-15.38 Z",to:"M-107.81,-15.38Q-107.12,-18.69 -104.75,-18.50 Q-100.62,-15.00 -99.12,-10.44 Q-101.94,-8.00 -106.56,-9.19 Q-108.50,-11.69 -107.81,-15.38 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-97.12,-22.81L-93.38,-9.19 Q-94.44,-13.19 -94.62,-17.88 Q-92.94,-20.19 -90.94,-20.38 ",to:"M-97.12,-22.81L-93.38,-9.19 Q-94.44,-13.19 -94.62,-17.88 Q-92.94,-20.19 -90.94,-20.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-86.00,-15.31L-84.12,-7.25 ",to:"M-86.00,-15.31L-84.12,-7.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-87.19,-23.38L-86.25,-18.69 ",to:"M-87.19,-23.38L-86.25,-18.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M395.50,12.50L392.88,53.25 392.00,54.12 ",to:"M395.50,12.50L392.88,53.25 392.00,54.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M408.19,20.69Q405.88,22.88 401.62,27.25 Q396.88,32.38 393.81,35.94 L405.25,55.50 ",to:"M408.19,20.69Q405.88,22.88 401.62,27.25 Q396.88,32.38 393.81,35.94 L405.25,55.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M411.12,40.25Q407.94,44.38 407.62,50.31 Q410.56,54.12 414.62,53.25 Q416.44,49.56 415.44,44.19 Q413.81,39.81 411.12,40.25 Z",to:"M411.12,40.25Q407.94,44.38 407.62,50.31 Q410.56,54.12 414.62,53.25 Q416.44,49.56 415.44,44.19 Q413.81,39.81 411.12,40.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M420.69,39.25L426.75,54.12 Q425.44,48.00 425.00,41.31 Q425.62,37.00 428.50,38.69 Q432.38,43.88 435.44,49.81 Q433.81,43.94 433.44,38.12 Q434.94,34.81 438.06,38.38 Q440.75,46.25 442.31,54.12 ",to:"M420.69,39.25L426.75,54.12 Q425.44,48.00 425.00,41.31 Q425.62,37.00 428.50,38.69 Q432.38,43.88 435.44,49.81 Q433.81,43.94 433.44,38.12 Q434.94,34.81 438.06,38.38 Q440.75,46.25 442.31,54.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M445.56,41.88Q446.50,37.19 449.88,37.56 Q455.56,42.38 457.69,48.81 Q453.69,52.12 447.31,50.56 Q444.56,46.94 445.56,41.88 Z",to:"M445.56,41.88Q446.50,37.19 449.88,37.56 Q455.56,42.38 457.69,48.81 Q453.69,52.12 447.31,50.56 Q444.56,46.94 445.56,41.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M460.50,31.50L465.75,50.56 Q464.19,44.88 464.00,38.38 Q466.38,35.12 469.19,34.94 ",to:"M460.50,31.50L465.75,50.56 Q464.19,44.88 464.00,38.38 Q466.38,35.12 469.19,34.94 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M476.12,42.00L478.75,53.25 ",to:"M476.12,42.00L478.75,53.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M474.44,30.69L475.81,37.25 ",to:"M474.44,30.69L475.81,37.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 ",to:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 ",to:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z",to:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 ",to:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z",to:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 ",to:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-34.44,82.31L-31.81,93.56 ",to:"M-34.44,82.31L-31.81,93.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-36.12,71.00L-34.75,77.56 ",to:"M-36.12,71.00L-34.75,77.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#99ffcc",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z",to:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_26a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z",to:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M437.31,236.00Q452.62,236.25 464.12,239.25 Q474.44,242.56 475.31,247.00 Q474.44,251.44 464.12,254.75 Q452.62,257.75 437.31,258.00 Q421.94,257.75 410.50,254.75 Q400.12,251.44 399.31,247.00 Q400.12,242.56 410.50,239.25 Q421.94,236.25 437.31,236.00 Z",to:"M407.50,240.25Q427.56,240.38 442.62,243.38 Q456.19,246.62 457.31,251.06 Q456.19,255.50 442.62,258.88 Q427.56,261.88 407.50,262.25 Q387.38,262.06 372.38,259.12 Q358.75,255.81 357.69,251.44 Q358.75,246.94 372.38,243.62 Q387.38,240.56 407.50,240.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z",to:"M201.56,210.88Q246.00,211.25 279.12,216.31 Q308.94,221.94 311.31,229.50 Q308.94,237.00 279.12,242.62 Q246.00,247.62 201.56,248.06 Q157.06,247.62 123.94,242.62 Q94.06,237.00 91.75,229.50 Q94.06,221.94 123.94,216.31 Q157.06,211.25 201.56,210.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M22.50,213.06Q42.88,213.38 58.12,217.69 Q71.81,222.44 72.94,228.81 Q71.81,235.19 58.12,239.94 Q42.88,244.19 22.50,244.56 Q2.06,244.19 -13.12,239.94 Q-26.81,235.19 -27.94,228.81 Q-26.81,222.44 -13.12,217.69 Q2.06,213.38 22.50,213.06 Z",to:"M8.25,216.25Q28.62,216.56 43.88,220.88 Q57.56,225.62 58.69,232.00 Q57.56,238.38 43.88,243.12 Q28.62,247.38 8.25,247.75 Q-12.12,247.38 -27.38,243.12 Q-41.06,238.38 -42.19,232.00 Q-41.06,225.62 -27.38,220.88 Q-12.12,216.56 8.25,216.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_30a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 ",to:"M298.81,205.00Q296.50,202.44 290.62,199.56 Q282.38,198.19 276.25,198.19 L204.25,195.44 Q178.38,195.69 144.00,198.19 Q119.38,200.62 109.69,207.06 Q105.06,217.38 109.06,225.56 L117.94,230.38 Q129.50,233.88 159.06,237.25 Q197.00,238.06 231.00,236.56 Q251.00,235.50 256.38,233.81 Q263.25,232.94 269.38,230.38 Q281.94,225.12 291.31,220.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_31a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M37.38,152.25Q39.00,136.94 42.62,117.19 Q45.75,105.88 50.50,99.44 Q54.88,91.19 62.19,83.88 Q69.81,76.19 81.75,69.75 Q91.31,64.25 110.44,59.00 Q139.94,51.50 167.81,45.62 Q183.50,41.44 190.00,41.38 Q202.81,42.31 210.19,44.31 L173.69,63.88 Q164.00,68.75 147.56,78.38 Q133.50,87.25 120.25,97.12 Q107.31,107.31 97.38,115.19 Q89.44,118.50 81.75,124.56 Q68.69,140.19 59.56,153.50 L37.38,162.50 ",to:"M23.12,155.44Q24.50,139.88 27.62,119.69 Q30.31,107.94 34.44,100.94 Q38.19,92.06 44.50,83.81 Q51.06,75.12 61.38,67.19 Q69.62,60.44 86.06,52.69 Q111.44,41.31 135.50,31.81 Q149.06,25.56 154.62,24.69 Q165.69,23.94 172.00,25.00 L140.56,49.31 Q132.25,55.44 118.06,67.19 Q105.88,77.94 94.50,89.50 Q83.38,101.38 74.81,110.56 Q68.00,114.94 61.38,122.00 Q50.12,139.31 42.25,153.81 L23.12,165.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_32a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M46.25,170.81Q41.81,167.94 37.38,162.50 Q29.50,157.81 37.38,152.25 Q57.38,148.12 91.50,140.12 Q122.44,128.00 147.56,114.00 Q164.62,103.25 178.19,94.00 Q202.88,81.25 219.94,73.56 Q218.06,78.88 212.50,90.94 Q205.69,104.19 197.44,117.94 Q190.56,128.38 184.19,137.12 Q175.88,149.56 170.88,157.25 L169.62,161.88 Q152.94,179.19 126.44,196.44 Q103.19,201.12 86.75,196.06 Q76.69,195.94 70.69,191.38 Q56.81,181.62 47.00,173.06 ",to:"M33.94,171.12Q28.88,169.62 23.12,165.69 Q14.19,163.38 20.19,155.81 Q38.25,146.25 68.69,128.94 Q95.00,108.62 115.12,88.06 Q128.50,72.94 138.88,60.19 Q158.94,41.00 173.12,28.81 Q172.88,34.38 170.94,47.56 Q168.12,62.19 164.06,77.75 Q160.44,89.69 156.81,99.88 Q152.31,114.12 149.69,122.94 L149.81,127.75 Q138.69,149.00 118.12,173.06 Q97.12,184.12 79.94,183.94 Q70.25,186.62 63.19,183.94 Q47.12,178.50 35.31,173.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_33a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M37.38,152.25Q30.88,152.25 20.56,160.44 Q9.94,172.06 4.94,193.12 Q5.56,220.06 10.19,238.88 L34.19,237.06 Q39.19,236.38 47.19,234.25 Q54.69,230.88 58.94,228.31 Q48.12,224.50 35.44,215.56 Q27.94,206.62 27.62,194.94 Q27.69,181.06 32.88,170.81 Q39.69,164.69 45.25,164.69 L45.25,156.44 ",to:"M23.12,155.44Q16.62,155.44 6.31,163.62 Q-4.00,176.31 -9.31,196.31 Q-9.56,219.00 -6.00,233.62 L12.75,235.94 Q18.00,236.25 25.88,234.75 Q32.62,230.88 36.19,227.38 Q29.62,225.62 21.19,218.75 Q14.75,210.38 13.38,198.12 Q13.44,184.25 18.62,174.00 Q25.44,167.88 31.00,167.88 L31.00,159.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_34a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 ",to:"M167.69,204.75Q165.19,200.25 162.75,192.94 Q162.12,185.56 162.75,181.25 L175.88,177.69 Q178.62,171.94 178.25,164.00 Q174.19,156.88 165.62,154.81 Q156.25,155.69 149.69,160.94 Q146.31,164.69 148.06,169.06 Q149.19,173.88 152.19,177.44 Q155.50,179.94 157.81,180.44 Q157.38,186.62 157.81,195.50 Q159.44,202.56 161.12,205.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z",to:"M168.62,156.06Q166.56,156.19 165.12,158.69 Q163.75,161.38 163.69,165.12 Q163.75,168.81 165.12,171.69 Q166.56,174.25 168.62,174.56 Q170.62,174.44 172.19,172.00 Q173.50,169.19 173.62,165.50 Q173.50,161.75 172.19,159.00 Q170.62,156.38 168.62,156.06 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_36a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 ",to:"M268.00,208.44Q270.06,204.06 272.12,196.81 Q272.62,189.50 272.12,185.12 L261.12,181.06 Q258.75,175.25 259.12,167.31 Q262.44,160.38 269.69,158.62 Q277.50,159.81 283.06,165.31 Q285.81,169.19 284.44,173.50 Q283.44,178.25 281.00,181.75 Q278.19,184.12 276.25,184.50 Q276.56,190.75 276.25,199.56 Q274.88,206.56 273.50,209.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_37a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M261.88,198.19Q261.31,199.31 263.38,196.62 Q267.44,190.75 273.44,181.06 Q279.25,170.50 282.56,163.88 Q279.12,172.25 273.56,183.94 Q268.06,193.00 264.88,197.12 ",to:"M228.00,199.94Q228.31,201.12 228.12,197.75 Q227.44,190.62 225.75,179.38 Q223.38,167.50 221.62,160.31 Q224.38,168.94 227.69,181.50 Q229.38,191.94 229.56,197.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_38a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M238.88,198.81Q239.56,199.94 236.81,197.25 Q231.19,191.44 222.94,181.88 Q214.88,171.44 210.38,164.88 Q215.06,173.12 222.75,184.75 Q230.25,193.75 234.75,197.81 ",to:"M202.88,201.56Q202.38,202.81 202.94,199.00 Q204.19,191.00 207.00,178.69 Q210.56,166.00 213.12,158.44 Q209.25,167.12 204.56,180.25 Q201.81,191.62 201.25,197.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z",to:"M276.81,163.25Q278.44,163.44 279.75,166.00 Q280.88,168.75 281.00,172.50 Q280.88,176.19 279.75,179.00 Q278.44,181.50 276.81,181.75 Q275.12,181.50 273.88,179.00 Q272.69,176.19 272.62,172.50 Q272.69,168.75 273.88,166.00 Q275.12,163.44 276.81,163.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_40a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M431.75,194.56Q430.00,180.12 426.25,162.31 Q423.00,152.62 418.06,148.81 Q413.44,142.94 405.81,139.62 Q397.81,136.06 385.38,136.06 Q375.25,135.75 355.31,140.81 Q324.44,149.25 295.31,158.50 Q278.75,162.88 272.00,166.31 Q258.50,174.19 250.94,180.19 L289.12,179.94 Q299.12,179.62 316.38,180.31 Q331.12,181.62 345.06,184.31 Q358.56,187.50 369.00,189.94 Q377.25,188.94 385.38,190.88 Q399.00,199.44 408.56,207.81 L431.75,204.81 ",to:"M390.12,199.00Q388.38,184.56 384.62,166.75 Q381.38,157.06 376.44,153.25 Q371.81,147.38 364.19,144.06 Q356.19,140.50 343.75,140.50 Q333.62,140.19 313.69,145.25 Q282.81,153.69 253.69,162.94 Q237.12,167.31 230.38,170.75 Q216.88,178.62 209.31,184.62 L247.50,184.38 Q257.50,184.06 274.75,184.75 Q289.50,186.06 303.44,188.75 Q316.94,191.94 327.38,194.38 Q335.62,193.38 343.75,195.31 Q357.38,203.88 366.94,212.25 L390.12,209.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#e8e8e8",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M250.88,290.62Q313.88,291.38 360.94,301.69 Q403.38,313.06 406.88,328.44 Q403.44,343.69 361.12,355.12 Q314.19,365.38 251.19,366.19 Q188.06,365.38 141.06,355.12 Q98.62,343.69 95.19,328.44 Q98.50,313.06 140.88,301.69 Q187.81,291.38 250.88,290.62 Z",to:"M250.81,286.69Q320.31,287.56 372.25,298.88 Q419.06,311.50 422.94,328.44 Q419.12,345.31 372.44,357.88 Q320.69,369.12 251.19,370.06 Q181.56,369.12 129.69,357.88 Q82.88,345.31 79.06,328.44 Q82.75,311.50 129.44,298.88 Q181.19,287.56 250.81,286.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_42a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z",to:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_43a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M250.31,134.69L263.31,134.31 Q263.50,148.12 263.88,171.19 Q264.06,185.00 264.50,208.06 Q265.12,249.50 265.69,281.81 Q266.31,283.19 264.75,285.25 Q261.25,287.25 255.62,287.94 Q249.75,287.88 245.94,286.12 Q244.19,283.69 244.88,281.81 Q245.31,268.00 246.19,245.00 Q246.69,231.19 247.56,208.25 Q249.06,166.88 250.31,134.69 Z",to:"M250.31,134.69L263.31,134.31 Q263.50,148.12 263.88,171.19 Q264.06,185.00 264.50,208.06 Q265.12,249.50 265.69,281.81 Q266.31,283.19 264.75,285.25 Q261.25,287.25 255.62,287.94 Q249.75,287.88 245.94,286.12 Q244.19,283.69 244.88,281.81 Q245.31,268.00 246.19,245.00 Q246.69,231.19 247.56,208.25 Q249.06,166.88 250.31,134.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_44a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M255.19,137.56Q255.75,137.06 259.50,134.44 Q264.44,130.25 272.06,125.56 Q278.81,121.94 286.69,120.31 Q294.50,118.56 303.56,119.38 Q312.62,119.94 322.75,124.31 Q334.62,130.56 343.69,138.50 Q349.94,144.94 351.44,150.19 Q354.44,157.44 353.19,159.31 Q350.62,156.50 343.69,149.44 Q336.19,144.75 327.62,141.50 Q320.38,138.88 313.81,137.38 Q307.12,134.75 300.50,133.62 Q294.25,133.75 286.62,135.50 Q275.44,137.00 267.75,138.06 ",to:"M253.75,137.56Q254.38,137.19 258.56,135.25 Q264.25,132.06 272.56,128.88 Q279.88,126.56 287.88,126.38 Q295.88,126.06 304.62,128.50 Q313.44,130.69 322.56,136.88 Q333.06,145.19 340.56,154.69 Q345.50,162.19 346.06,167.56 Q347.69,175.25 346.12,176.88 Q344.12,173.62 338.56,165.44 Q332.06,159.44 324.25,154.69 Q317.56,150.81 311.44,148.12 Q305.31,144.31 299.00,142.00 Q292.81,141.00 285.06,141.31 Q273.75,140.75 266.00,140.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_45a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M256.19,137.69Q256.12,137.19 253.25,134.44 Q248.75,130.19 241.69,125.44 Q235.44,121.75 228.19,120.06 Q220.88,118.19 212.62,118.94 Q204.19,119.44 194.94,123.81 Q184.00,130.00 175.69,137.88 Q169.88,144.31 168.50,149.50 Q165.69,156.69 166.88,158.56 Q169.19,155.75 175.69,148.75 Q182.56,144.12 190.44,140.94 Q197.12,138.38 203.25,136.88 Q209.31,134.31 215.44,133.31 Q221.19,133.44 228.25,135.25 Q238.50,136.81 245.62,138.00 ",to:"M254.69,137.88Q254.75,137.31 252.44,134.12 Q248.81,129.12 242.69,123.19 Q237.19,118.44 230.38,115.44 Q223.56,112.31 215.31,111.50 Q206.94,110.44 197.00,113.00 Q185.06,117.06 175.50,123.31 Q168.62,128.56 166.31,133.44 Q162.19,140.00 163.06,142.06 Q165.88,139.69 173.56,134.00 Q181.12,130.69 189.50,129.06 Q196.56,127.75 202.81,127.38 Q209.25,126.00 215.44,126.12 Q221.06,127.31 227.69,130.38 Q237.50,133.81 244.25,136.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_46a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M256.19,137.69Q256.19,137.19 258.50,134.69 Q261.88,130.81 267.31,126.69 Q272.00,123.50 277.50,122.44 Q282.94,121.19 289.25,122.69 Q295.56,123.88 302.69,129.00 Q310.94,136.06 317.25,144.62 Q321.62,151.50 322.75,156.81 Q324.81,164.25 323.94,166.06 Q322.12,163.06 317.25,155.56 Q312.06,150.31 306.12,146.50 Q301.00,143.38 296.44,141.38 Q291.75,138.25 287.12,136.69 Q282.75,136.38 277.50,137.62 Q269.69,138.31 264.31,138.88 ",to:"M254.69,137.88Q254.81,137.38 257.50,135.31 Q261.56,132.12 267.69,129.06 Q272.88,126.81 278.44,126.75 Q284.00,126.56 289.94,129.19 Q295.94,131.50 302.00,137.81 Q308.81,146.25 313.50,155.88 Q316.56,163.44 316.62,168.81 Q317.31,176.50 316.12,178.12 Q314.88,174.88 311.50,166.62 Q307.31,160.56 302.19,155.69 Q297.75,151.69 293.62,148.88 Q289.56,144.94 285.31,142.56 Q281.06,141.44 275.69,141.69 Q267.88,140.94 262.50,140.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_47a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M255.19,137.56Q255.00,133.31 252.69,126.81 Q249.31,121.44 244.19,117.69 Q239.62,114.12 234.44,113.25 Q229.19,112.19 223.38,114.44 Q217.50,116.44 211.12,123.25 Q203.62,132.56 198.06,143.56 Q194.19,152.31 193.44,158.88 Q191.69,168.19 192.62,170.31 Q194.12,166.50 198.44,156.88 Q203.06,150.06 208.56,144.94 Q213.19,140.75 217.44,137.94 Q221.69,133.75 226.00,131.50 Q230.06,130.81 235.12,131.88 Q242.38,132.19 247.44,132.44 ",to:"M253.75,137.56Q254.31,133.38 253.25,126.56 Q250.94,120.62 246.56,116.00 Q242.69,111.69 237.81,109.88 Q232.81,107.81 226.69,109.00 Q220.50,109.88 213.06,115.44 Q204.00,123.19 196.50,133.00 Q191.06,140.94 189.12,147.25 Q185.69,156.06 186.25,158.31 Q188.44,154.81 194.44,146.19 Q200.25,140.38 206.56,136.31 Q211.88,133.00 216.56,131.00 Q221.50,127.69 226.19,126.25 Q230.31,126.31 235.06,128.31 Q242.12,129.94 247.06,131.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_48a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M260.25,135.88Q260.62,131.62 262.75,125.38 Q265.50,120.31 269.44,117.06 Q272.88,114.06 276.62,113.81 Q280.31,113.31 284.25,116.31 Q288.19,119.00 292.19,126.62 Q296.69,136.94 299.75,148.69 Q301.69,158.00 301.75,164.75 Q302.19,174.31 301.44,176.38 Q300.62,172.31 298.38,162.12 Q295.62,154.69 292.25,148.88 Q289.31,144.06 286.56,140.75 Q283.88,136.00 281.12,133.19 Q278.31,132.00 274.75,132.56 Q269.56,131.94 266.00,131.56 ",to:"M259.06,136.81Q260.19,132.69 263.44,126.94 Q267.00,122.44 271.50,120.00 Q275.44,117.69 279.19,118.12 Q282.88,118.38 286.19,122.00 Q289.56,125.38 292.12,133.56 Q294.62,144.50 295.50,156.62 Q295.75,166.12 294.56,172.81 Q293.25,182.31 292.12,184.19 Q292.00,180.06 291.69,169.62 Q290.31,161.81 288.12,155.44 Q286.06,150.19 284.00,146.44 Q282.25,141.31 280.06,138.00 Q277.50,136.38 273.88,136.25 Q268.88,134.69 265.50,133.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_49a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M256.19,137.69Q256.12,133.50 254.81,127.19 Q252.81,121.94 249.69,118.38 Q246.88,115.00 243.69,114.25 Q240.44,113.31 236.75,115.69 Q233.00,117.81 228.94,124.75 Q224.06,134.06 220.38,145.00 Q217.81,153.81 217.25,160.44 Q216.00,169.62 216.56,171.69 Q217.56,167.88 220.38,158.25 Q223.38,151.44 226.94,146.25 Q229.88,141.94 232.62,139.06 Q235.31,134.88 238.06,132.50 Q240.56,131.62 243.75,132.56 Q248.31,132.69 251.50,132.81 ",to:"M254.69,137.88Q255.38,133.75 255.25,127.31 Q254.25,121.81 251.88,117.69 Q249.69,113.88 246.69,112.56 Q243.62,111.00 239.62,112.69 Q235.56,114.12 230.31,120.19 Q223.81,128.44 218.19,138.50 Q214.00,146.69 212.25,153.12 Q209.38,161.94 209.56,164.06 Q211.19,160.50 215.75,151.56 Q219.94,145.44 224.38,140.94 Q228.06,137.25 231.31,134.94 Q234.69,131.25 237.81,129.44 Q240.44,129.06 243.44,130.56 Q247.88,131.50 251.00,132.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_50a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M255.50,139.56Q255.50,135.38 256.44,129.12 Q257.81,124.00 260.06,120.62 Q262.00,117.38 264.25,116.81 Q266.50,116.06 269.06,118.69 Q271.62,121.00 274.50,128.12 Q277.81,137.75 280.44,148.94 Q282.25,157.88 282.69,164.50 Q283.50,173.75 283.12,175.75 Q282.38,171.88 280.44,162.12 Q278.31,155.12 275.88,149.69 Q273.75,145.25 271.88,142.25 Q269.94,137.94 268.12,135.44 Q266.31,134.50 264.19,135.25 Q261.00,135.06 258.81,135.00 ",to:"M253.69,139.56Q254.44,135.44 256.50,129.50 Q258.81,124.75 261.62,121.81 Q264.12,119.00 266.44,118.81 Q268.75,118.50 270.81,121.56 Q272.88,124.31 274.44,131.81 Q276.00,141.88 276.50,153.38 Q276.62,162.50 275.88,169.06 Q275.00,178.31 274.25,180.19 Q274.19,176.25 274.06,166.31 Q273.25,159.00 271.88,153.25 Q270.62,148.50 269.31,145.25 Q268.25,140.62 266.88,137.81 Q265.25,136.56 263.00,136.94 Q259.88,136.19 257.75,135.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_51a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M252.69,120.75Q254.00,115.88 258.06,116.81 Q263.19,121.25 267.44,130.69 Q269.44,138.56 269.00,146.62 Q269.69,153.88 268.56,161.06 Q265.62,172.19 262.75,176.56 Q261.88,174.38 262.38,163.75 Q262.44,153.75 261.88,145.19 Q260.69,140.06 258.56,137.69 Q256.19,134.00 254.31,129.94 Q252.25,124.81 252.69,120.75 Z",to:"M254.38,120.56Q256.50,116.00 260.38,117.69 Q264.62,123.00 267.06,133.06 Q267.56,141.19 265.69,149.00 Q265.00,156.25 262.62,163.12 Q257.69,173.56 254.06,177.31 Q253.56,175.00 256.00,164.62 Q257.94,154.88 258.94,146.31 Q258.69,141.06 257.06,138.31 Q255.44,134.25 254.31,129.94 Q253.25,124.56 254.38,120.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_52a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M258.75,123.25Q256.75,117.88 251.88,118.06 Q247.12,122.50 243.75,132.31 Q242.00,140.31 242.38,148.38 Q241.75,155.62 242.75,162.75 Q245.25,173.75 247.75,178.00 Q248.12,176.75 248.12,165.19 Q249.31,151.38 251.44,138.88 Q253.19,132.56 255.12,131.00 Q258.25,126.75 258.75,123.25 Z",to:"M259.88,124.12Q258.88,118.50 254.06,117.81 Q248.50,121.31 243.44,130.31 Q240.25,137.88 239.19,145.88 Q237.25,152.88 236.94,160.06 Q237.38,171.31 239.06,175.94 Q239.62,174.81 241.75,163.44 Q245.44,150.12 249.81,138.19 Q252.69,132.38 254.88,131.12 Q258.69,127.50 259.88,124.12 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_53a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 ",to:"M378.62,223.06Q384.06,218.62 389.94,211.69 Q399.50,204.25 391.62,201.56 Q369.81,204.75 332.94,209.12 Q300.12,208.38 274.31,203.69 Q256.88,199.31 243.31,195.06 Q217.69,191.44 199.81,190.00 Q201.00,194.56 205.31,204.44 Q210.75,215.06 217.81,225.62 Q223.69,233.44 229.44,239.75 Q236.69,249.00 241.12,254.75 L241.75,258.88 Q257.56,269.94 284.50,277.38 Q309.69,273.62 329.00,262.69 Q340.25,258.88 347.88,252.19 Q365.00,237.56 377.44,225.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_54a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 ",to:"M389.62,198.62Q397.69,196.31 407.81,198.00 Q414.19,201.88 416.00,213.62 Q416.81,230.94 415.62,244.44 L395.69,251.44 Q391.56,252.69 384.44,254.06 Q377.00,254.50 372.44,254.31 Q378.56,248.31 385.88,238.44 Q390.19,230.25 390.62,222.69 Q391.69,213.81 388.38,209.06 Q381.50,207.50 375.19,209.44 L377.81,204.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_55a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M256.00,70.94Q254.50,71.94 252.19,72.44 Q250.69,72.94 249.06,72.94 Q247.00,72.50 244.31,72.06 Q241.38,72.00 238.62,72.12 Q235.88,72.00 234.56,71.94 Q233.31,71.38 230.75,71.75 Q227.44,73.44 225.12,75.25 L224.88,73.38 Q225.12,73.19 225.75,72.81 Q226.38,72.31 226.81,72.00 Q225.44,72.19 223.25,72.44 Q221.12,72.62 219.94,72.44 Q219.06,71.94 220.12,71.31 Q221.88,70.88 224.12,70.69 Q225.62,70.44 226.12,70.38 Q225.00,69.69 223.44,68.81 Q222.06,68.31 221.25,67.94 Q220.31,67.06 220.69,66.62 Q221.69,66.69 223.62,67.44 Q225.50,68.12 226.69,68.62 Q225.38,67.12 224.50,65.44 Q224.62,64.12 225.81,64.44 Q226.69,65.75 227.88,67.69 Q227.88,68.56 230.00,68.88 Q234.50,69.62 240.44,69.56 Q245.56,68.56 248.12,67.50 Q248.69,67.19 250.50,67.25 Q253.19,67.38 255.44,68.31 Q256.81,69.56 256.00,70.94 Z",to:"M273.94,73.25Q273.56,71.50 274.12,69.19 Q274.19,67.62 275.00,66.12 Q276.19,64.38 277.75,62.12 Q279.00,59.44 280.06,56.94 Q281.25,54.44 281.94,53.31 Q282.88,52.44 283.69,49.94 Q283.50,46.19 282.88,43.38 L284.69,43.94 Q284.69,44.25 284.81,44.94 Q284.94,45.69 285.12,46.25 Q285.44,44.88 286.19,42.81 Q286.88,40.75 287.56,39.81 Q288.31,39.25 288.50,40.50 Q288.12,42.25 287.44,44.38 Q287.00,45.81 286.88,46.31 Q287.94,45.56 289.44,44.50 Q290.38,43.44 291.12,42.88 Q292.25,42.38 292.56,42.94 Q292.00,43.81 290.56,45.25 Q289.12,46.69 288.19,47.56 Q290.00,47.00 292.00,46.94 Q293.12,47.56 292.38,48.50 Q290.75,48.75 288.56,49.00 Q287.69,48.62 286.62,50.44 Q284.00,54.19 281.62,59.62 Q280.31,64.69 280.31,67.50 Q280.25,68.06 279.50,69.75 Q278.19,72.12 276.50,73.81 Q274.81,74.50 273.94,73.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_56a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M250.19,102.75L243.06,119.81 L239.69,119.81 L237.50,119.25 L237.12,119.31 Q237.12,118.81 236.81,118.06 Q236.12,117.38 235.25,116.88 Q234.44,116.44 234.12,116.38 Q233.75,116.44 233.44,116.88 Q233.25,117.62 233.31,118.25 L234.88,119.31 L233.56,119.94 L233.31,121.00 Q234.06,121.44 235.25,122.50 Q236.12,123.75 236.56,124.69 Q237.50,124.31 238.88,124.06 Q240.00,124.00 240.62,124.12 Q241.50,123.75 243.25,123.69 Q245.25,124.06 246.69,124.56 Q247.19,124.00 247.50,122.69 Q247.06,120.81 246.50,119.44 L248.19,115.56 L255.50,103.19 ",to:"M261.88,93.00L243.50,91.00 L242.56,87.75 L242.44,85.56 L242.25,85.19 Q242.75,85.06 243.44,84.50 Q243.88,83.62 244.06,82.69 Q244.19,81.81 244.25,81.44 Q244.06,81.12 243.62,80.94 Q242.81,81.00 242.25,81.25 L241.62,83.00 L240.69,81.94 L239.62,82.00 Q239.38,82.88 238.75,84.31 Q237.75,85.50 237.00,86.12 Q237.56,86.94 238.25,88.19 Q238.62,89.25 238.69,89.88 Q239.25,90.62 239.88,92.31 Q240.06,94.38 240.00,95.88 Q240.62,96.19 242.00,96.06 Q243.62,95.12 244.81,94.19 L249.00,94.69 L263.00,98.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_57a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M257.81,106.94L258.00,125.44 L254.88,126.75 L252.69,127.12 L252.31,127.31 Q252.12,126.88 251.56,126.31 Q250.69,125.94 249.69,125.81 Q248.81,125.75 248.44,125.81 Q248.12,125.94 248.00,126.50 Q248.12,127.19 248.44,127.81 L250.25,128.19 L249.31,129.31 L249.50,130.38 Q250.38,130.50 251.88,131.00 Q253.19,131.75 253.94,132.44 Q254.62,131.75 255.81,131.00 Q256.81,130.50 257.44,130.38 Q258.12,129.69 259.69,128.94 Q261.69,128.44 263.19,128.38 Q263.44,127.62 263.19,126.31 Q262.06,124.75 261.00,123.75 L261.00,119.50 L262.88,105.25 ",to:"M262.19,104.12L256.31,121.69 L252.88,121.88 L250.69,121.50 L250.31,121.56 Q250.31,121.06 249.94,120.38 Q249.19,119.75 248.31,119.31 Q247.50,118.94 247.12,118.88 Q246.81,118.94 246.50,119.38 Q246.38,120.12 246.44,120.75 L248.06,121.69 L246.81,122.50 L246.62,123.56 Q247.44,123.94 248.69,124.88 Q249.62,126.06 250.12,126.94 Q251.00,126.56 252.38,126.19 Q253.50,126.06 254.12,126.12 Q255.00,125.69 256.75,125.50 Q258.81,125.69 260.25,126.12 Q260.69,125.50 260.88,124.19 Q260.31,122.38 259.69,121.06 L261.06,117.00 L267.50,104.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M249.94,52.50Q250.25,54.38 250.50,56.75 Q250.31,57.50 250.19,58.50 Q250.31,61.19 250.62,63.50 L250.06,65.62 L252.75,75.00 ",to:"M274.25,53.88Q273.88,55.75 273.38,58.06 Q272.94,58.75 272.50,59.62 Q271.75,62.25 271.31,64.50 L270.06,66.31 L269.56,76.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_59a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M253.38,70.31Q250.62,75.44 247.81,82.69 Q246.25,87.50 247.25,90.81 Q248.88,94.75 251.88,96.94 Q253.75,98.00 256.75,97.62 Q261.69,98.69 265.62,97.81 Q267.00,95.12 266.38,90.44 Q266.88,87.06 266.94,82.31 Q266.62,75.06 265.94,69.19 Q265.56,66.62 264.69,66.44 Q263.00,64.19 261.69,62.69 ",to:"M271.69,71.81Q266.44,73.69 260.88,78.38 Q258.38,83.69 259.19,89.19 Q259.56,93.88 261.50,96.50 Q263.56,98.25 265.88,98.75 Q268.00,101.06 269.12,100.94 Q269.19,98.19 269.44,93.19 Q269.56,90.00 273.00,86.06 Q280.44,80.00 286.38,75.00 Q286.88,72.62 283.62,71.88 Q282.44,69.19 282.00,67.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M252.50,50.75Q251.69,51.00 249.94,52.50 Q247.69,53.81 245.81,57.44 Q244.69,63.50 244.69,68.44 ",to:"M277.25,53.06Q276.44,53.00 274.25,53.88 Q271.69,54.38 268.75,57.19 Q265.69,62.56 264.06,67.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M249.38,55.75L249.69,56.81 L248.31,64.94 Q248.44,66.69 248.56,69.50 Q248.44,72.06 248.25,73.50 ",to:"M272.69,56.75L272.62,57.88 L268.62,65.06 Q268.19,66.75 267.38,69.44 Q266.38,71.81 265.75,73.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M249.94,52.50L248.19,58.56 246.81,72.56 ",to:"M274.25,53.88L270.62,59.00 264.75,71.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_63a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M255.62,68.25Q256.56,68.44 256.38,67.88 Q256.62,67.69 257.12,67.50 Q257.56,67.25 258.69,66.81 Q260.38,66.25 261.81,65.44 Q262.38,64.50 262.38,63.50 Q262.56,62.75 262.94,61.62 Q263.81,60.12 264.12,57.81 Q263.94,54.94 262.00,52.56 Q259.62,50.31 255.94,50.69 Q251.38,52.12 248.38,55.62 Q247.38,59.38 248.31,61.94 Q247.12,62.19 245.12,63.06 Q242.94,63.94 241.69,65.44 Q241.00,67.44 241.88,68.94 Q242.69,69.69 244.50,69.19 Q246.44,68.50 248.25,67.25 Q249.56,66.00 249.94,65.25 Q252.69,66.75 255.62,68.25 Z",to:"M274.44,70.62Q275.31,71.12 275.31,70.50 Q275.56,70.44 276.12,70.38 Q276.62,70.31 277.81,70.25 Q279.56,70.31 281.25,70.00 Q282.06,69.31 282.38,68.31 Q282.81,67.69 283.56,66.75 Q284.94,65.62 285.94,63.50 Q286.69,60.75 285.62,57.88 Q284.06,55.00 280.50,54.12 Q275.75,54.00 271.75,56.31 Q269.56,59.50 269.62,62.25 Q268.44,62.06 266.25,62.25 Q263.94,62.38 262.25,63.38 Q260.94,65.06 261.25,66.75 Q261.75,67.75 263.62,67.81 Q265.69,67.81 267.81,67.25 Q269.44,66.44 270.06,65.88 Q272.12,68.25 274.44,70.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_64a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M266.56,95.06L247.25,90.81 246.00,105.81 251.56,106.75 251.88,108.19 254.31,108.19 271.88,107.12 ",to:"M271.75,90.12L259.19,89.19 247.31,90.69 250.81,100.88 254.31,105.62 260.12,107.88 270.94,106.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp2_65a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M264.50,69.62Q265.88,70.69 268.06,71.31 Q269.44,71.88 271.00,71.94 Q272.75,71.69 275.12,71.50 Q277.75,71.62 280.31,71.94 Q282.75,72.06 284.00,72.12 Q285.00,71.69 287.38,72.25 Q290.50,74.06 292.88,75.88 L292.88,74.12 Q292.56,73.94 292.00,73.56 Q291.38,73.06 291.00,72.75 Q292.25,73.00 294.25,73.38 Q296.19,73.75 297.25,73.69 Q297.88,73.25 296.94,72.56 Q295.25,72.00 293.25,71.69 Q291.81,71.31 291.38,71.25 Q292.25,70.69 293.62,70.00 Q294.75,69.62 295.50,69.38 Q296.19,68.62 295.81,68.19 Q294.88,68.19 293.31,68.75 Q291.69,69.25 290.69,69.62 Q291.62,68.31 292.31,66.81 Q291.94,65.56 290.88,65.81 Q290.19,66.94 289.50,68.62 Q289.56,69.44 287.69,69.62 Q283.62,70.00 278.31,69.50 Q273.50,68.19 271.12,67.00 Q270.56,66.69 268.94,66.56 Q266.50,66.50 264.62,67.19 Q263.56,68.25 264.50,69.62 Z",to:"M283.00,76.12Q284.75,76.00 286.81,75.06 Q288.25,74.56 289.50,73.62 Q290.69,72.31 292.38,70.69 Q294.44,69.06 296.62,67.69 Q298.62,66.19 299.56,65.44 Q300.00,64.50 302.19,63.38 Q305.75,62.62 308.75,62.50 L307.62,61.19 Q307.25,61.25 306.56,61.38 Q305.75,61.38 305.31,61.38 Q306.44,60.81 308.19,59.81 Q309.88,58.81 310.69,58.06 Q310.88,57.25 309.69,57.38 Q308.06,58.00 306.31,59.12 Q305.00,59.75 304.56,60.00 Q304.88,58.94 305.50,57.56 Q306.19,56.56 306.56,55.94 Q306.56,54.88 306.00,54.81 Q305.31,55.38 304.50,56.81 Q303.56,58.25 303.00,59.19 Q302.94,57.50 302.50,55.94 Q301.44,55.25 300.75,56.19 Q301.00,57.44 301.50,59.19 Q302.12,59.75 300.75,61.12 Q297.88,63.94 293.50,67.06 Q289.00,69.12 286.38,69.81 Q285.75,69.94 284.44,70.88 Q282.56,72.38 281.56,74.12 Q281.44,75.62 283.00,76.12 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M249.94,52.50L254.94,52.50 Q256.12,55.50 258.25,59.44 Q259.88,60.88 261.62,63.00 Q263.94,68.06 265.44,72.31 ",to:"M274.25,53.88L279.00,55.50 Q279.12,58.75 279.81,63.12 Q280.88,65.06 281.88,67.62 Q282.38,73.19 282.38,77.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M254.94,52.50L258.62,55.06 Q259.25,56.38 261.00,59.00 Q263.19,61.50 265.50,64.12 Q267.44,66.94 268.31,68.50 ",to:"M279.00,55.50L281.62,59.12 Q281.75,60.56 282.56,63.62 Q283.75,66.69 285.12,69.94 Q286.06,73.25 286.38,75.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M252.50,50.75L260.50,51.00 Q262.12,52.38 265.50,55.12 Q269.44,58.19 272.19,60.31 ",to:"M277.25,53.06L284.75,55.88 Q285.81,57.75 288.12,61.44 Q290.81,65.62 292.69,68.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M254.94,52.50Q258.06,55.00 262.31,58.19 Q265.25,60.00 266.75,60.75 Q267.88,61.38 268.25,61.81 Q268.94,62.62 269.25,63.19 Q269.75,63.38 270.62,64.00 Q271.31,64.88 271.69,65.56 ",to:"M279.00,55.50Q281.06,58.88 284.06,63.31 Q286.25,66.00 287.44,67.19 Q288.31,68.19 288.50,68.62 Q288.88,69.56 289.00,70.25 Q289.44,70.62 290.00,71.50 Q290.38,72.56 290.50,73.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M252.50,50.75Q255.69,51.44 259.75,53.06 Q261.56,54.62 262.88,56.69 Q265.44,58.75 267.88,60.56 Q269.69,62.19 270.31,62.94 ",to:"M277.25,53.06Q280.00,54.75 283.31,57.62 Q284.50,59.75 285.12,62.06 Q286.88,64.88 288.56,67.38 Q289.69,69.50 290.06,70.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M252.50,50.75Q253.44,50.44 255.69,50.38 Q258.00,50.50 260.50,51.00 Q262.38,51.12 264.00,51.69 Q265.50,52.38 267.56,53.88 Q270.81,56.00 273.25,57.69 ",to:"M277.25,53.06Q278.25,53.12 280.38,53.75 Q282.56,54.62 284.75,55.88 Q286.50,56.62 287.81,57.69 Q288.94,58.81 290.44,60.94 Q292.81,64.06 294.56,66.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M251.75,58.56Q251.94,58.44 252.38,58.75 Q252.75,59.00 253.19,59.56 Q253.50,60.12 253.62,60.69 Q253.69,61.19 253.50,61.38 Q253.25,61.44 252.94,61.12 Q252.50,60.75 252.12,60.25 Q251.75,59.69 251.69,59.19 Q251.56,58.69 251.75,58.56 Z",to:"M274.00,60.19Q274.19,60.12 274.50,60.56 Q274.75,60.94 275.00,61.56 Q275.12,62.19 275.06,62.81 Q274.94,63.31 274.69,63.44 Q274.44,63.44 274.25,63.00 Q273.94,62.50 273.81,61.88 Q273.62,61.19 273.69,60.75 Q273.75,60.25 274.00,60.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+0.00s",dur:"1.00s",attributeName:"d",from:"M247.69,59.19Q247.69,59.06 247.81,59.44 Q247.88,59.75 248.00,60.38 Q248.06,61.00 248.12,61.56 Q248.12,62.06 248.12,62.25 Q248.06,62.25 248.00,61.94 Q247.88,61.50 247.81,60.94 Q247.69,60.31 247.69,59.81 Q247.62,59.31 247.69,59.19 Z",to:"M269.94,59.44Q270.00,59.31 270.00,59.69 Q269.94,60.06 269.81,60.69 Q269.69,61.25 269.56,61.81 Q269.44,62.31 269.38,62.50 Q269.25,62.50 269.31,62.12 Q269.31,61.69 269.50,61.12 Q269.62,60.50 269.75,60.00 Q269.81,59.50 269.94,59.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.00s",attributeName:"d",to:"M0,0"})])]),e("g",{id:"P3a1:loop2,0"},[e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 ",to:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 ",to:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z",to:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 ",to:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z",to:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 ",to:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-34.44,82.31L-31.81,93.56 ",to:"M-34.44,82.31L-31.81,93.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-36.12,71.00L-34.75,77.56 ",to:"M-36.12,71.00L-34.75,77.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M392.38,58.88L389.75,99.62 388.88,100.50 ",to:"M392.38,58.88L389.75,99.62 388.88,100.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 ",to:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z",to:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 ",to:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z",to:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 ",to:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M473.00,88.38L475.62,99.62 ",to:"M473.00,88.38L475.62,99.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M471.31,77.06L472.69,83.62 ",to:"M471.31,77.06L472.69,83.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#99ffcc",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z",to:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_18a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z",to:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M407.50,240.25Q427.56,240.38 442.62,243.38 Q456.19,246.62 457.31,251.06 Q456.19,255.50 442.62,258.88 Q427.56,261.88 407.50,262.25 Q387.38,262.06 372.38,259.12 Q358.75,255.81 357.69,251.44 Q358.75,246.94 372.38,243.62 Q387.38,240.56 407.50,240.25 Z",to:"M437.31,236.00Q452.62,236.25 464.12,239.25 Q474.44,242.56 475.31,247.00 Q474.44,251.44 464.12,254.75 Q452.62,257.75 437.31,258.00 Q421.94,257.75 410.50,254.75 Q400.12,251.44 399.31,247.00 Q400.12,242.56 410.50,239.25 Q421.94,236.25 437.31,236.00 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M201.56,210.88Q246.00,211.25 279.12,216.31 Q308.94,221.94 311.31,229.50 Q308.94,237.00 279.12,242.62 Q246.00,247.62 201.56,248.06 Q157.06,247.62 123.94,242.62 Q94.06,237.00 91.75,229.50 Q94.06,221.94 123.94,216.31 Q157.06,211.25 201.56,210.88 Z",to:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M8.25,216.25Q28.62,216.56 43.88,220.88 Q57.56,225.62 58.69,232.00 Q57.56,238.38 43.88,243.12 Q28.62,247.38 8.25,247.75 Q-12.12,247.38 -27.38,243.12 Q-41.06,238.38 -42.19,232.00 Q-41.06,225.62 -27.38,220.88 Q-12.12,216.56 8.25,216.25 Z",to:"M22.56,217.69Q36.88,217.88 47.56,220.94 Q57.12,224.25 57.94,228.75 Q57.12,233.19 47.56,236.56 Q36.88,239.56 22.56,239.81 Q8.25,239.56 -2.38,236.56 Q-11.94,233.19 -12.75,228.75 Q-11.94,224.25 -2.38,220.94 Q8.25,217.88 22.56,217.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_22a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M298.81,205.00Q296.50,202.44 290.62,199.56 Q282.38,198.19 276.25,198.19 L204.25,195.44 Q178.38,195.69 144.00,198.19 Q119.38,200.62 109.69,207.06 Q105.06,217.38 109.06,225.56 L117.94,230.38 Q129.50,233.88 159.06,237.25 Q197.00,238.06 231.00,236.56 Q251.00,235.50 256.38,233.81 Q263.25,232.94 269.38,230.38 Q281.94,225.12 291.31,220.81 ",to:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_23a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M23.12,155.44Q24.50,139.88 27.62,119.69 Q30.31,107.94 34.44,100.94 Q38.19,92.06 44.50,83.81 Q51.06,75.12 61.38,67.19 Q69.62,60.44 86.06,52.69 Q111.44,41.31 135.50,31.81 Q149.06,25.56 154.62,24.69 Q165.69,23.94 172.00,25.00 L140.56,49.31 Q132.25,55.44 118.06,67.19 Q105.88,77.94 94.50,89.50 Q83.38,101.38 74.81,110.56 Q68.00,114.94 61.38,122.00 Q50.12,139.31 42.25,153.81 L23.12,165.69 ",to:"M8.38,158.38Q5.12,146.75 2.38,131.44 Q1.81,122.31 4.31,116.38 Q5.88,109.12 10.56,101.88 Q15.44,94.25 24.75,86.38 Q32.19,79.81 48.69,70.88 Q74.31,57.50 99.00,45.81 Q112.69,38.56 118.81,36.81 Q131.31,34.06 138.88,33.56 L110.31,57.56 Q102.62,63.69 90.00,75.06 Q79.38,85.31 69.88,96.06 Q60.81,106.94 53.81,115.38 Q47.38,119.88 41.94,126.38 Q34.38,141.25 29.81,153.38 L11.56,165.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_24a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M33.94,171.12Q28.88,169.62 23.12,165.69 Q14.19,163.38 20.19,155.81 Q38.25,146.25 68.69,128.94 Q95.00,108.62 115.12,88.06 Q128.50,72.94 138.88,60.19 Q158.94,41.00 173.12,28.81 Q172.88,34.38 170.94,47.56 Q168.12,62.19 164.06,77.75 Q160.44,89.69 156.81,99.88 Q152.31,114.12 149.69,122.94 L149.81,127.75 Q138.69,149.00 118.12,173.06 Q97.12,184.12 79.94,183.94 Q70.25,186.62 63.19,183.94 Q47.12,178.50 35.31,173.06 ",to:"M15.50,181.00Q12.25,175.25 9.44,166.56 Q3.69,156.94 10.75,154.56 Q27.31,160.38 55.56,168.94 Q81.75,171.06 103.56,167.88 Q118.56,164.31 130.56,160.56 Q151.88,158.56 166.50,158.50 Q164.31,163.69 158.38,174.94 Q151.25,186.94 142.94,198.75 Q136.12,207.31 129.94,214.12 Q121.69,224.25 116.69,230.62 L115.12,235.44 Q99.62,246.94 76.25,253.19 Q57.06,246.50 44.56,231.88 Q36.56,226.44 32.38,217.88 Q22.56,199.19 15.88,184.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_25a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M23.12,155.44Q16.62,155.44 6.31,163.62 Q-4.00,176.31 -9.31,196.31 Q-9.56,219.00 -6.00,233.62 L12.75,235.94 Q18.00,236.25 25.88,234.75 Q32.62,230.88 36.19,227.38 Q29.62,225.62 21.19,218.75 Q14.75,210.38 13.38,198.12 Q13.44,184.25 18.62,174.00 Q25.44,167.88 31.00,167.88 L31.00,159.62 ",to:"M8.06,156.25Q2.00,158.44 -4.88,169.75 Q-9.31,186.25 -8.31,205.81 Q-4.19,223.19 0.69,231.56 L17.88,235.69 Q22.75,234.44 31.56,232.25 Q41.12,229.75 47.31,228.12 Q39.38,224.38 27.94,216.44 Q18.75,209.62 13.56,199.69 Q8.88,186.62 10.19,175.25 Q14.50,167.19 19.69,165.25 L16.88,157.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_26a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M167.69,204.75Q165.19,200.25 162.75,192.94 Q162.12,185.56 162.75,181.25 L175.88,177.69 Q178.62,171.94 178.25,164.00 Q174.19,156.88 165.62,154.81 Q156.25,155.69 149.69,160.94 Q146.31,164.69 148.06,169.06 Q149.19,173.88 152.19,177.44 Q155.50,179.94 157.81,180.44 Q157.38,186.62 157.81,195.50 Q159.44,202.56 161.12,205.88 ",to:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M168.62,156.06Q166.56,156.19 165.12,158.69 Q163.75,161.38 163.69,165.12 Q163.75,168.81 165.12,171.69 Q166.56,174.25 168.62,174.56 Q170.62,174.44 172.19,172.00 Q173.50,169.19 173.62,165.50 Q173.50,161.75 172.19,159.00 Q170.62,156.38 168.62,156.06 Z",to:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_28a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M268.00,208.44Q270.06,204.06 272.12,196.81 Q272.62,189.50 272.12,185.12 L261.12,181.06 Q258.75,175.25 259.12,167.31 Q262.44,160.38 269.69,158.62 Q277.50,159.81 283.06,165.31 Q285.81,169.19 284.44,173.50 Q283.44,178.25 281.00,181.75 Q278.19,184.12 276.25,184.50 Q276.56,190.75 276.25,199.56 Q274.88,206.56 273.50,209.81 ",to:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_29a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M228.00,199.94Q228.31,201.12 228.12,197.75 Q227.44,190.62 225.75,179.38 Q223.38,167.50 221.62,160.31 Q224.38,168.94 227.69,181.50 Q229.38,191.94 229.56,197.19 ",to:"M261.88,198.19Q261.31,199.31 263.38,196.62 Q267.44,190.75 273.44,181.06 Q279.25,170.50 282.56,163.88 Q279.12,172.25 273.56,183.94 Q268.06,193.00 264.88,197.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_30a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M202.88,201.56Q202.38,202.81 202.94,199.00 Q204.19,191.00 207.00,178.69 Q210.56,166.00 213.12,158.44 Q209.25,167.12 204.56,180.25 Q201.81,191.62 201.25,197.62 ",to:"M238.88,198.81Q239.56,199.94 236.81,197.25 Q231.19,191.44 222.94,181.88 Q214.88,171.44 210.38,164.88 Q215.06,173.12 222.75,184.75 Q230.25,193.75 234.75,197.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M276.81,163.25Q278.44,163.44 279.75,166.00 Q280.88,168.75 281.00,172.50 Q280.88,176.19 279.75,179.00 Q278.44,181.50 276.81,181.75 Q275.12,181.50 273.88,179.00 Q272.69,176.19 272.62,172.50 Q272.69,168.75 273.88,166.00 Q275.12,163.44 276.81,163.25 Z",to:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_32a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M390.12,199.00Q388.38,184.56 384.62,166.75 Q381.38,157.06 376.44,153.25 Q371.81,147.38 364.19,144.06 Q356.19,140.50 343.75,140.50 Q333.62,140.19 313.69,145.25 Q282.81,153.69 253.69,162.94 Q237.12,167.31 230.38,170.75 Q216.88,178.62 209.31,184.62 L247.50,184.38 Q257.50,184.06 274.75,184.75 Q289.50,186.06 303.44,188.75 Q316.94,191.94 327.38,194.38 Q335.62,193.38 343.75,195.31 Q357.38,203.88 366.94,212.25 L390.12,209.25 ",to:"M430.75,192.69Q426.81,178.69 420.38,161.69 Q415.62,152.62 410.19,149.62 Q404.75,144.56 396.69,142.44 Q388.25,140.19 375.94,142.06 Q365.88,143.31 346.94,151.38 Q317.75,164.50 290.44,178.12 Q274.75,185.00 268.56,189.44 Q256.50,199.31 249.94,206.38 L287.62,200.25 Q297.44,198.38 314.56,196.44 Q329.31,195.44 343.56,195.94 Q357.38,197.00 368.06,197.81 Q376.06,195.56 384.38,196.19 Q399.19,202.56 409.94,209.38 L432.38,202.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#e8e8e8",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M250.81,286.69Q320.31,287.56 372.25,298.88 Q419.06,311.50 422.94,328.44 Q419.12,345.31 372.44,357.88 Q320.69,369.12 251.19,370.06 Q181.56,369.12 129.69,357.88 Q82.88,345.31 79.06,328.44 Q82.75,311.50 129.44,298.88 Q181.19,287.56 250.81,286.69 Z",to:"M250.88,290.62Q313.88,291.38 360.94,301.69 Q403.38,313.06 406.88,328.44 Q403.44,343.69 361.12,355.12 Q314.19,365.38 251.19,366.19 Q188.06,365.38 141.06,355.12 Q98.62,343.69 95.19,328.44 Q98.50,313.06 140.88,301.69 Q187.81,291.38 250.88,290.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_34a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z",to:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_35a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M250.31,134.69L263.31,134.31 Q263.50,148.12 263.88,171.19 Q264.06,185.00 264.50,208.06 Q265.12,249.50 265.69,281.81 Q266.31,283.19 264.75,285.25 Q261.25,287.25 255.62,287.94 Q249.75,287.88 245.94,286.12 Q244.19,283.69 244.88,281.81 Q245.31,268.00 246.19,245.00 Q246.69,231.19 247.56,208.25 Q249.06,166.88 250.31,134.69 Z",to:"M296.81,135.81L310.12,135.50 Q301.56,148.31 289.50,170.19 Q280.94,183.06 275.19,206.12 Q268.44,248.25 265.38,281.44 Q266.06,282.88 264.56,285.12 Q261.19,287.19 255.62,287.94 Q249.75,287.88 245.81,286.00 Q243.94,283.44 244.56,281.44 Q245.12,266.94 248.25,243.25 Q248.81,228.81 258.19,206.31 Q278.69,166.44 296.81,135.81 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_36a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M253.75,137.56Q254.38,137.19 258.56,135.25 Q264.25,132.06 272.56,128.88 Q279.88,126.56 287.88,126.38 Q295.88,126.06 304.62,128.50 Q313.44,130.69 322.56,136.88 Q333.06,145.19 340.56,154.69 Q345.50,162.19 346.06,167.56 Q347.69,175.25 346.12,176.88 Q344.12,173.62 338.56,165.44 Q332.06,159.44 324.25,154.69 Q317.56,150.81 311.44,148.12 Q305.31,144.31 299.00,142.00 Q292.81,141.00 285.06,141.31 Q273.75,140.75 266.00,140.38 ",to:"M300.25,135.94Q300.69,135.94 303.38,136.25 Q307.06,136.00 312.25,137.06 Q316.75,138.44 321.25,142.19 Q325.75,145.75 330.12,152.12 Q334.56,158.31 338.56,168.19 Q342.88,180.62 345.31,192.69 Q346.69,201.75 346.06,206.88 Q345.56,214.56 344.38,215.25 Q343.81,211.38 342.25,201.38 Q339.69,192.88 336.25,184.88 Q333.25,178.19 330.38,172.88 Q327.69,166.56 324.56,161.50 Q321.31,157.69 316.94,154.25 Q310.75,148.38 306.56,144.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_37a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M254.69,137.88Q254.75,137.31 252.44,134.12 Q248.81,129.12 242.69,123.19 Q237.19,118.44 230.38,115.44 Q223.56,112.31 215.31,111.50 Q206.94,110.44 197.00,113.00 Q185.06,117.06 175.50,123.31 Q168.62,128.56 166.31,133.44 Q162.19,140.00 163.06,142.06 Q165.88,139.69 173.56,134.00 Q181.12,130.69 189.50,129.06 Q196.56,127.75 202.81,127.38 Q209.25,126.00 215.44,126.12 Q221.06,127.31 227.69,130.38 Q237.50,133.81 244.25,136.25 ",to:"M303.75,131.25Q303.94,130.88 302.88,126.56 Q301.25,119.81 297.88,110.50 Q294.69,102.62 289.94,95.25 Q285.19,87.75 278.69,81.12 Q272.19,74.25 263.44,69.12 Q252.62,63.81 243.19,61.94 Q236.12,61.19 233.00,63.50 Q227.88,65.88 228.06,68.19 Q230.94,68.31 238.69,69.19 Q245.75,72.00 253.00,76.69 Q259.12,80.75 264.31,85.00 Q269.88,88.56 274.88,93.19 Q279.12,98.25 283.75,105.50 Q290.81,115.44 295.69,122.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_38a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M254.69,137.88Q254.81,137.38 257.50,135.31 Q261.56,132.12 267.69,129.06 Q272.88,126.81 278.44,126.75 Q284.00,126.56 289.94,129.19 Q295.94,131.50 302.00,137.81 Q308.81,146.25 313.50,155.88 Q316.56,163.44 316.62,168.81 Q317.31,176.50 316.12,178.12 Q314.88,174.88 311.50,166.62 Q307.31,160.56 302.19,155.69 Q297.75,151.69 293.62,148.88 Q289.56,144.94 285.31,142.56 Q281.06,141.44 275.69,141.69 Q267.88,140.94 262.50,140.50 ",to:"M301.06,136.56Q301.44,136.31 305.75,137.44 Q312.19,139.00 321.12,142.62 Q328.62,146.00 335.75,151.31 Q342.88,156.56 349.31,164.25 Q356.00,171.81 361.06,182.25 Q366.19,195.06 368.06,206.62 Q368.81,215.19 366.75,219.25 Q364.44,225.62 362.25,225.62 Q361.94,222.00 361.06,212.56 Q358.31,204.12 353.88,195.62 Q349.94,188.38 345.81,182.25 Q342.31,175.44 337.88,169.56 Q333.00,164.69 326.06,159.62 Q316.44,151.56 309.81,146.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_39a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M253.75,137.56Q254.31,133.38 253.25,126.56 Q250.94,120.62 246.56,116.00 Q242.69,111.69 237.81,109.88 Q232.81,107.81 226.69,109.00 Q220.50,109.88 213.06,115.44 Q204.00,123.19 196.50,133.00 Q191.06,140.94 189.12,147.25 Q185.69,156.06 186.25,158.31 Q188.44,154.81 194.44,146.19 Q200.25,140.38 206.56,136.31 Q211.88,133.00 216.56,131.00 Q221.50,127.69 226.19,126.25 Q230.31,126.31 235.06,128.31 Q242.12,129.94 247.06,131.12 ",to:"M300.25,134.69Q302.06,131.62 303.19,125.31 Q302.81,118.88 300.12,111.94 Q297.81,105.62 293.75,100.56 Q289.69,95.38 283.50,91.88 Q277.38,88.06 268.56,87.12 Q257.50,86.94 247.44,89.50 Q239.88,92.00 236.06,95.75 Q230.06,100.50 229.88,102.69 Q233.00,101.44 241.38,98.69 Q248.69,98.19 256.00,99.44 Q262.00,100.62 267.06,102.44 Q272.75,103.31 277.62,105.50 Q281.50,108.56 285.44,113.62 Q291.62,120.06 295.88,124.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_40a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M259.06,136.81Q260.19,132.69 263.44,126.94 Q267.00,122.44 271.50,120.00 Q275.44,117.69 279.19,118.12 Q282.88,118.38 286.19,122.00 Q289.56,125.38 292.12,133.56 Q294.62,144.50 295.50,156.62 Q295.75,166.12 294.56,172.81 Q293.25,182.31 292.12,184.19 Q292.00,180.06 291.69,169.62 Q290.31,161.81 288.12,155.44 Q286.06,150.19 284.00,146.44 Q282.25,141.31 280.06,138.00 Q277.50,136.38 273.88,136.25 Q268.88,134.69 265.50,133.62 ",to:"M305.50,136.88Q307.88,133.38 312.75,128.88 Q317.56,125.75 322.56,124.81 Q327.00,123.81 330.44,125.38 Q333.88,126.75 335.94,131.25 Q338.06,135.50 337.94,144.12 Q336.94,155.31 334.00,167.06 Q331.25,176.19 328.06,182.12 Q323.88,190.75 322.25,192.19 Q323.44,188.25 326.38,178.25 Q327.50,170.38 327.38,163.62 Q327.06,158.00 326.25,153.81 Q326.19,148.38 325.12,144.56 Q323.19,142.19 319.81,140.94 Q315.50,137.94 312.62,135.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_41a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M254.69,137.88Q255.38,133.75 255.25,127.31 Q254.25,121.81 251.88,117.69 Q249.69,113.88 246.69,112.56 Q243.62,111.00 239.62,112.69 Q235.56,114.12 230.31,120.19 Q223.81,128.44 218.19,138.50 Q214.00,146.69 212.25,153.12 Q209.38,161.94 209.56,164.06 Q211.19,160.50 215.75,151.56 Q219.94,145.44 224.38,140.94 Q228.06,137.25 231.31,134.94 Q234.69,131.25 237.81,129.44 Q240.44,129.06 243.44,130.56 Q247.88,131.50 251.00,132.19 ",to:"M301.06,136.56Q303.00,132.88 304.88,126.69 Q305.62,121.12 304.62,116.50 Q303.75,112.19 301.31,110.00 Q298.88,107.62 294.56,107.94 Q290.25,108.06 283.38,112.12 Q274.56,117.94 266.12,125.81 Q259.62,132.31 256.00,137.81 Q250.50,145.31 250.00,147.38 Q252.62,144.50 259.75,137.44 Q265.69,132.94 271.31,130.06 Q275.94,127.69 279.75,126.44 Q284.06,124.06 287.62,123.31 Q290.25,123.75 292.62,126.06 Q296.56,128.38 299.31,130.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_42a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M253.69,139.56Q254.44,135.44 256.50,129.50 Q258.81,124.75 261.62,121.81 Q264.12,119.00 266.44,118.81 Q268.75,118.50 270.81,121.56 Q272.88,124.31 274.44,131.81 Q276.00,141.88 276.50,153.38 Q276.62,162.50 275.88,169.06 Q275.00,178.31 274.25,180.19 Q274.19,176.25 274.06,166.31 Q273.25,159.00 271.88,153.25 Q270.62,148.50 269.31,145.25 Q268.25,140.62 266.88,137.81 Q265.25,136.56 263.00,136.94 Q259.88,136.19 257.75,135.69 ",to:"M299.56,137.88Q301.56,134.19 305.38,129.12 Q309.00,125.31 312.62,123.44 Q315.81,121.50 318.12,122.06 Q320.44,122.50 321.50,126.06 Q322.62,129.31 321.75,136.94 Q320.06,147.00 316.94,158.06 Q314.19,166.75 311.44,172.75 Q307.69,181.25 306.44,182.88 Q307.62,179.12 310.62,169.62 Q312.06,162.44 312.56,156.50 Q312.81,151.56 312.62,148.06 Q313.00,143.38 312.62,140.31 Q311.50,138.62 309.25,138.25 Q306.50,136.56 304.69,135.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_43a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M254.38,120.56Q256.50,116.00 260.38,117.69 Q264.62,123.00 267.06,133.06 Q267.56,141.19 265.69,149.00 Q265.00,156.25 262.62,163.12 Q257.69,173.56 254.06,177.31 Q253.56,175.00 256.00,164.62 Q257.94,154.88 258.94,146.31 Q258.69,141.06 257.06,138.31 Q255.44,134.25 254.31,129.94 Q253.25,124.56 254.38,120.56 Z",to:"M306.12,120.00Q309.56,116.31 312.75,119.12 Q315.12,125.50 314.31,135.81 Q312.25,143.69 308.00,150.56 Q305.06,157.25 300.69,163.00 Q292.75,171.38 288.19,173.81 Q288.44,171.50 294.00,162.38 Q298.81,153.69 302.44,145.88 Q303.81,140.81 303.12,137.69 Q302.81,133.31 303.12,128.88 Q303.75,123.44 306.12,120.00 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_44a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M259.88,124.12Q258.88,118.50 254.06,117.81 Q248.50,121.31 243.44,130.31 Q240.25,137.88 239.19,145.88 Q237.25,152.88 236.94,160.06 Q237.38,171.31 239.06,175.94 Q239.62,174.81 241.75,163.44 Q245.44,150.12 249.81,138.19 Q252.69,132.38 254.88,131.12 Q258.69,127.50 259.88,124.12 Z",to:"M310.25,125.12Q311.06,119.44 306.69,117.25 Q300.38,118.88 292.75,125.88 Q287.31,132.06 283.81,139.31 Q279.75,145.38 277.25,152.12 Q274.12,162.94 274.31,167.88 Q275.25,167.00 280.81,156.81 Q288.50,145.31 296.31,135.31 Q300.88,130.69 303.31,130.19 Q308.06,128.00 310.25,125.12 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_45a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M378.62,223.06Q384.06,218.62 389.94,211.69 Q399.50,204.25 391.62,201.56 Q369.81,204.75 332.94,209.12 Q300.12,208.38 274.31,203.69 Q256.88,199.31 243.31,195.06 Q217.69,191.44 199.81,190.00 Q201.00,194.56 205.31,204.44 Q210.75,215.06 217.81,225.62 Q223.69,233.44 229.44,239.75 Q236.69,249.00 241.12,254.75 L241.75,258.88 Q257.56,269.94 284.50,277.38 Q309.69,273.62 329.00,262.69 Q340.25,258.88 347.88,252.19 Q365.00,237.56 377.44,225.56 ",to:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_46a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M389.62,198.62Q397.69,196.31 407.81,198.00 Q414.19,201.88 416.00,213.62 Q416.81,230.94 415.62,244.44 L395.69,251.44 Q391.56,252.69 384.44,254.06 Q377.00,254.50 372.44,254.31 Q378.56,248.31 385.88,238.44 Q390.19,230.25 390.62,222.69 Q391.69,213.81 388.38,209.06 Q381.50,207.50 375.19,209.44 L377.81,204.12 ",to:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_47a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M273.94,73.25Q273.56,71.50 274.12,69.19 Q274.19,67.62 275.00,66.12 Q276.19,64.38 277.75,62.12 Q279.00,59.44 280.06,56.94 Q281.25,54.44 281.94,53.31 Q282.88,52.44 283.69,49.94 Q283.50,46.19 282.88,43.38 L284.69,43.94 Q284.69,44.25 284.81,44.94 Q284.94,45.69 285.12,46.25 Q285.44,44.88 286.19,42.81 Q286.88,40.75 287.56,39.81 Q288.31,39.25 288.50,40.50 Q288.12,42.25 287.44,44.38 Q287.00,45.81 286.88,46.31 Q287.94,45.56 289.44,44.50 Q290.38,43.44 291.12,42.88 Q292.25,42.38 292.56,42.94 Q292.00,43.81 290.56,45.25 Q289.12,46.69 288.19,47.56 Q290.00,47.00 292.00,46.94 Q293.12,47.56 292.38,48.50 Q290.75,48.75 288.56,49.00 Q287.69,48.62 286.62,50.44 Q284.00,54.19 281.62,59.62 Q280.31,64.69 280.31,67.50 Q280.25,68.06 279.50,69.75 Q278.19,72.12 276.50,73.81 Q274.81,74.50 273.94,73.25 Z",to:"M289.81,75.44Q288.69,76.81 286.62,77.94 Q285.31,78.81 283.69,79.25 Q281.56,79.44 278.88,79.75 Q276.00,80.44 273.44,81.31 Q270.75,81.94 269.50,82.25 Q268.12,82.06 265.75,83.12 Q263.06,85.62 261.31,88.00 L260.56,86.31 Q260.81,86.00 261.25,85.50 Q261.69,84.81 262.00,84.44 Q260.75,85.00 258.75,85.81 Q256.75,86.56 255.56,86.75 Q254.62,86.50 255.44,85.62 Q257.00,84.69 259.12,83.88 Q260.44,83.25 260.94,83.06 Q259.69,82.62 257.94,82.25 Q256.44,82.19 255.56,82.06 Q254.44,81.44 254.69,80.94 Q255.69,80.75 257.75,80.94 Q259.75,81.06 261.00,81.25 Q259.38,80.12 258.06,78.75 Q257.81,77.44 259.06,77.44 Q260.25,78.44 261.88,80.00 Q262.12,80.88 264.25,80.56 Q268.81,80.00 274.50,78.38 Q279.19,76.06 281.31,74.31 Q281.81,73.88 283.56,73.44 Q286.19,72.88 288.56,73.12 Q290.19,73.88 289.81,75.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_48a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M261.88,93.00L243.50,91.00 L242.56,87.75 L242.44,85.56 L242.25,85.19 Q242.75,85.06 243.44,84.50 Q243.88,83.62 244.06,82.69 Q244.19,81.81 244.25,81.44 Q244.06,81.12 243.62,80.94 Q242.81,81.00 242.25,81.25 L241.62,83.00 L240.69,81.94 L239.62,82.00 Q239.38,82.88 238.75,84.31 Q237.75,85.50 237.00,86.12 Q237.56,86.94 238.25,88.19 Q238.62,89.25 238.69,89.88 Q239.25,90.62 239.88,92.31 Q240.06,94.38 240.00,95.88 Q240.62,96.19 242.00,96.06 Q243.62,95.12 244.81,94.19 L249.00,94.69 L263.00,98.19 ",to:"M289.88,104.56L282.75,121.62 L279.38,121.62 L277.19,121.06 L276.81,121.12 Q276.81,120.62 276.50,119.88 Q275.81,119.19 274.94,118.69 Q274.12,118.25 273.81,118.19 Q273.44,118.25 273.12,118.69 Q272.94,119.44 273.00,120.06 L274.56,121.12 L273.25,121.75 L273.00,122.81 Q273.75,123.25 274.94,124.31 Q275.81,125.56 276.25,126.50 Q277.19,126.12 278.56,125.88 Q279.69,125.81 280.31,125.94 Q281.19,125.56 282.94,125.50 Q284.94,125.88 286.38,126.38 Q286.88,125.81 287.19,124.50 Q286.75,122.62 286.19,121.25 L287.88,117.38 L295.19,105.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_49a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M262.19,104.12L256.31,121.69 L252.88,121.88 L250.69,121.50 L250.31,121.56 Q250.31,121.06 249.94,120.38 Q249.19,119.75 248.31,119.31 Q247.50,118.94 247.12,118.88 Q246.81,118.94 246.50,119.38 Q246.38,120.12 246.44,120.75 L248.06,121.69 L246.81,122.50 L246.62,123.56 Q247.44,123.94 248.69,124.88 Q249.62,126.06 250.12,126.94 Q251.00,126.56 252.38,126.19 Q253.50,126.06 254.12,126.12 Q255.00,125.69 256.75,125.50 Q258.81,125.69 260.25,126.12 Q260.69,125.50 260.88,124.19 Q260.31,122.38 259.69,121.06 L261.06,117.00 L267.50,104.19 ",to:"M301.44,109.56L306.69,127.31 L304.00,129.44 L301.94,130.44 L301.69,130.69 Q301.38,130.25 300.69,129.94 Q299.69,129.81 298.75,130.00 Q297.88,130.12 297.56,130.31 Q297.31,130.50 297.31,131.06 Q297.62,131.75 298.06,132.25 L299.94,132.06 L299.38,133.44 L299.81,134.44 Q300.69,134.25 302.25,134.31 Q303.69,134.69 304.62,135.19 Q305.12,134.38 306.06,133.31 Q306.88,132.50 307.44,132.25 Q307.94,131.38 309.25,130.19 Q311.06,129.12 312.44,128.69 Q312.50,127.94 311.88,126.75 Q310.38,125.56 309.06,124.88 L307.88,120.75 L305.81,106.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M274.25,53.88Q273.88,55.75 273.38,58.06 Q272.94,58.75 272.50,59.62 Q271.75,62.25 271.31,64.50 L270.06,66.31 L269.56,76.06 ",to:"M279.00,59.38Q279.75,61.06 280.62,63.31 Q280.69,64.12 280.81,65.12 Q281.69,67.62 282.62,69.75 L282.69,72.00 L287.88,80.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_51a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M271.69,71.81Q266.44,73.69 260.88,78.38 Q258.38,83.69 259.19,89.19 Q259.56,93.88 261.50,96.50 Q263.56,98.25 265.88,98.75 Q268.00,101.06 269.12,100.94 Q269.19,98.19 269.44,93.19 Q269.56,90.00 273.00,86.06 Q280.44,80.00 286.38,75.00 Q286.88,72.62 283.62,71.88 Q282.44,69.19 282.00,67.31 ",to:"M287.12,75.56Q285.94,81.25 285.19,89.00 Q285.00,94.06 286.88,96.94 Q289.50,100.31 292.94,101.62 Q295.00,102.12 297.81,100.94 Q302.88,100.62 306.44,98.69 Q307.06,95.69 305.12,91.31 Q304.69,87.94 303.44,83.38 Q301.12,76.50 298.88,71.06 Q297.81,68.69 297.00,68.75 Q294.75,67.00 293.00,65.94 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M277.25,53.06Q276.44,53.00 274.25,53.88 Q271.69,54.38 268.75,57.19 Q265.69,62.56 264.06,67.19 ",to:"M280.94,57.00Q280.25,57.44 279.00,59.38 Q277.19,61.25 276.38,65.25 Q276.94,71.38 278.25,76.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M272.69,56.75L272.62,57.88 L268.62,65.06 Q268.19,66.75 267.38,69.44 Q266.38,71.81 265.75,73.12 ",to:"M279.31,62.62L279.94,63.56 L280.75,71.75 Q281.38,73.38 282.25,76.06 Q282.81,78.56 283.06,80.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M274.25,53.88L270.62,59.00 264.75,71.81 ",to:"M279.00,59.38L278.94,65.69 281.44,79.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_55a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M274.44,70.62Q275.31,71.12 275.31,70.50 Q275.56,70.44 276.12,70.38 Q276.62,70.31 277.81,70.25 Q279.56,70.31 281.25,70.00 Q282.06,69.31 282.38,68.31 Q282.81,67.69 283.56,66.75 Q284.94,65.62 285.94,63.50 Q286.69,60.75 285.62,57.88 Q284.06,55.00 280.50,54.12 Q275.75,54.00 271.75,56.31 Q269.56,59.50 269.62,62.25 Q268.44,62.06 266.25,62.25 Q263.94,62.38 262.25,63.38 Q260.94,65.06 261.25,66.75 Q261.75,67.75 263.62,67.81 Q265.69,67.81 267.81,67.25 Q269.44,66.44 270.06,65.88 Q272.12,68.25 274.44,70.62 Z",to:"M288.75,73.00Q289.75,72.88 289.38,72.38 Q289.56,72.12 289.94,71.81 Q290.31,71.44 291.25,70.75 Q292.75,69.75 293.94,68.56 Q294.19,67.50 293.88,66.56 Q293.88,65.81 294.00,64.62 Q294.44,62.88 294.06,60.56 Q293.06,57.81 290.56,56.12 Q287.69,54.62 284.25,56.00 Q280.25,58.62 278.31,62.81 Q278.38,66.69 280.00,68.88 Q278.88,69.44 277.19,70.81 Q275.38,72.25 274.56,74.06 Q274.44,76.19 275.69,77.38 Q276.69,77.88 278.25,76.88 Q280.00,75.69 281.38,74.06 Q282.25,72.44 282.44,71.62 Q285.50,72.38 288.75,73.00 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_56a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M271.75,90.12L259.19,89.19 247.31,90.69 250.81,100.88 254.31,105.62 260.12,107.88 270.94,106.62 ",to:"M306.56,95.75L286.88,96.94 289.75,111.75 295.31,111.12 296.00,112.44 298.38,111.75 314.94,105.94 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp3_57a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M283.00,76.12Q284.75,76.00 286.81,75.06 Q288.25,74.56 289.50,73.62 Q290.69,72.31 292.38,70.69 Q294.44,69.06 296.62,67.69 Q298.62,66.19 299.56,65.44 Q300.00,64.50 302.19,63.38 Q305.75,62.62 308.75,62.50 L307.62,61.19 Q307.25,61.25 306.56,61.38 Q305.75,61.38 305.31,61.38 Q306.44,60.81 308.19,59.81 Q309.88,58.81 310.69,58.06 Q310.88,57.25 309.69,57.38 Q308.06,58.00 306.31,59.12 Q305.00,59.75 304.56,60.00 Q304.88,58.94 305.50,57.56 Q306.19,56.56 306.56,55.94 Q306.56,54.88 306.00,54.81 Q305.31,55.38 304.50,56.81 Q303.56,58.25 303.00,59.19 Q302.94,57.50 302.50,55.94 Q301.44,55.25 300.75,56.19 Q301.00,57.44 301.50,59.19 Q302.12,59.75 300.75,61.12 Q297.88,63.94 293.50,67.06 Q289.00,69.12 286.38,69.81 Q285.75,69.94 284.44,70.88 Q282.56,72.38 281.56,74.12 Q281.44,75.62 283.00,76.12 Z",to:"M297.62,71.88Q299.19,72.50 301.50,72.50 Q303.00,72.62 304.56,72.31 Q306.19,71.62 308.38,70.75 Q310.94,70.19 313.50,69.81 Q315.88,69.25 317.06,68.94 Q317.88,68.31 320.38,68.19 Q323.94,69.06 326.69,70.12 L326.19,68.44 Q325.81,68.38 325.19,68.19 Q324.44,67.88 324.00,67.62 Q325.25,67.56 327.31,67.38 Q329.25,67.19 330.25,66.81 Q330.75,66.19 329.62,65.81 Q327.88,65.75 325.88,66.00 Q324.44,66.00 323.94,66.06 Q324.62,65.25 325.75,64.25 Q326.75,63.62 327.38,63.19 Q327.81,62.25 327.38,61.94 Q326.56,62.12 325.19,63.12 Q323.69,64.00 322.81,64.69 Q323.38,63.19 323.62,61.56 Q322.94,60.50 322.00,61.00 Q321.69,62.25 321.44,64.06 Q321.75,64.81 319.94,65.50 Q316.12,66.94 310.88,67.94 Q305.94,68.00 303.31,67.56 Q302.69,67.38 301.12,67.69 Q298.75,68.31 297.12,69.50 Q296.38,70.81 297.62,71.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M274.25,53.88L279.00,55.50 Q279.12,58.75 279.81,63.12 Q280.88,65.06 281.88,67.62 Q282.38,73.19 282.38,77.62 ",to:"M279.00,59.38L283.81,58.00 Q285.75,60.56 288.81,63.75 Q290.81,64.69 293.12,66.25 Q296.69,70.50 299.25,74.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M279.00,55.50L281.62,59.12 Q281.75,60.56 282.56,63.62 Q283.75,66.69 285.12,69.94 Q286.06,73.25 286.38,75.00 ",to:"M283.81,58.00L288.00,59.44 Q288.94,60.56 291.38,62.62 Q294.12,64.44 297.06,66.31 Q299.69,68.44 301.00,69.75 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M277.25,53.06L284.75,55.88 Q285.81,57.75 288.12,61.44 Q290.81,65.62 292.69,68.50 ",to:"M280.94,57.00L288.75,55.00 Q290.75,55.88 294.69,57.62 Q299.25,59.50 302.44,60.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M279.00,55.50Q281.06,58.88 284.06,63.31 Q286.25,66.00 287.44,67.19 Q288.31,68.19 288.50,68.62 Q288.88,69.56 289.00,70.25 Q289.44,70.62 290.00,71.50 Q290.38,72.56 290.50,73.31 ",to:"M283.81,58.00Q287.50,59.56 292.44,61.50 Q295.75,62.44 297.44,62.75 Q298.69,63.00 299.12,63.31 Q299.94,63.88 300.44,64.38 Q301.00,64.44 302.00,64.81 Q302.88,65.44 303.44,66.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M277.25,53.06Q280.00,54.75 283.31,57.62 Q284.50,59.75 285.12,62.06 Q286.88,64.88 288.56,67.38 Q289.69,69.50 290.06,70.38 ",to:"M280.94,57.00Q284.25,56.75 288.56,57.25 Q290.75,58.25 292.56,59.88 Q295.62,61.19 298.44,62.25 Q300.62,63.31 301.38,63.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M277.25,53.06Q278.25,53.12 280.38,53.75 Q282.56,54.62 284.75,55.88 Q286.50,56.62 287.81,57.69 Q288.94,58.81 290.44,60.94 Q292.81,64.06 294.56,66.38 ",to:"M280.94,57.00Q281.81,56.44 283.94,55.75 Q286.25,55.25 288.75,55.00 Q290.56,54.62 292.25,54.75 Q293.88,55.00 296.31,55.88 Q300.00,57.06 302.75,58.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M274.00,60.19Q274.19,60.12 274.50,60.56 Q274.75,60.94 275.00,61.56 Q275.12,62.19 275.06,62.81 Q274.94,63.31 274.69,63.44 Q274.44,63.44 274.25,63.00 Q273.94,62.50 273.81,61.88 Q273.62,61.19 273.69,60.75 Q273.75,60.25 274.00,60.19 Z",to:"M282.38,64.69Q282.50,64.56 283.00,64.75 Q283.44,64.88 284.00,65.25 Q284.44,65.69 284.75,66.25 Q284.94,66.75 284.81,67.00 Q284.62,67.06 284.19,66.88 Q283.69,66.62 283.19,66.19 Q282.69,65.69 282.44,65.31 Q282.19,64.88 282.38,64.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.00s",dur:"0.50s",attributeName:"d",from:"M269.94,59.44Q270.00,59.31 270.00,59.69 Q269.94,60.06 269.81,60.69 Q269.69,61.25 269.56,61.81 Q269.44,62.31 269.38,62.50 Q269.25,62.50 269.31,62.12 Q269.31,61.69 269.50,61.12 Q269.62,60.50 269.75,60.00 Q269.81,59.50 269.94,59.44 Z",to:"M278.62,66.44Q278.62,66.31 278.81,66.56 Q279.00,66.88 279.25,67.50 Q279.44,68.06 279.69,68.56 Q279.88,69.06 279.94,69.25 Q279.81,69.31 279.62,69.00 Q279.44,68.62 279.25,68.06 Q279.00,67.44 278.81,67.00 Q278.62,66.56 278.62,66.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+1.50s",attributeName:"d",to:"M0,0"})])]),e("g",{id:"P4a1:loop2,0"},[e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 ",to:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 ",to:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 ",to:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 ",to:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z",to:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z",to:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 ",to:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 ",to:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z",to:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z",to:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 ",to:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 ",to:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-34.44,82.31L-31.81,93.56 ",to:"M-34.44,82.31L-31.81,93.56 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-34.44,82.31L-31.81,93.56 ",to:"M-34.44,82.31L-31.81,93.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-36.12,71.00L-34.75,77.56 ",to:"M-36.12,71.00L-34.75,77.56 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-36.12,71.00L-34.75,77.56 ",to:"M-36.12,71.00L-34.75,77.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M392.38,58.88L389.75,99.62 388.88,100.50 ",to:"M392.38,58.88L389.75,99.62 388.88,100.50 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M392.38,58.88L389.75,99.62 388.88,100.50 ",to:"M392.38,58.88L389.75,99.62 388.88,100.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 ",to:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 ",to:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z",to:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z",to:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 ",to:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 ",to:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z",to:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z",to:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 ",to:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 ",to:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M473.00,88.38L475.62,99.62 ",to:"M473.00,88.38L475.62,99.62 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M473.00,88.38L475.62,99.62 ",to:"M473.00,88.38L475.62,99.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M471.31,77.06L472.69,83.62 ",to:"M471.31,77.06L472.69,83.62 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M471.31,77.06L472.69,83.62 ",to:"M471.31,77.06L472.69,83.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#99ffcc",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z",to:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z",to:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_18a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z",to:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z",to:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M437.31,236.00Q452.62,236.25 464.12,239.25 Q474.44,242.56 475.31,247.00 Q474.44,251.44 464.12,254.75 Q452.62,257.75 437.31,258.00 Q421.94,257.75 410.50,254.75 Q400.12,251.44 399.31,247.00 Q400.12,242.56 410.50,239.25 Q421.94,236.25 437.31,236.00 Z",to:"M437.31,231.94Q458.25,232.25 473.94,236.38 Q488.06,240.88 489.25,247.00 Q488.06,253.00 473.94,257.56 Q458.25,261.62 437.31,262.00 Q416.25,261.62 400.62,257.56 Q386.44,253.00 385.31,247.00 Q386.44,240.88 400.62,236.38 Q416.25,232.25 437.31,231.94 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M437.31,231.94Q458.25,232.25 473.94,236.38 Q488.06,240.88 489.25,247.00 Q488.06,253.00 473.94,257.56 Q458.25,261.62 437.31,262.00 Q416.25,261.62 400.62,257.56 Q386.44,253.00 385.31,247.00 Q386.44,240.88 400.62,236.38 Q416.25,232.25 437.31,231.94 Z",to:"M426.94,230.44Q444.75,229.19 458.25,232.19 Q470.44,235.69 471.69,241.81 Q470.94,248.12 459.19,253.94 Q446.12,259.38 428.38,261.38 Q410.56,262.62 397.12,259.62 Q384.88,256.06 383.62,249.94 Q384.31,243.56 396.12,237.81 Q409.12,232.38 426.94,230.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z",to:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z",to:"M235.44,211.50Q274.19,211.81 303.12,216.25 Q329.12,221.12 331.19,227.75 Q329.12,234.31 303.12,239.19 Q274.19,243.56 235.44,243.94 Q196.56,243.56 167.69,239.19 Q141.62,234.31 139.62,227.75 Q141.62,221.12 167.69,216.25 Q196.56,211.81 235.44,211.50 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"0.25s",attributeName:"d",from:"M22.56,217.69Q36.88,217.88 47.56,220.94 Q57.12,224.25 57.94,228.75 Q57.12,233.19 47.56,236.56 Q36.88,239.56 22.56,239.81 Q8.25,239.56 -2.38,236.56 Q-11.94,233.19 -12.75,228.75 Q-11.94,224.25 -2.38,220.94 Q8.25,217.88 22.56,217.69 Z",to:"M84.88,200.19Q117.94,200.69 142.62,207.69 Q164.75,215.38 166.56,225.75 Q164.75,236.06 142.62,243.75 Q117.94,250.69 84.88,251.25 Q51.69,250.69 27.06,243.75 Q4.88,236.06 3.12,225.75 Q4.88,215.38 27.06,207.69 Q51.69,200.69 84.88,200.19 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+1.75s",dur:"0.75s",attributeName:"d",from:"M84.88,200.19Q117.94,200.69 142.62,207.69 Q164.75,215.38 166.56,225.75 Q164.75,236.06 142.62,243.75 Q117.94,250.69 84.88,251.25 Q51.69,250.69 27.06,243.75 Q4.88,236.06 3.12,225.75 Q4.88,215.38 27.06,207.69 Q51.69,200.69 84.88,200.19 Z",to:"M86.75,200.62Q120.38,201.19 145.50,208.25 Q168.06,216.06 169.88,226.62 Q168.06,237.12 145.50,244.94 Q120.38,251.94 86.75,252.56 Q53.00,251.94 27.94,244.94 Q5.31,237.12 3.56,226.62 Q5.31,216.06 27.94,208.25 Q53.00,201.19 86.75,200.62 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M86.75,200.62Q120.38,201.19 145.50,208.25 Q168.06,216.06 169.88,226.62 Q168.06,237.12 145.50,244.94 Q120.38,251.94 86.75,252.56 Q53.00,251.94 27.94,244.94 Q5.31,237.12 3.56,226.62 Q5.31,216.06 27.94,208.25 Q53.00,201.19 86.75,200.62 Z",to:"M55.88,212.56Q89.75,212.62 115.00,216.75 Q137.75,221.31 139.62,227.75 Q137.75,234.06 115.00,239.00 Q89.75,243.44 55.88,244.06 Q22.00,243.94 -3.25,239.81 Q-26.00,235.19 -27.88,228.81 Q-26.00,222.44 -3.25,217.56 Q22.00,213.12 55.88,212.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_22a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 ",to:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 ",to:"M300.25,230.25Q310.00,227.00 317.50,223.00 Q315.12,220.56 308.50,220.00 L236.50,217.25 Q208.69,218.00 176.25,220.00 Q158.31,221.81 157.69,224.62 Q159.69,228.56 166.38,231.38 L181.06,234.12 Q185.69,234.06 197.75,234.12 Q211.88,234.38 227.06,234.50 Q238.31,234.31 247.69,233.75 Q259.00,233.31 269.12,232.56 Q279.50,231.38 284.56,230.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_23a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"0.25s",attributeName:"d",from:"M8.38,158.38Q5.12,146.75 2.38,131.44 Q1.81,122.31 4.31,116.38 Q5.88,109.12 10.56,101.88 Q15.44,94.25 24.75,86.38 Q32.19,79.81 48.69,70.88 Q74.31,57.50 99.00,45.81 Q112.69,38.56 118.81,36.81 Q131.31,34.06 138.88,33.56 L110.31,57.56 Q102.62,63.69 90.00,75.06 Q79.38,85.31 69.88,96.06 Q60.81,106.94 53.81,115.38 Q47.38,119.88 41.94,126.38 Q34.38,141.25 29.81,153.38 L11.56,165.88 ",to:"M144.94,113.38Q153.88,101.19 166.81,86.25 Q175.12,78.25 182.44,75.19 Q190.25,70.38 200.19,67.81 Q210.50,65.12 223.88,65.62 Q234.81,65.81 253.75,70.94 Q282.62,79.31 309.38,88.25 Q324.81,92.56 330.38,95.81 Q340.88,103.06 346.12,108.44 L305.25,106.69 Q294.50,106.00 275.69,105.94 Q259.19,106.44 243.06,108.12 Q226.94,110.31 214.56,112.00 Q206.12,110.81 196.56,112.12 Q177.62,118.81 163.25,125.56 L139.81,122.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+1.75s",dur:"0.75s",attributeName:"d",from:"M144.94,113.38Q153.88,101.19 166.81,86.25 Q175.12,78.25 182.44,75.19 Q190.25,70.38 200.19,67.81 Q210.50,65.12 223.88,65.62 Q234.81,65.81 253.75,70.94 Q282.62,79.31 309.38,88.25 Q324.81,92.56 330.38,95.81 Q340.88,103.06 346.12,108.44 L305.25,106.69 Q294.50,106.00 275.69,105.94 Q259.19,106.44 243.06,108.12 Q226.94,110.31 214.56,112.00 Q206.12,110.81 196.56,112.12 Q177.62,118.81 163.25,125.56 L139.81,122.06 ",to:"M148.81,112.75Q158.12,100.50 171.50,85.56 Q180.06,77.50 187.50,74.50 Q195.50,69.75 205.56,67.31 Q216.06,64.75 229.62,65.44 Q240.69,65.75 259.75,71.25 Q288.81,80.19 315.69,89.69 Q331.25,94.31 336.81,97.62 Q347.31,105.12 352.56,110.69 L311.19,108.31 Q300.38,107.50 281.31,107.12 Q264.62,107.38 248.25,108.88 Q231.88,110.81 219.31,112.38 Q210.81,111.06 201.12,112.25 Q181.81,118.81 167.12,125.44 L143.50,121.50 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M148.81,112.75Q158.12,100.50 171.50,85.56 Q180.06,77.50 187.50,74.50 Q195.50,69.75 205.56,67.31 Q216.06,64.75 229.62,65.44 Q240.69,65.75 259.75,71.25 Q288.81,80.19 315.69,89.69 Q331.25,94.31 336.81,97.62 Q347.31,105.12 352.56,110.69 L311.19,108.31 Q300.38,107.50 281.31,107.12 Q264.62,107.38 248.25,108.88 Q231.88,110.81 219.31,112.38 Q210.81,111.06 201.12,112.25 Q181.81,118.81 167.12,125.44 L143.50,121.50 ",to:"M19.94,149.12Q18.50,133.25 18.12,112.81 Q18.94,101.06 22.38,94.44 Q25.06,85.88 30.94,78.31 Q37.06,70.38 47.69,63.69 Q56.19,58.00 74.19,52.56 Q102.12,44.75 128.88,38.69 Q143.75,34.38 150.19,34.31 Q163.19,35.25 170.94,37.38 L138.44,57.62 Q129.75,62.69 115.19,72.62 Q102.94,81.88 91.69,92.06 Q80.81,102.56 72.44,110.75 Q65.19,114.19 58.69,120.50 Q48.81,136.69 42.38,150.44 L22.00,159.75 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_24a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"0.25s",attributeName:"d",from:"M8.06,156.25Q2.00,158.44 -4.88,169.75 Q-9.31,186.25 -8.31,205.81 Q-4.19,223.19 0.69,231.56 L17.88,235.69 Q22.75,234.44 31.56,232.25 Q41.12,229.75 47.31,228.12 Q39.38,224.38 27.94,216.44 Q18.75,209.62 13.56,199.69 Q8.88,186.62 10.19,175.25 Q14.50,167.19 19.69,165.25 L16.88,157.50 ",to:"M145.00,122.19Q138.56,122.19 121.94,133.12 Q101.81,151.12 81.00,176.50 Q62.94,201.88 55.19,216.50 L59.75,230.50 Q77.69,232.50 98.00,232.25 Q107.38,227.75 107.19,222.81 Q99.44,217.75 93.81,205.94 Q93.25,194.19 102.12,178.69 Q112.62,160.44 126.12,146.75 Q139.19,138.00 146.31,137.31 L149.62,127.62 "}),e("animate",{fill:"freeze",begin:"Sa.begin+1.75s",dur:"0.75s",attributeName:"d",from:"M145.00,122.19Q138.56,122.19 121.94,133.12 Q101.81,151.12 81.00,176.50 Q62.94,201.88 55.19,216.50 L59.75,230.50 Q77.69,232.50 98.00,232.25 Q107.38,227.75 107.19,222.81 Q99.44,217.75 93.81,205.94 Q93.25,194.19 102.12,178.69 Q112.62,160.44 126.12,146.75 Q139.19,138.00 146.31,137.31 L149.62,127.62 ",to:"M148.94,121.88Q142.44,121.88 125.50,132.81 Q104.88,150.94 83.50,176.56 Q64.88,202.25 56.75,217.06 L61.00,231.31 Q79.31,232.81 100.00,232.25 Q109.38,228.00 109.06,223.62 Q101.31,218.50 95.81,206.56 Q95.50,194.62 104.69,178.94 Q115.56,160.50 129.44,146.69 Q142.81,137.94 150.00,137.25 L153.44,127.44 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M148.94,121.88Q142.44,121.88 125.50,132.81 Q104.88,150.94 83.50,176.56 Q64.88,202.25 56.75,217.06 L61.00,231.31 Q79.31,232.81 100.00,232.25 Q109.38,228.00 109.06,223.62 Q101.31,218.50 95.81,206.56 Q95.50,194.62 104.69,178.94 Q115.56,160.50 129.44,146.69 Q142.81,137.94 150.00,137.25 L153.44,127.44 ",to:"M19.94,149.12Q13.44,149.12 4.75,157.62 Q-2.88,170.75 -4.25,191.50 Q-0.25,215.06 5.94,230.19 L21.31,235.38 Q33.31,235.94 46.25,234.06 Q51.12,228.81 49.88,223.94 Q41.81,222.00 30.75,214.75 Q22.31,206.00 18.75,193.38 Q16.00,178.94 19.12,168.38 Q24.75,162.06 30.31,162.06 L28.62,153.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_25a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 ",to:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 ",to:"M199.94,226.56Q197.44,222.06 195.00,214.75 Q194.38,207.38 195.00,203.06 L208.12,199.50 Q210.88,193.75 210.50,185.81 Q206.44,178.69 197.88,176.62 Q188.50,177.50 181.94,182.75 Q178.56,186.50 180.31,190.88 Q181.44,195.69 184.44,199.25 Q187.75,201.75 190.06,202.25 Q189.62,208.44 190.06,217.31 Q191.69,224.38 193.38,227.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z",to:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z",to:"M195.12,177.25Q193.69,178.62 194.25,181.50 Q195.00,184.44 197.38,187.31 Q199.88,190.06 202.81,191.31 Q205.56,192.25 207.31,191.12 Q208.75,189.69 208.31,186.88 Q207.50,183.88 205.12,181.06 Q202.56,178.31 199.75,177.12 Q196.88,176.12 195.12,177.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_27a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 ",to:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 ",to:"M301.25,224.25Q302.81,222.88 304.38,218.62 Q304.75,212.06 304.38,206.94 L293.38,202.88 Q291.00,197.06 291.38,189.12 Q294.69,182.19 301.94,180.44 Q309.75,181.62 315.31,187.12 Q318.06,191.00 316.69,195.31 Q315.69,200.06 313.25,203.56 Q310.44,205.94 308.50,206.31 Q308.50,213.81 308.50,221.38 Q308.50,223.25 308.50,221.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_28a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M261.88,198.19Q261.31,199.31 263.38,196.62 Q267.44,190.75 273.44,181.06 Q279.25,170.50 282.56,163.88 Q279.12,172.25 273.56,183.94 Q268.06,193.00 264.88,197.12 ",to:"M262.88,199.56Q263.00,200.81 263.31,197.44 Q263.69,190.31 263.62,178.94 Q263.00,166.88 262.31,159.50 Q263.81,168.38 265.25,181.31 Q265.38,191.94 264.88,197.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M262.88,199.56Q263.00,200.81 263.31,197.44 Q263.69,190.31 263.62,178.94 Q263.00,166.88 262.31,159.50 Q263.81,168.38 265.25,181.31 Q265.38,191.94 264.88,197.12 ",to:"M260.25,221.75Q259.44,222.69 262.00,220.44 Q267.25,215.56 275.25,207.44 Q283.19,198.44 287.88,192.75 Q282.69,200.12 274.69,210.31 Q267.38,217.94 263.38,221.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_29a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M238.88,198.81Q239.56,199.94 236.81,197.25 Q231.19,191.44 222.94,181.88 Q214.88,171.44 210.38,164.88 Q215.06,173.12 222.75,184.75 Q230.25,193.75 234.75,197.81 ",to:"M244.50,194.94Q244.44,196.25 243.69,192.50 Q242.25,184.50 240.88,171.94 Q240.12,158.75 240.12,150.81 Q239.25,160.31 239.12,174.25 Q240.25,185.94 241.69,191.81 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M244.50,194.94Q244.44,196.25 243.69,192.50 Q242.25,184.50 240.88,171.94 Q240.12,158.75 240.12,150.81 Q239.25,160.31 239.12,174.25 Q240.25,185.94 241.69,191.81 ",to:"M237.19,222.38Q237.88,223.50 235.19,220.81 Q229.56,214.94 221.44,205.19 Q213.56,194.62 209.19,188.00 Q213.75,196.38 221.25,208.06 Q228.62,217.19 233.00,221.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z",to:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z",to:"M300.75,181.12Q302.12,182.00 302.25,184.81 Q302.12,187.81 300.75,191.25 Q299.06,194.56 296.88,196.69 Q294.62,198.44 293.06,197.94 Q291.62,197.00 291.56,194.25 Q291.62,191.25 293.06,187.81 Q294.69,184.44 296.94,182.38 Q299.12,180.56 300.75,181.12 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_31a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M430.75,192.69Q426.81,178.69 420.38,161.69 Q415.62,152.62 410.19,149.62 Q404.75,144.56 396.69,142.44 Q388.25,140.19 375.94,142.06 Q365.88,143.31 346.94,151.38 Q317.75,164.50 290.44,178.12 Q274.75,185.00 268.56,189.44 Q256.50,199.31 249.94,206.38 L287.62,200.25 Q297.44,198.38 314.56,196.44 Q329.31,195.44 343.56,195.94 Q357.38,197.00 368.06,197.81 Q376.06,195.56 384.38,196.19 Q399.19,202.56 409.94,209.38 L432.38,202.81 ",to:"M431.75,194.56Q430.00,180.12 426.25,162.31 Q423.00,152.62 418.06,148.81 Q413.44,142.94 405.81,139.62 Q397.81,136.06 385.38,136.06 Q375.25,135.75 355.31,140.81 Q324.44,149.25 295.31,158.50 Q278.75,162.88 272.00,166.31 Q258.50,174.19 250.94,180.19 L289.12,179.94 Q299.12,179.62 316.38,180.31 Q331.12,181.62 345.06,184.31 Q358.56,187.50 369.00,189.94 Q377.25,188.94 385.38,190.88 Q399.00,199.44 408.56,207.81 L431.75,204.81 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M431.75,194.56Q430.00,180.12 426.25,162.31 Q423.00,152.62 418.06,148.81 Q413.44,142.94 405.81,139.62 Q397.81,136.06 385.38,136.06 Q375.25,135.75 355.31,140.81 Q324.44,149.25 295.31,158.50 Q278.75,162.88 272.00,166.31 Q258.50,174.19 250.94,180.19 L289.12,179.94 Q299.12,179.62 316.38,180.31 Q331.12,181.62 345.06,184.31 Q358.56,187.50 369.00,189.94 Q377.25,188.94 385.38,190.88 Q399.00,199.44 408.56,207.81 L431.75,204.81 ",to:"M432.56,197.38Q434.06,182.88 434.31,164.69 Q433.25,154.56 429.31,149.75 Q426.06,143.00 419.38,138.06 Q412.31,132.81 400.25,130.06 Q390.44,127.56 369.88,128.06 Q337.88,129.50 307.44,132.06 Q290.31,132.69 282.94,134.56 Q268.06,139.31 259.38,143.44 L296.69,151.62 Q306.50,153.50 323.19,158.00 Q337.25,162.56 350.25,168.25 Q362.69,174.31 372.38,179.00 Q380.62,179.88 388.12,183.56 Q399.50,194.94 407.00,205.19 L430.31,207.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#e8e8e8",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M250.88,290.62Q313.88,291.38 360.94,301.69 Q403.38,313.06 406.88,328.44 Q403.44,343.69 361.12,355.12 Q314.19,365.38 251.19,366.19 Q188.06,365.38 141.06,355.12 Q98.62,343.69 95.19,328.44 Q98.50,313.06 140.88,301.69 Q187.81,291.38 250.88,290.62 Z",to:"M250.81,282.00Q328.12,282.94 385.81,295.56 Q437.88,309.56 442.19,328.44 Q438.00,347.19 386.06,361.12 Q328.50,373.69 251.19,374.75 Q173.75,373.69 116.06,361.12 Q64.00,347.19 59.75,328.44 Q63.81,309.56 115.81,295.56 Q173.44,282.94 250.81,282.00 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M250.81,282.00Q328.12,282.94 385.81,295.56 Q437.88,309.56 442.19,328.44 Q438.00,347.19 386.06,361.12 Q328.50,373.69 251.19,374.75 Q173.75,373.69 116.06,361.12 Q64.00,347.19 59.75,328.44 Q63.81,309.56 115.81,295.56 Q173.44,282.94 250.81,282.00 Z",to:"M250.88,292.62Q310.50,293.38 355.00,303.12 Q395.12,313.94 398.44,328.44 Q395.19,342.88 355.12,353.62 Q310.69,363.31 251.12,364.12 Q191.44,363.31 147.00,353.62 Q106.81,342.88 103.56,328.44 Q106.75,313.94 146.81,303.12 Q191.19,293.38 250.88,292.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_33a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z",to:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z",to:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_34a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M296.81,135.81L310.12,135.50 Q301.56,148.31 289.50,170.19 Q280.94,183.06 275.19,206.12 Q268.44,248.25 265.38,281.44 Q266.06,282.88 264.56,285.12 Q261.19,287.19 255.62,287.94 Q249.75,287.88 245.81,286.00 Q243.94,283.44 244.56,281.44 Q245.12,266.94 248.25,243.25 Q248.81,228.81 258.19,206.31 Q278.69,166.44 296.81,135.81 Z",to:"M217.06,146.56L229.94,146.25 Q236.25,158.50 245.38,179.25 Q251.69,191.50 256.56,212.81 Q262.56,251.62 265.81,282.06 Q266.38,283.31 264.75,285.31 Q261.25,287.25 255.62,287.94 Q249.75,287.81 245.94,286.12 Q244.25,283.81 245.00,282.06 Q245.31,268.88 244.44,247.19 Q244.81,234.00 239.69,213.00 Q227.75,175.50 217.06,146.56 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M217.06,146.56L229.94,146.25 Q236.25,158.50 245.38,179.25 Q251.69,191.50 256.56,212.81 Q262.56,251.62 265.81,282.06 Q266.38,283.31 264.75,285.31 Q261.25,287.25 255.62,287.94 Q249.75,287.81 245.94,286.12 Q244.25,283.81 245.00,282.06 Q245.31,268.88 244.44,247.19 Q244.81,234.00 239.69,213.00 Q227.75,175.50 217.06,146.56 Z",to:"M259.88,134.69L272.94,134.31 Q270.62,148.19 267.69,171.31 Q265.44,185.12 264.75,208.19 Q264.62,249.56 265.31,281.81 Q266.00,283.19 264.56,285.25 Q261.19,287.25 255.62,287.94 Q249.75,287.88 245.81,286.12 Q243.88,283.69 244.50,281.81 Q244.44,268.06 245.06,245.12 Q245.00,231.38 247.81,208.38 Q254.19,166.94 259.88,134.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_35a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M300.25,135.94Q300.69,135.94 303.38,136.25 Q307.06,136.00 312.25,137.06 Q316.75,138.44 321.25,142.19 Q325.75,145.75 330.12,152.12 Q334.56,158.31 338.56,168.19 Q342.88,180.62 345.31,192.69 Q346.69,201.75 346.06,206.88 Q345.56,214.56 344.38,215.25 Q343.81,211.38 342.25,201.38 Q339.69,192.88 336.25,184.88 Q333.25,178.19 330.38,172.88 Q327.69,166.56 324.56,161.50 Q321.31,157.69 316.94,154.25 Q310.75,148.38 306.56,144.31 ",to:"M223.25,147.38Q223.38,146.62 224.38,142.00 Q225.50,135.31 227.75,126.44 Q229.88,118.88 233.06,112.06 Q236.19,105.06 240.56,99.19 Q244.88,93.00 250.81,89.00 Q258.00,85.06 264.38,84.44 Q269.06,84.69 271.19,87.44 Q274.56,90.56 274.50,92.88 Q272.56,92.56 267.44,92.44 Q262.69,94.38 257.81,98.19 Q253.69,101.44 250.25,105.06 Q246.44,107.88 243.12,111.88 Q240.25,116.44 237.19,123.25 Q232.44,132.38 229.19,138.69 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M223.25,147.38Q223.38,146.62 224.38,142.00 Q225.50,135.31 227.75,126.44 Q229.88,118.88 233.06,112.06 Q236.19,105.06 240.56,99.19 Q244.88,93.00 250.81,89.00 Q258.00,85.06 264.38,84.44 Q269.06,84.69 271.19,87.44 Q274.56,90.56 274.50,92.88 Q272.56,92.56 267.44,92.44 Q262.69,94.38 257.81,98.19 Q253.69,101.44 250.25,105.06 Q246.44,107.88 243.12,111.88 Q240.25,116.44 237.19,123.25 Q232.44,132.38 229.19,138.69 ",to:"M263.62,137.88Q264.06,137.69 266.88,137.00 Q270.69,135.38 276.31,134.56 Q281.19,134.38 286.62,136.56 Q292.00,138.62 297.94,143.62 Q303.88,148.38 310.06,157.12 Q317.12,168.50 322.19,180.12 Q325.50,189.06 325.88,194.62 Q326.94,202.75 325.88,203.94 Q324.50,200.12 320.81,190.31 Q316.38,182.44 311.12,175.44 Q306.62,169.62 302.50,165.12 Q298.44,159.56 294.19,155.44 Q290.00,152.62 284.69,150.69 Q277.06,146.81 271.88,144.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_36a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M303.75,131.25Q303.94,130.88 302.88,126.56 Q301.25,119.81 297.88,110.50 Q294.69,102.62 289.94,95.25 Q285.19,87.75 278.69,81.12 Q272.19,74.25 263.44,69.12 Q252.62,63.81 243.19,61.94 Q236.12,61.19 233.00,63.50 Q227.88,65.88 228.06,68.19 Q230.94,68.31 238.69,69.19 Q245.75,72.00 253.00,76.69 Q259.12,80.75 264.31,85.00 Q269.88,88.56 274.88,93.19 Q279.12,98.25 283.75,105.50 Q290.81,115.44 295.69,122.31 ",to:"M226.56,148.19Q225.94,147.56 221.38,146.38 Q214.31,144.50 205.44,143.88 Q198.19,143.94 192.88,147.06 Q187.31,150.00 184.31,156.75 Q181.00,163.25 181.69,175.00 Q183.75,190.06 189.12,205.31 Q193.94,217.06 199.38,224.19 Q206.44,234.69 209.19,236.00 Q207.00,230.94 201.81,218.12 Q199.62,207.81 199.62,198.50 Q199.75,190.62 200.88,184.56 Q200.75,177.25 202.38,171.75 Q205.25,167.88 210.62,165.00 Q217.31,159.69 222.00,156.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M226.56,148.19Q225.94,147.56 221.38,146.38 Q214.31,144.50 205.44,143.88 Q198.19,143.94 192.88,147.06 Q187.31,150.00 184.31,156.75 Q181.00,163.25 181.69,175.00 Q183.75,190.06 189.12,205.31 Q193.94,217.06 199.38,224.19 Q206.44,234.69 209.19,236.00 Q207.00,230.94 201.81,218.12 Q199.62,207.81 199.62,198.50 Q199.75,190.62 200.88,184.56 Q200.75,177.25 202.38,171.75 Q205.25,167.88 210.62,165.00 Q217.31,159.69 222.00,156.06 ",to:"M264.56,138.19Q264.62,137.69 262.56,133.44 Q259.31,126.81 253.88,118.06 Q248.94,110.81 242.88,104.75 Q236.81,98.50 229.44,93.94 Q221.94,89.12 213.06,87.19 Q202.44,85.88 193.88,87.75 Q187.69,89.88 185.62,93.69 Q181.94,98.38 182.69,100.81 Q185.19,99.75 192.06,97.56 Q198.88,97.69 206.31,99.81 Q212.56,101.69 218.19,104.19 Q224.00,105.69 229.56,108.62 Q234.56,112.38 240.44,118.44 Q249.19,126.31 255.25,131.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_37a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M301.06,136.56Q301.44,136.31 305.75,137.44 Q312.19,139.00 321.12,142.62 Q328.62,146.00 335.75,151.31 Q342.88,156.56 349.31,164.25 Q356.00,171.81 361.06,182.25 Q366.19,195.06 368.06,206.62 Q368.81,215.19 366.75,219.25 Q364.44,225.62 362.25,225.62 Q361.94,222.00 361.06,212.56 Q358.31,204.12 353.88,195.62 Q349.94,188.38 345.81,182.25 Q342.31,175.44 337.88,169.56 Q333.00,164.69 326.06,159.62 Q316.44,151.56 309.81,146.00 ",to:"M224.19,147.00Q223.94,146.50 224.62,143.25 Q225.56,138.12 228.12,131.81 Q230.56,126.62 234.69,122.94 Q238.75,119.12 244.88,117.19 Q250.94,114.94 259.69,115.69 Q270.38,117.50 280.19,121.69 Q287.50,125.31 291.12,129.31 Q296.75,134.56 296.88,136.62 Q293.81,135.00 285.81,131.06 Q278.62,129.25 271.56,129.00 Q265.56,128.94 260.62,129.56 Q255.00,129.25 250.25,130.25 Q246.38,132.19 242.44,136.00 Q236.06,140.62 231.75,143.81 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M224.19,147.00Q223.94,146.50 224.62,143.25 Q225.56,138.12 228.12,131.81 Q230.56,126.62 234.69,122.94 Q238.75,119.12 244.88,117.19 Q250.94,114.94 259.69,115.69 Q270.38,117.50 280.19,121.69 Q287.50,125.31 291.12,129.31 Q296.75,134.56 296.88,136.62 Q293.81,135.00 285.81,131.06 Q278.62,129.25 271.56,129.00 Q265.56,128.94 260.62,129.56 Q255.00,129.25 250.25,130.25 Q246.38,132.19 242.44,136.00 Q236.06,140.62 231.75,143.81 ",to:"M264.56,138.19Q264.69,137.69 267.44,135.69 Q271.50,132.50 277.56,129.44 Q282.75,127.19 288.38,127.12 Q293.94,126.94 299.88,129.56 Q305.88,131.94 311.88,138.25 Q318.69,146.69 323.31,156.31 Q326.38,163.88 326.44,169.31 Q327.12,177.00 325.88,178.62 Q324.62,175.38 321.25,167.06 Q317.06,161.00 312.00,156.12 Q307.56,152.06 303.44,149.25 Q299.44,145.31 295.19,142.94 Q290.94,141.81 285.50,142.06 Q277.69,141.31 272.31,140.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_38a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M300.25,134.69Q302.06,131.62 303.19,125.31 Q302.81,118.88 300.12,111.94 Q297.81,105.62 293.75,100.56 Q289.69,95.38 283.50,91.88 Q277.38,88.06 268.56,87.12 Q257.50,86.94 247.44,89.50 Q239.88,92.00 236.06,95.75 Q230.06,100.50 229.88,102.69 Q233.00,101.44 241.38,98.69 Q248.69,98.19 256.00,99.44 Q262.00,100.62 267.06,102.44 Q272.75,103.31 277.62,105.50 Q281.50,108.56 285.44,113.62 Q291.62,120.06 295.88,124.56 ",to:"M223.25,147.38Q220.94,143.81 215.62,139.44 Q210.00,136.50 203.62,135.94 Q197.88,135.25 193.00,137.12 Q187.94,138.88 184.06,143.81 Q180.00,148.56 178.06,157.69 Q176.38,169.50 177.25,181.81 Q178.44,191.25 181.12,197.31 Q184.44,206.19 186.31,207.56 Q185.62,203.50 184.38,193.06 Q184.94,184.81 187.00,177.62 Q188.81,171.62 191.00,167.06 Q192.50,161.31 195.06,157.12 Q198.19,154.38 203.12,152.75 Q209.56,149.25 214.00,146.94 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M223.25,147.38Q220.94,143.81 215.62,139.44 Q210.00,136.50 203.62,135.94 Q197.88,135.25 193.00,137.12 Q187.94,138.88 184.06,143.81 Q180.00,148.56 178.06,157.69 Q176.38,169.50 177.25,181.81 Q178.44,191.25 181.12,197.31 Q184.44,206.19 186.31,207.56 Q185.62,203.50 184.38,193.06 Q184.94,184.81 187.00,177.62 Q188.81,171.62 191.00,167.06 Q192.50,161.31 195.06,157.12 Q198.19,154.38 203.12,152.75 Q209.56,149.25 214.00,146.94 ",to:"M263.62,137.88Q264.31,133.75 263.12,126.69 Q260.38,120.25 255.25,114.50 Q250.75,109.19 245.00,106.06 Q239.12,102.75 231.94,102.31 Q224.75,101.62 216.00,105.19 Q205.31,110.62 196.50,118.44 Q190.12,124.94 187.81,130.75 Q183.75,138.69 184.38,141.06 Q186.94,138.19 194.00,131.06 Q200.81,126.75 208.25,124.31 Q214.44,122.44 220.00,121.69 Q225.81,119.69 231.31,119.44 Q236.12,120.56 241.69,123.75 Q250.00,127.19 255.75,129.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_39a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M305.50,136.88Q307.88,133.38 312.75,128.88 Q317.56,125.75 322.56,124.81 Q327.00,123.81 330.44,125.38 Q333.88,126.75 335.94,131.25 Q338.06,135.50 337.94,144.12 Q336.94,155.31 334.00,167.06 Q331.25,176.19 328.06,182.12 Q323.88,190.75 322.25,192.19 Q323.44,188.25 326.38,178.25 Q327.50,170.38 327.38,163.62 Q327.06,158.00 326.25,153.81 Q326.19,148.38 325.12,144.56 Q323.19,142.19 319.81,140.94 Q315.50,137.94 312.62,135.88 ",to:"M226.75,143.38Q224.94,139.50 223.50,133.06 Q223.25,127.25 225.00,122.50 Q226.44,118.12 229.50,116.00 Q232.44,113.69 237.31,114.25 Q242.12,114.50 249.44,119.06 Q258.56,125.56 267.25,134.12 Q273.69,141.06 277.19,146.88 Q282.50,154.88 282.88,157.06 Q280.12,154.00 272.94,146.38 Q266.75,141.38 260.88,138.12 Q255.88,135.50 251.81,134.06 Q247.12,131.38 243.31,130.38 Q240.31,130.75 237.50,133.06 Q232.75,135.19 229.50,136.69 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M226.75,143.38Q224.94,139.50 223.50,133.06 Q223.25,127.25 225.00,122.50 Q226.44,118.12 229.50,116.00 Q232.44,113.69 237.31,114.25 Q242.12,114.50 249.44,119.06 Q258.56,125.56 267.25,134.12 Q273.69,141.06 277.19,146.88 Q282.50,154.88 282.88,157.06 Q280.12,154.00 272.94,146.38 Q266.75,141.38 260.88,138.12 Q255.88,135.50 251.81,134.06 Q247.12,131.38 243.31,130.38 Q240.31,130.75 237.50,133.06 Q232.75,135.19 229.50,136.69 ",to:"M268.88,137.12Q270.06,133.06 273.31,127.31 Q276.94,122.81 281.44,120.38 Q285.38,118.06 289.06,118.50 Q292.81,118.75 296.12,122.38 Q299.50,125.75 302.00,134.00 Q304.50,144.94 305.31,157.06 Q305.50,166.62 304.31,173.25 Q303.00,182.75 301.88,184.56 Q301.81,180.44 301.50,170.00 Q300.12,162.25 297.94,155.88 Q295.94,150.62 293.88,146.81 Q292.12,141.69 289.94,138.38 Q287.38,136.69 283.75,136.56 Q278.75,135.00 275.38,134.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_40a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M301.06,136.56Q303.00,132.88 304.88,126.69 Q305.62,121.12 304.62,116.50 Q303.75,112.19 301.31,110.00 Q298.88,107.62 294.56,107.94 Q290.25,108.06 283.38,112.12 Q274.56,117.94 266.12,125.81 Q259.62,132.31 256.00,137.81 Q250.50,145.31 250.00,147.38 Q252.62,144.50 259.75,137.44 Q265.69,132.94 271.31,130.06 Q275.94,127.69 279.75,126.44 Q284.06,124.06 287.62,123.31 Q290.25,123.75 292.62,126.06 Q296.56,128.38 299.31,130.00 ",to:"M224.19,147.00Q222.00,143.44 217.62,138.69 Q213.19,135.19 208.69,133.75 Q204.56,132.25 201.44,133.25 Q198.19,134.12 196.25,138.06 Q194.12,141.81 194.12,149.81 Q194.69,160.31 197.19,171.62 Q199.50,180.50 202.38,186.44 Q206.06,195.00 207.56,196.50 Q206.44,192.69 203.94,183.00 Q203.06,175.56 203.44,169.31 Q203.75,164.12 204.62,160.25 Q204.81,155.25 205.94,151.81 Q207.69,149.75 210.88,148.94 Q214.88,146.69 217.69,145.19 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M224.19,147.00Q222.00,143.44 217.62,138.69 Q213.19,135.19 208.69,133.75 Q204.56,132.25 201.44,133.25 Q198.19,134.12 196.25,138.06 Q194.12,141.81 194.12,149.81 Q194.69,160.31 197.19,171.62 Q199.50,180.50 202.38,186.44 Q206.06,195.00 207.56,196.50 Q206.44,192.69 203.94,183.00 Q203.06,175.56 203.44,169.31 Q203.75,164.12 204.62,160.25 Q204.81,155.25 205.94,151.81 Q207.69,149.75 210.88,148.94 Q214.88,146.69 217.69,145.19 ",to:"M264.56,138.19Q265.25,134.06 265.19,127.62 Q264.19,122.12 261.75,118.00 Q259.62,114.19 256.62,112.81 Q253.62,111.25 249.56,112.94 Q245.50,114.38 240.19,120.38 Q233.62,128.62 228.00,138.69 Q223.88,146.88 222.12,153.31 Q219.19,162.12 219.31,164.25 Q221.00,160.69 225.56,151.75 Q229.81,145.62 234.25,141.19 Q237.94,137.50 241.19,135.12 Q244.62,131.50 247.75,129.69 Q250.38,129.31 253.31,130.81 Q257.75,131.75 260.88,132.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_41a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M299.56,137.88Q301.56,134.19 305.38,129.12 Q309.00,125.31 312.62,123.44 Q315.81,121.50 318.12,122.06 Q320.44,122.50 321.50,126.06 Q322.62,129.31 321.75,136.94 Q320.06,147.00 316.94,158.06 Q314.19,166.75 311.44,172.75 Q307.69,181.25 306.44,182.88 Q307.62,179.12 310.62,169.62 Q312.06,162.44 312.56,156.50 Q312.81,151.56 312.62,148.06 Q313.00,143.38 312.62,140.31 Q311.50,138.62 309.25,138.25 Q306.50,136.56 304.69,135.44 ",to:"M224.56,148.94Q222.44,145.31 220.00,139.50 Q218.56,134.38 218.75,130.31 Q218.75,126.56 220.44,124.94 Q221.94,123.12 225.50,124.06 Q228.88,124.75 235.00,129.38 Q242.81,135.94 250.75,144.25 Q256.88,151.00 260.69,156.44 Q266.12,163.94 266.81,165.88 Q264.19,162.94 257.50,155.56 Q252.06,150.62 247.25,147.19 Q243.12,144.44 240.00,142.88 Q236.19,140.12 233.31,138.94 Q231.31,139.06 229.81,140.81 Q227.00,142.25 225.06,143.31 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M224.56,148.94Q222.44,145.31 220.00,139.50 Q218.56,134.38 218.75,130.31 Q218.75,126.56 220.44,124.94 Q221.94,123.12 225.50,124.06 Q228.88,124.75 235.00,129.38 Q242.81,135.94 250.75,144.25 Q256.88,151.00 260.69,156.44 Q266.12,163.94 266.81,165.88 Q264.19,162.94 257.50,155.56 Q252.06,150.62 247.25,147.19 Q243.12,144.44 240.00,142.88 Q236.19,140.12 233.31,138.94 Q231.31,139.06 229.81,140.81 Q227.00,142.25 225.06,143.31 ",to:"M263.56,139.88Q264.31,135.75 266.44,129.81 Q268.75,125.06 271.56,122.12 Q274.06,119.31 276.38,119.19 Q278.69,118.88 280.75,121.88 Q282.81,124.62 284.38,132.19 Q285.88,142.25 286.31,153.75 Q286.38,162.88 285.62,169.44 Q284.69,178.69 284.00,180.56 Q284.00,176.62 283.88,166.69 Q283.06,159.38 281.69,153.62 Q280.38,148.88 279.12,145.56 Q278.06,140.94 276.75,138.19 Q275.12,136.94 272.88,137.25 Q269.75,136.50 267.62,136.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_42a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M306.12,120.00Q309.56,116.31 312.75,119.12 Q315.12,125.50 314.31,135.81 Q312.25,143.69 308.00,150.56 Q305.06,157.25 300.69,163.00 Q292.75,171.38 288.19,173.81 Q288.44,171.50 294.00,162.38 Q298.81,153.69 302.44,145.88 Q303.81,140.81 303.12,137.69 Q302.81,133.31 303.12,128.88 Q303.75,123.44 306.12,120.00 Z",to:"M212.50,134.25Q211.12,129.38 215.12,128.06 Q221.81,129.19 230.25,135.19 Q236.00,140.94 239.75,148.12 Q244.06,154.00 246.81,160.75 Q250.00,171.75 249.75,177.00 Q247.88,175.56 242.81,166.19 Q237.81,157.56 232.94,150.50 Q229.31,146.69 226.25,145.75 Q222.31,143.81 218.62,141.31 Q214.25,138.00 212.50,134.25 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M212.50,134.25Q211.12,129.38 215.12,128.06 Q221.81,129.19 230.25,135.19 Q236.00,140.94 239.75,148.12 Q244.06,154.00 246.81,160.75 Q250.00,171.75 249.75,177.00 Q247.88,175.56 242.81,166.19 Q237.81,157.56 232.94,150.50 Q229.31,146.69 226.25,145.75 Q222.31,143.81 218.62,141.31 Q214.25,138.00 212.50,134.25 Z",to:"M279.56,124.75Q279.56,121.00 284.19,122.38 Q290.94,126.75 298.19,135.00 Q302.56,141.62 304.44,148.06 Q307.25,154.06 308.12,159.69 Q308.19,168.19 306.38,171.25 Q304.81,169.38 302.31,160.88 Q299.56,152.88 296.44,145.88 Q293.69,141.56 290.75,139.31 Q287.12,135.94 283.94,132.38 Q280.31,127.94 279.56,124.75 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_43a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M310.25,125.12Q311.06,119.44 306.69,117.25 Q300.38,118.88 292.75,125.88 Q287.31,132.06 283.81,139.31 Q279.75,145.38 277.25,152.12 Q274.12,162.94 274.31,167.88 Q275.25,167.00 280.81,156.81 Q288.50,145.31 296.31,135.31 Q300.88,130.69 303.31,130.19 Q308.06,128.00 310.25,125.12 Z",to:"M219.00,133.25Q214.56,129.62 210.44,132.31 Q208.62,138.56 210.75,148.75 Q213.31,156.50 217.81,163.25 Q221.00,169.75 225.50,175.38 Q233.25,183.56 237.56,185.94 Q237.25,184.69 231.31,174.75 Q225.31,162.25 220.69,150.44 Q219.06,144.12 219.88,141.81 Q220.38,136.56 219.00,133.25 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M219.00,133.25Q214.56,129.62 210.44,132.31 Q208.62,138.56 210.75,148.75 Q213.31,156.50 217.81,163.25 Q221.00,169.75 225.50,175.38 Q233.25,183.56 237.56,185.94 Q237.25,184.69 231.31,174.75 Q225.31,162.25 220.69,150.44 Q219.06,144.12 219.88,141.81 Q220.38,136.56 219.00,133.25 Z",to:"M269.75,124.44Q268.81,118.81 264.00,118.06 Q258.50,121.56 253.38,130.56 Q250.12,138.12 249.00,146.12 Q247.06,153.12 246.75,160.31 Q247.12,171.62 248.81,176.25 Q249.38,175.06 251.56,163.69 Q255.31,150.31 259.69,138.44 Q262.56,132.62 264.75,131.44 Q268.56,127.81 269.75,124.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_44a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 ",to:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 ",to:"M425.25,216.25Q428.56,210.06 431.31,201.44 Q437.31,190.88 429.00,191.44 Q410.06,202.69 377.69,220.88 Q347.06,232.75 321.38,238.31 Q303.62,240.94 289.50,242.19 Q264.44,248.62 247.38,254.12 Q250.19,257.94 257.94,265.44 Q267.06,273.12 277.62,280.19 Q286.06,285.12 293.75,288.81 Q304.00,294.56 310.31,298.19 L312.50,301.75 Q331.31,305.88 359.06,302.44 Q380.94,289.31 394.56,271.81 Q403.50,264.00 407.94,254.94 Q418.19,234.81 425.12,219.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_45a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 ",to:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 ",to:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_46a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"0.25s",attributeName:"d",from:"M15.50,181.00Q12.25,175.25 9.44,166.56 Q3.69,156.94 10.75,154.56 Q27.31,160.38 55.56,168.94 Q81.75,171.06 103.56,167.88 Q118.56,164.31 130.56,160.56 Q151.88,158.56 166.50,158.50 Q164.31,163.69 158.38,174.94 Q151.25,186.94 142.94,198.75 Q136.12,207.31 129.94,214.12 Q121.69,224.25 116.69,230.62 L115.12,235.44 Q99.62,246.94 76.25,253.19 Q57.06,246.50 44.56,231.88 Q36.56,226.44 32.38,217.88 Q22.56,199.19 15.88,184.06 ",to:"M146.25,137.69Q142.38,134.06 138.94,127.94 Q131.94,121.94 140.56,117.81 Q160.81,117.31 195.50,115.38 Q227.75,108.81 254.62,99.38 Q273.12,91.81 287.94,85.06 Q314.19,76.81 332.12,72.19 Q329.44,77.12 322.00,88.06 Q313.12,99.94 302.75,112.06 Q294.31,121.12 286.62,128.62 Q276.38,139.44 270.25,146.19 L268.25,150.50 Q249.12,164.62 220.31,177.00 Q196.81,177.56 181.56,169.69 Q171.75,167.81 166.62,162.25 Q154.69,150.19 146.56,140.00 "}),e("animate",{fill:"freeze",begin:"Sa.begin+1.75s",dur:"0.75s",attributeName:"d",from:"M146.25,137.69Q142.38,134.06 138.94,127.94 Q131.94,121.94 140.56,117.81 Q160.81,117.31 195.50,115.38 Q227.75,108.81 254.62,99.38 Q273.12,91.81 287.94,85.06 Q314.19,76.81 332.12,72.19 Q329.44,77.12 322.00,88.06 Q313.12,99.94 302.75,112.06 Q294.31,121.12 286.62,128.62 Q276.38,139.44 270.25,146.19 L268.25,150.50 Q249.12,164.62 220.31,177.00 Q196.81,177.56 181.56,169.69 Q171.75,167.81 166.62,162.25 Q154.69,150.19 146.56,140.00 ",to:"M150.00,137.25Q146.06,133.62 142.62,127.56 Q135.62,121.62 144.31,117.44 Q164.75,116.75 199.69,114.56 Q232.19,107.81 259.31,98.19 Q278.00,90.50 292.94,83.62 Q319.38,75.19 337.50,70.44 Q334.75,75.38 327.25,86.38 Q318.31,98.31 307.88,110.44 Q299.31,119.56 291.56,127.12 Q281.25,138.00 275.06,144.75 L273.06,149.06 Q253.75,163.38 224.69,175.94 Q200.94,176.62 185.62,168.88 Q175.69,167.12 170.56,161.62 Q158.50,149.69 150.31,139.56 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"1.00s",attributeName:"d",from:"M150.00,137.25Q146.06,133.62 142.62,127.56 Q135.62,121.62 144.31,117.44 Q164.75,116.75 199.69,114.56 Q232.19,107.81 259.31,98.19 Q278.00,90.50 292.94,83.62 Q319.38,75.19 337.50,70.44 Q334.75,75.38 327.25,86.38 Q318.31,98.31 307.88,110.44 Q299.31,119.56 291.56,127.12 Q281.25,138.00 275.06,144.75 L273.06,149.06 Q253.75,163.38 224.69,175.94 Q200.94,176.62 185.62,168.88 Q175.69,167.12 170.56,161.62 Q158.50,149.69 150.31,139.56 ",to:"M32.50,168.38Q27.50,165.38 22.00,159.75 Q13.19,154.88 19.94,149.12 Q39.12,144.88 71.62,136.62 Q100.12,124.12 122.38,109.56 Q137.31,98.44 149.00,88.81 Q171.12,75.62 186.62,67.62 Q185.81,73.12 182.69,85.62 Q178.50,99.38 173.06,113.62 Q168.31,124.44 163.69,133.50 Q157.88,146.38 154.44,154.31 L154.12,159.12 Q140.94,177.06 117.88,194.94 Q95.56,199.81 78.12,194.56 Q68.06,194.44 61.12,189.69 Q45.31,179.56 33.75,170.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_47a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M289.81,75.44Q288.69,76.81 286.62,77.94 Q285.31,78.81 283.69,79.25 Q281.56,79.44 278.88,79.75 Q276.00,80.44 273.44,81.31 Q270.75,81.94 269.50,82.25 Q268.12,82.06 265.75,83.12 Q263.06,85.62 261.31,88.00 L260.56,86.31 Q260.81,86.00 261.25,85.50 Q261.69,84.81 262.00,84.44 Q260.75,85.00 258.75,85.81 Q256.75,86.56 255.56,86.75 Q254.62,86.50 255.44,85.62 Q257.00,84.69 259.12,83.88 Q260.44,83.25 260.94,83.06 Q259.69,82.62 257.94,82.25 Q256.44,82.19 255.56,82.06 Q254.44,81.44 254.69,80.94 Q255.69,80.75 257.75,80.94 Q259.75,81.06 261.00,81.25 Q259.38,80.12 258.06,78.75 Q257.81,77.44 259.06,77.44 Q260.25,78.44 261.88,80.00 Q262.12,80.88 264.25,80.56 Q268.81,80.00 274.50,78.38 Q279.19,76.06 281.31,74.31 Q281.81,73.88 283.56,73.44 Q286.19,72.88 288.56,73.12 Q290.19,73.88 289.81,75.44 Z",to:"M274.44,38.25Q274.69,38.88 274.06,39.81 Q273.81,40.38 272.94,41.06 Q271.62,41.75 269.94,42.69 Q268.44,43.69 267.25,44.75 Q265.81,45.69 265.12,46.19 Q264.06,46.50 263.12,47.56 Q263.06,49.00 263.56,50.12 L261.81,49.94 Q261.75,49.81 261.69,49.56 Q261.50,49.25 261.44,49.06 Q260.94,49.56 260.12,50.44 Q259.25,51.19 258.56,51.62 Q257.75,51.81 257.69,51.38 Q258.12,50.69 259.00,49.88 Q259.50,49.31 259.69,49.12 Q258.56,49.38 257.00,49.88 Q255.94,50.31 255.19,50.56 Q253.94,50.75 253.75,50.56 Q254.31,50.19 255.94,49.62 Q257.44,49.00 258.44,48.69 Q256.50,48.88 254.56,49.00 Q253.44,48.75 254.31,48.38 Q255.88,48.25 258.12,48.12 Q258.88,48.19 260.19,47.44 Q263.06,45.88 265.88,43.75 Q267.44,41.75 267.69,40.69 Q267.69,40.38 268.62,39.75 Q270.06,38.75 271.94,38.12 Q273.62,37.75 274.44,38.25 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M274.44,38.25Q274.69,38.88 274.06,39.81 Q273.81,40.38 272.94,41.06 Q271.62,41.75 269.94,42.69 Q268.44,43.69 267.25,44.75 Q265.81,45.69 265.12,46.19 Q264.06,46.50 263.12,47.56 Q263.06,49.00 263.56,50.12 L261.81,49.94 Q261.75,49.81 261.69,49.56 Q261.50,49.25 261.44,49.06 Q260.94,49.56 260.12,50.44 Q259.25,51.19 258.56,51.62 Q257.75,51.81 257.69,51.38 Q258.12,50.69 259.00,49.88 Q259.50,49.31 259.69,49.12 Q258.56,49.38 257.00,49.88 Q255.94,50.31 255.19,50.56 Q253.94,50.75 253.75,50.56 Q254.31,50.19 255.94,49.62 Q257.44,49.00 258.44,48.69 Q256.50,48.88 254.56,49.00 Q253.44,48.75 254.31,48.38 Q255.88,48.25 258.12,48.12 Q258.88,48.19 260.19,47.44 Q263.06,45.88 265.88,43.75 Q267.44,41.75 267.69,40.69 Q267.69,40.38 268.62,39.75 Q270.06,38.75 271.94,38.12 Q273.62,37.75 274.44,38.25 Z",to:"M272.00,59.69Q271.81,60.25 270.81,60.94 Q270.25,61.38 269.25,61.75 Q267.81,62.00 266.00,62.44 Q264.25,62.94 262.75,63.56 Q261.12,64.06 260.31,64.31 Q259.25,64.38 257.94,65.00 Q257.06,66.19 256.81,67.25 L255.62,66.69 Q255.62,66.56 255.75,66.38 Q255.75,66.06 255.81,65.88 Q255.12,66.19 254.06,66.75 Q252.94,67.19 252.12,67.38 Q251.38,67.38 251.62,67.00 Q252.38,66.50 253.50,66.06 Q254.19,65.69 254.44,65.56 Q253.44,65.50 252.00,65.56 Q250.88,65.69 250.19,65.75 Q249.06,65.62 249.06,65.44 Q249.69,65.25 251.31,65.12 Q252.81,64.94 253.75,64.88 Q252.12,64.62 250.56,64.31 Q249.88,63.88 250.75,63.75 Q252.00,64.00 253.81,64.38 Q254.38,64.56 255.81,64.25 Q258.88,63.56 262.25,62.44 Q264.62,61.06 265.44,60.25 Q265.62,60.00 266.69,59.69 Q268.31,59.19 270.19,59.06 Q271.62,59.12 272.00,59.69 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M272.00,59.69Q271.81,60.25 270.81,60.94 Q270.25,61.38 269.25,61.75 Q267.81,62.00 266.00,62.44 Q264.25,62.94 262.75,63.56 Q261.12,64.06 260.31,64.31 Q259.25,64.38 257.94,65.00 Q257.06,66.19 256.81,67.25 L255.62,66.69 Q255.62,66.56 255.75,66.38 Q255.75,66.06 255.81,65.88 Q255.12,66.19 254.06,66.75 Q252.94,67.19 252.12,67.38 Q251.38,67.38 251.62,67.00 Q252.38,66.50 253.50,66.06 Q254.19,65.69 254.44,65.56 Q253.44,65.50 252.00,65.56 Q250.88,65.69 250.19,65.75 Q249.06,65.62 249.06,65.44 Q249.69,65.25 251.31,65.12 Q252.81,64.94 253.75,64.88 Q252.12,64.62 250.56,64.31 Q249.88,63.88 250.75,63.75 Q252.00,64.00 253.81,64.38 Q254.38,64.56 255.81,64.25 Q258.88,63.56 262.25,62.44 Q264.62,61.06 265.44,60.25 Q265.62,60.00 266.69,59.69 Q268.31,59.19 270.19,59.06 Q271.62,59.12 272.00,59.69 Z",to:"M267.44,133.75Q265.81,134.19 263.50,133.81 Q261.94,133.75 260.38,133.12 Q258.56,132.00 256.31,130.62 Q253.62,129.44 251.06,128.56 Q248.56,127.50 247.44,127.00 Q246.50,126.06 243.94,125.50 Q240.25,125.88 237.44,126.62 L238.00,124.81 Q238.31,124.75 239.00,124.62 Q239.69,124.38 240.19,124.25 Q238.88,123.94 236.81,123.38 Q234.75,122.75 233.75,122.12 Q233.12,121.38 234.31,121.25 Q236.06,121.50 238.19,122.12 Q239.62,122.38 240.19,122.50 Q239.44,121.44 238.31,120.06 Q237.12,119.19 236.50,118.56 Q235.94,117.38 236.50,117.06 Q237.38,117.50 238.94,118.94 Q240.38,120.25 241.25,121.12 Q240.69,119.31 240.50,117.44 Q241.06,116.25 242.00,117.00 Q242.31,118.56 242.69,120.69 Q242.38,121.44 244.31,122.44 Q248.19,124.81 253.62,127.00 Q258.62,128.00 261.38,127.88 Q262.00,127.81 263.75,128.44 Q266.12,129.56 267.81,131.19 Q268.62,132.75 267.44,133.75 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M267.44,133.75Q265.81,134.19 263.50,133.81 Q261.94,133.75 260.38,133.12 Q258.56,132.00 256.31,130.62 Q253.62,129.44 251.06,128.56 Q248.56,127.50 247.44,127.00 Q246.50,126.06 243.94,125.50 Q240.25,125.88 237.44,126.62 L238.00,124.81 Q238.31,124.75 239.00,124.62 Q239.69,124.38 240.19,124.25 Q238.88,123.94 236.81,123.38 Q234.75,122.75 233.75,122.12 Q233.12,121.38 234.31,121.25 Q236.06,121.50 238.19,122.12 Q239.62,122.38 240.19,122.50 Q239.44,121.44 238.31,120.06 Q237.12,119.19 236.50,118.56 Q235.94,117.38 236.50,117.06 Q237.38,117.50 238.94,118.94 Q240.38,120.25 241.25,121.12 Q240.69,119.31 240.50,117.44 Q241.06,116.25 242.00,117.00 Q242.31,118.56 242.69,120.69 Q242.38,121.44 244.31,122.44 Q248.19,124.81 253.62,127.00 Q258.62,128.00 261.38,127.88 Q262.00,127.81 263.75,128.44 Q266.12,129.56 267.81,131.19 Q268.62,132.75 267.44,133.75 Z",to:"M268.44,135.44Q266.75,135.88 264.44,135.50 Q262.88,135.44 261.31,134.75 Q259.50,133.62 257.19,132.25 Q254.44,131.06 251.88,130.12 Q249.38,129.00 248.25,128.50 Q247.25,127.56 244.69,126.94 Q240.94,127.25 238.12,128.06 L238.69,126.25 Q239.00,126.19 239.69,126.06 Q240.44,125.81 240.94,125.69 Q239.56,125.38 237.50,124.75 Q235.44,124.06 234.44,123.50 Q233.81,122.75 235.00,122.62 Q236.75,122.88 238.94,123.50 Q240.38,123.75 240.94,123.88 Q240.19,122.81 239.06,121.44 Q237.88,120.50 237.25,119.88 Q236.69,118.69 237.25,118.38 Q238.12,118.81 239.69,120.25 Q241.12,121.56 242.06,122.50 Q241.44,120.62 241.31,118.75 Q241.88,117.56 242.88,118.31 Q243.12,119.88 243.50,122.06 Q243.19,122.81 245.12,123.88 Q249.00,126.25 254.50,128.50 Q259.56,129.50 262.38,129.44 Q263.00,129.38 264.75,130.06 Q267.12,131.19 268.88,132.88 Q269.62,134.50 268.44,135.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_48a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M289.88,104.56L282.75,121.62 L279.38,121.62 L277.19,121.06 L276.81,121.12 Q276.81,120.62 276.50,119.88 Q275.81,119.19 274.94,118.69 Q274.12,118.25 273.81,118.19 Q273.44,118.25 273.12,118.69 Q272.94,119.44 273.00,120.06 L274.56,121.12 L273.25,121.75 L273.00,122.81 Q273.75,123.25 274.94,124.31 Q275.81,125.56 276.25,126.50 Q277.19,126.12 278.56,125.88 Q279.69,125.81 280.31,125.94 Q281.19,125.56 282.94,125.50 Q284.94,125.88 286.38,126.38 Q286.88,125.81 287.19,124.50 Q286.75,122.62 286.19,121.25 L287.88,117.38 L295.19,105.00 ",to:"M302.44,49.44L317.81,39.25 L320.69,41.06 L322.19,42.75 L322.50,43.00 Q322.19,43.31 322.12,44.19 Q322.31,45.12 322.75,46.06 Q323.12,46.75 323.38,47.06 Q323.62,47.19 324.19,47.06 Q324.69,46.50 325.06,46.00 L324.38,44.19 L325.81,44.44 L326.62,43.69 Q326.19,42.81 325.81,41.31 Q325.75,39.75 326.00,38.81 Q325.06,38.50 323.75,38.00 Q322.69,37.38 322.25,37.00 Q321.31,36.75 319.81,35.88 Q318.31,34.38 317.44,33.25 Q316.69,33.38 315.75,34.38 Q315.00,36.12 314.75,37.69 L311.25,39.94 L298.25,46.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M302.44,49.44L317.81,39.25 L320.69,41.06 L322.19,42.75 L322.50,43.00 Q322.19,43.31 322.12,44.19 Q322.31,45.12 322.75,46.06 Q323.12,46.75 323.38,47.06 Q323.62,47.19 324.19,47.06 Q324.69,46.50 325.06,46.00 L324.38,44.19 L325.81,44.44 L326.62,43.69 Q326.19,42.81 325.81,41.31 Q325.75,39.75 326.00,38.81 Q325.06,38.50 323.75,38.00 Q322.69,37.38 322.25,37.00 Q321.31,36.75 319.81,35.88 Q318.31,34.38 317.44,33.25 Q316.69,33.38 315.75,34.38 Q315.00,36.12 314.75,37.69 L311.25,39.94 L298.25,46.12 ",to:"M296.75,72.75L312.69,65.62 L315.06,67.81 L316.19,69.62 L316.44,69.88 Q316.06,70.12 315.88,70.94 Q315.88,71.81 316.19,72.75 Q316.44,73.50 316.62,73.81 Q316.88,73.94 317.38,73.94 Q317.94,73.50 318.38,73.06 L318.00,71.31 L319.31,71.69 L320.19,71.19 Q319.88,70.25 319.81,68.81 Q320.00,67.31 320.38,66.50 Q319.50,66.06 318.38,65.38 Q317.50,64.62 317.12,64.25 Q316.31,63.88 315.06,62.81 Q313.88,61.19 313.25,60.00 Q312.50,60.00 311.50,60.81 Q310.56,62.31 310.06,63.69 L306.44,65.25 L293.38,69.00 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M296.75,72.75L312.69,65.62 L315.06,67.81 L316.19,69.62 L316.44,69.88 Q316.06,70.12 315.88,70.94 Q315.88,71.81 316.19,72.75 Q316.44,73.50 316.62,73.81 Q316.88,73.94 317.38,73.94 Q317.94,73.50 318.38,73.06 L318.00,71.31 L319.31,71.69 L320.19,71.19 Q319.88,70.25 319.81,68.81 Q320.00,67.31 320.38,66.50 Q319.50,66.06 318.38,65.38 Q317.50,64.62 317.12,64.25 Q316.31,63.88 315.06,62.81 Q313.88,61.19 313.25,60.00 Q312.50,60.00 311.50,60.81 Q310.56,62.31 310.06,63.69 L306.44,65.25 L293.38,69.00 ",to:"M281.38,153.25L299.38,156.56 L300.12,159.94 L300.06,162.12 L300.19,162.50 Q299.69,162.56 299.00,163.06 Q298.44,163.81 298.12,164.75 Q297.88,165.56 297.94,166.00 Q298.06,166.25 298.56,166.56 Q299.25,166.56 299.88,166.44 L300.62,164.69 L301.50,165.75 L302.56,165.88 Q302.81,164.94 303.62,163.62 Q304.69,162.50 305.50,161.94 Q304.94,161.00 304.38,159.75 Q304.06,158.62 304.06,158.06 Q303.50,157.25 303.06,155.62 Q303.00,153.50 303.25,152.06 Q302.62,151.69 301.31,151.75 Q299.56,152.50 298.38,153.38 L294.25,152.50 L280.69,147.94 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M281.38,153.25L299.38,156.56 L300.12,159.94 L300.06,162.12 L300.19,162.50 Q299.69,162.56 299.00,163.06 Q298.44,163.81 298.12,164.75 Q297.88,165.56 297.94,166.00 Q298.06,166.25 298.56,166.56 Q299.25,166.56 299.88,166.44 L300.62,164.69 L301.50,165.75 L302.56,165.88 Q302.81,164.94 303.62,163.62 Q304.69,162.50 305.50,161.94 Q304.94,161.00 304.38,159.75 Q304.06,158.62 304.06,158.06 Q303.50,157.25 303.06,155.62 Q303.00,153.50 303.25,152.06 Q302.62,151.69 301.31,151.75 Q299.56,152.50 298.38,153.38 L294.25,152.50 L280.69,147.94 ",to:"M282.25,155.12L300.38,158.62 L301.12,162.00 L301.00,164.25 L301.12,164.62 Q300.62,164.62 299.94,165.12 Q299.38,165.88 299.06,166.88 Q298.81,167.69 298.88,168.12 Q299.00,168.38 299.50,168.69 Q300.19,168.69 300.81,168.56 L301.56,166.81 L302.44,167.88 L303.50,168.00 Q303.81,167.06 304.62,165.75 Q305.69,164.62 306.50,164.06 Q305.94,163.12 305.38,161.88 Q305.06,160.75 305.06,160.19 Q304.56,159.38 304.12,157.69 Q304.06,155.56 304.31,154.12 Q303.69,153.69 302.38,153.75 Q300.62,154.50 299.38,155.38 L295.25,154.50 L281.62,149.75 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_49a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M301.44,109.56L306.69,127.31 L304.00,129.44 L301.94,130.44 L301.69,130.69 Q301.38,130.25 300.69,129.94 Q299.69,129.81 298.75,130.00 Q297.88,130.12 297.56,130.31 Q297.31,130.50 297.31,131.06 Q297.62,131.75 298.06,132.25 L299.94,132.06 L299.38,133.44 L299.81,134.44 Q300.69,134.25 302.25,134.31 Q303.69,134.69 304.62,135.19 Q305.12,134.38 306.06,133.31 Q306.88,132.50 307.44,132.25 Q307.94,131.38 309.25,130.19 Q311.06,129.12 312.44,128.69 Q312.50,127.94 311.88,126.75 Q310.38,125.56 309.06,124.88 L307.88,120.75 L305.81,106.56 ",to:"M304.50,49.38L317.31,36.00 L320.50,37.31 L322.38,38.62 L322.69,38.69 Q322.44,39.06 322.56,39.94 Q322.94,40.75 323.62,41.56 Q324.12,42.19 324.44,42.44 Q324.69,42.44 325.19,42.25 Q325.62,41.62 325.88,41.06 L324.81,39.50 L326.25,39.31 L326.94,38.44 Q326.31,37.69 325.62,36.38 Q325.19,34.88 325.19,33.94 Q324.19,33.81 322.88,33.56 Q321.75,33.12 321.25,32.88 Q320.25,32.88 318.56,32.38 Q316.75,31.25 315.69,30.31 Q315.00,30.56 314.31,31.75 Q313.94,33.56 314.00,35.12 L311.06,38.25 L299.81,47.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M304.50,49.38L317.31,36.00 L320.50,37.31 L322.38,38.62 L322.69,38.69 Q322.44,39.06 322.56,39.94 Q322.94,40.75 323.62,41.56 Q324.12,42.19 324.44,42.44 Q324.69,42.44 325.19,42.25 Q325.62,41.62 325.88,41.06 L324.81,39.50 L326.25,39.31 L326.94,38.44 Q326.31,37.69 325.62,36.38 Q325.19,34.88 325.19,33.94 Q324.19,33.81 322.88,33.56 Q321.75,33.12 321.25,32.88 Q320.25,32.88 318.56,32.38 Q316.75,31.25 315.69,30.31 Q315.00,30.56 314.31,31.75 Q313.94,33.56 314.00,35.12 L311.06,38.25 L299.81,47.06 ",to:"M299.06,74.06L312.94,64.62 L315.56,66.44 L316.94,67.94 L317.25,68.06 Q316.94,68.38 316.88,69.12 Q317.06,69.94 317.50,70.81 Q317.81,71.44 318.06,71.75 Q318.25,71.81 318.75,71.69 Q319.19,71.19 319.56,70.81 L318.94,69.19 L320.25,69.31 L321.00,68.62 Q320.56,67.88 320.25,66.56 Q320.19,65.12 320.38,64.31 Q319.50,64.00 318.38,63.56 Q317.44,63.00 317.06,62.62 Q316.12,62.44 314.75,61.69 Q313.38,60.38 312.62,59.31 Q311.94,59.44 311.12,60.31 Q310.44,61.88 310.19,63.25 L307.00,65.44 L295.31,71.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M299.06,74.06L312.94,64.62 L315.56,66.44 L316.94,67.94 L317.25,68.06 Q316.94,68.38 316.88,69.12 Q317.06,69.94 317.50,70.81 Q317.81,71.44 318.06,71.75 Q318.25,71.81 318.75,71.69 Q319.19,71.19 319.56,70.81 L318.94,69.19 L320.25,69.31 L321.00,68.62 Q320.56,67.88 320.25,66.56 Q320.19,65.12 320.38,64.31 Q319.50,64.00 318.38,63.56 Q317.44,63.00 317.06,62.62 Q316.12,62.44 314.75,61.69 Q313.38,60.38 312.62,59.31 Q311.94,59.44 311.12,60.31 Q310.44,61.88 310.19,63.25 L307.00,65.44 L295.31,71.12 ",to:"M284.50,159.25L302.44,163.25 L303.00,166.69 L302.81,168.88 L302.94,169.25 Q302.44,169.25 301.75,169.75 Q301.25,170.50 301.00,171.50 Q300.69,172.31 300.62,172.69 Q300.69,172.94 301.19,173.19 Q301.94,173.19 302.56,173.12 L303.25,171.44 L304.19,172.56 L305.25,172.62 Q305.56,171.75 306.38,170.50 Q307.44,169.38 308.25,168.88 Q307.81,168.06 307.31,166.81 Q307.06,165.62 307.06,165.06 Q306.50,164.12 306.06,162.44 Q306.12,160.38 306.44,159.00 Q305.81,158.56 304.50,158.56 Q302.69,159.25 301.44,160.06 L297.25,159.06 L284.00,154.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M284.50,159.25L302.44,163.25 L303.00,166.69 L302.81,168.88 L302.94,169.25 Q302.44,169.25 301.75,169.75 Q301.25,170.50 301.00,171.50 Q300.69,172.31 300.62,172.69 Q300.69,172.94 301.19,173.19 Q301.94,173.19 302.56,173.12 L303.25,171.44 L304.19,172.56 L305.25,172.62 Q305.56,171.75 306.38,170.50 Q307.44,169.38 308.25,168.88 Q307.81,168.06 307.31,166.81 Q307.06,165.62 307.06,165.06 Q306.50,164.12 306.06,162.44 Q306.12,160.38 306.44,159.00 Q305.81,158.56 304.50,158.56 Q302.69,159.25 301.44,160.06 L297.25,159.06 L284.00,154.12 ",to:"M285.44,161.25L303.50,165.44 L304.00,168.94 L303.81,171.12 L303.94,171.50 Q303.44,171.50 302.75,172.00 Q302.19,172.75 301.94,173.75 Q301.62,174.56 301.56,174.94 Q301.62,175.19 302.12,175.44 Q302.88,175.50 303.50,175.44 L304.25,173.75 L305.19,174.88 L306.25,174.94 Q306.56,174.06 307.38,172.81 Q308.44,171.69 309.31,171.19 Q308.88,170.31 308.38,169.06 Q308.12,167.88 308.12,167.31 Q307.56,166.44 307.19,164.69 Q307.25,162.56 307.56,161.19 Q306.94,160.75 305.62,160.75 Q303.81,161.38 302.50,162.19 L298.31,161.19 L285.00,156.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M279.00,59.38Q279.75,61.06 280.62,63.31 Q280.69,64.12 280.81,65.12 Q281.69,67.62 282.62,69.75 L282.69,72.00 L287.88,80.25 ",to:"M255.19,37.75Q257.00,38.12 259.31,38.75 Q260.00,39.19 260.88,39.69 Q263.44,40.38 265.69,40.94 L267.56,42.19 L277.25,42.88 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M255.19,37.75Q257.00,38.12 259.31,38.75 Q260.00,39.19 260.88,39.69 Q263.44,40.38 265.69,40.94 L267.56,42.19 L277.25,42.88 ",to:"M253.81,55.94Q255.44,56.56 257.50,57.50 Q258.06,58.00 258.88,58.62 Q261.19,59.69 263.19,60.50 L264.81,61.94 L273.81,64.00 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.81,55.94Q255.44,56.56 257.50,57.50 Q258.06,58.00 258.88,58.62 Q261.19,59.69 263.19,60.50 L264.81,61.94 L273.81,64.00 ",to:"M252.50,118.88Q253.69,120.31 255.00,122.25 Q255.19,123.00 255.50,124.00 Q256.94,126.25 258.31,128.06 L259.00,130.12 L265.81,137.00 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M252.50,118.88Q253.69,120.31 255.00,122.25 Q255.19,123.00 255.50,124.00 Q256.94,126.25 258.31,128.06 L259.00,130.12 L265.81,137.00 ",to:"M253.50,120.31Q254.69,121.81 256.00,123.75 Q256.19,124.50 256.50,125.50 Q257.94,127.75 259.31,129.62 L259.94,131.75 L266.75,138.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_51a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M287.12,75.56Q285.94,81.25 285.19,89.00 Q285.00,94.06 286.88,96.94 Q289.50,100.31 292.94,101.62 Q295.00,102.12 297.81,100.94 Q302.88,100.62 306.44,98.69 Q307.06,95.69 305.12,91.31 Q304.69,87.94 303.44,83.38 Q301.12,76.50 298.88,71.06 Q297.81,68.69 297.00,68.75 Q294.75,67.00 293.00,65.94 ",to:"M273.06,40.75Q276.94,45.00 282.75,50.19 Q286.69,53.25 290.12,53.50 Q294.44,53.38 297.50,51.38 Q299.12,49.94 299.81,47.06 Q302.56,42.75 303.12,38.75 Q301.06,36.50 296.38,35.50 Q293.38,33.81 288.94,32.12 Q282.06,29.88 276.31,28.56 Q273.81,28.00 273.38,28.75 Q270.69,29.50 268.75,30.31 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M273.06,40.75Q276.94,45.00 282.75,50.19 Q286.69,53.25 290.12,53.50 Q294.44,53.38 297.50,51.38 Q299.12,49.94 299.81,47.06 Q302.56,42.75 303.12,38.75 Q301.06,36.50 296.38,35.50 Q293.38,33.81 288.94,32.12 Q282.06,29.88 276.31,28.56 Q273.81,28.00 273.38,28.75 Q270.69,29.50 268.75,30.31 ",to:"M270.19,61.38Q273.19,66.00 277.88,71.69 Q281.12,75.12 284.38,75.88 Q288.44,76.38 291.62,75.00 Q293.38,73.88 294.44,71.25 Q297.62,67.62 298.75,63.94 Q297.12,61.50 292.88,59.88 Q290.31,57.88 286.38,55.62 Q280.19,52.50 275.00,50.44 Q272.75,49.50 272.25,50.12 Q269.56,50.44 267.62,50.94 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M270.19,61.38Q273.19,66.00 277.88,71.69 Q281.12,75.12 284.38,75.88 Q288.44,76.38 291.62,75.00 Q293.38,73.88 294.44,71.25 Q297.62,67.62 298.75,63.94 Q297.12,61.50 292.88,59.88 Q290.31,57.88 286.38,55.62 Q280.19,52.50 275.00,50.44 Q272.75,49.50 272.25,50.12 Q269.56,50.44 267.62,50.94 ",to:"M264.00,132.69Q264.12,138.44 265.19,146.06 Q266.19,150.94 268.62,153.31 Q271.88,156.06 275.50,156.56 Q277.56,156.56 280.00,154.75 Q284.88,153.31 287.94,150.69 Q287.88,147.69 285.00,143.88 Q283.81,140.69 281.56,136.50 Q277.81,130.31 274.38,125.62 Q272.81,123.62 272.00,123.88 Q269.44,122.69 267.56,122.00 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M264.00,132.69Q264.12,138.44 265.19,146.06 Q266.19,150.94 268.62,153.31 Q271.88,156.06 275.50,156.56 Q277.56,156.56 280.00,154.75 Q284.88,153.31 287.94,150.69 Q287.88,147.69 285.00,143.88 Q283.81,140.69 281.56,136.50 Q277.81,130.31 274.38,125.62 Q272.81,123.62 272.00,123.88 Q269.44,122.69 267.56,122.00 ",to:"M265.00,134.31Q265.06,140.12 266.06,147.81 Q267.00,152.69 269.44,155.12 Q272.75,157.88 276.38,158.44 Q278.50,158.44 280.94,156.69 Q285.88,155.25 288.94,152.62 Q288.88,149.56 286.00,145.75 Q284.81,142.50 282.62,138.31 Q278.94,132.06 275.50,127.31 Q273.94,125.25 273.12,125.50 Q270.56,124.31 268.62,123.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M280.94,57.00Q280.25,57.44 279.00,59.38 Q277.19,61.25 276.38,65.25 Q276.94,71.38 278.25,76.12 ",to:"M254.38,34.75Q254.38,35.50 255.19,37.75 Q255.62,40.25 258.38,43.31 Q263.69,46.44 268.25,48.25 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M254.38,34.75Q254.38,35.50 255.19,37.75 Q255.62,40.25 258.38,43.31 Q263.69,46.44 268.25,48.25 ",to:"M253.44,53.00Q253.31,53.75 253.81,55.94 Q253.88,58.38 256.00,61.62 Q260.50,65.38 264.56,67.75 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.44,53.00Q253.31,53.75 253.81,55.94 Q253.88,58.38 256.00,61.62 Q260.50,65.38 264.56,67.75 ",to:"M253.81,116.06Q253.25,116.69 252.50,118.88 Q251.19,121.00 251.31,125.06 Q253.25,130.88 255.56,135.19 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M253.81,116.06Q253.25,116.69 252.50,118.88 Q251.19,121.00 251.31,125.06 Q253.25,130.88 255.56,135.19 ",to:"M254.88,117.50Q254.31,118.12 253.50,120.31 Q252.12,122.50 252.25,126.56 Q254.19,132.44 256.44,136.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M279.31,62.62L279.94,63.56 L280.75,71.75 Q281.38,73.38 282.25,76.06 Q282.81,78.56 283.06,80.00 ",to:"M258.00,39.44L259.12,39.44 L266.19,43.62 Q267.88,44.06 270.56,44.94 Q272.94,45.94 274.25,46.62 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M258.00,39.44L259.12,39.44 L266.19,43.62 Q267.88,44.06 270.56,44.94 Q272.94,45.94 274.25,46.62 ",to:"M256.19,57.94L257.25,58.12 L263.25,63.06 Q264.81,63.69 267.19,64.94 Q269.25,66.19 270.44,67.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M256.19,57.94L257.25,58.12 L263.25,63.06 Q264.81,63.69 267.19,64.94 Q269.25,66.19 270.44,67.06 ",to:"M253.50,121.88L254.38,122.62 L257.00,130.38 Q258.00,131.81 259.44,134.19 Q260.50,136.44 261.06,137.81 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M253.50,121.88L254.38,122.62 L257.00,130.38 Q258.00,131.81 259.44,134.19 Q260.50,136.44 261.06,137.81 ",to:"M254.50,123.38L255.38,124.12 L257.94,131.94 Q258.94,133.38 260.38,135.81 Q261.44,138.12 262.00,139.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M279.00,59.38L278.94,65.69 281.44,79.50 ",to:"M255.19,37.75L260.25,41.50 272.88,47.62 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M255.19,37.75L260.25,41.50 272.88,47.62 ",to:"M253.81,55.94L258.00,60.19 269.00,67.81 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.81,55.94L258.00,60.19 269.00,67.81 ",to:"M252.50,118.88L253.94,124.94 259.44,137.75 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M252.50,118.88L253.94,124.94 259.44,137.75 ",to:"M253.50,120.31L254.88,126.44 260.31,139.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_55a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M288.75,73.00Q289.75,72.88 289.38,72.38 Q289.56,72.12 289.94,71.81 Q290.31,71.44 291.25,70.75 Q292.75,69.75 293.94,68.56 Q294.19,67.50 293.88,66.56 Q293.88,65.81 294.00,64.62 Q294.44,62.88 294.06,60.56 Q293.06,57.81 290.56,56.12 Q287.69,54.62 284.25,56.00 Q280.25,58.62 278.31,62.81 Q278.38,66.69 280.00,68.88 Q278.88,69.44 277.19,70.81 Q275.38,72.25 274.56,74.06 Q274.44,76.19 275.69,77.38 Q276.69,77.88 278.25,76.88 Q280.00,75.69 281.38,74.06 Q282.25,72.44 282.44,71.62 Q285.50,72.38 288.75,73.00 Z",to:"M271.94,37.88Q272.50,36.94 271.81,37.00 Q271.75,36.69 271.69,36.25 Q271.62,35.69 271.56,34.56 Q271.62,32.75 271.38,31.12 Q270.69,30.25 269.75,29.94 Q269.19,29.50 268.25,28.75 Q267.12,27.31 265.00,26.25 Q262.25,25.44 259.38,26.50 Q256.50,27.88 255.56,31.50 Q255.31,36.25 257.56,40.31 Q260.75,42.50 263.44,42.56 Q263.19,43.69 263.31,45.94 Q263.44,48.25 264.44,50.00 Q266.06,51.31 267.75,51.06 Q268.75,50.50 268.88,48.69 Q268.94,46.56 268.44,44.50 Q267.69,42.81 267.06,42.19 Q269.50,40.12 271.94,37.88 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M271.94,37.88Q272.50,36.94 271.81,37.00 Q271.75,36.69 271.69,36.25 Q271.62,35.69 271.56,34.56 Q271.62,32.75 271.38,31.12 Q270.69,30.25 269.75,29.94 Q269.19,29.50 268.25,28.75 Q267.12,27.31 265.00,26.25 Q262.25,25.44 259.38,26.50 Q256.50,27.88 255.56,31.50 Q255.31,36.25 257.56,40.31 Q260.75,42.50 263.44,42.56 Q263.19,43.69 263.31,45.94 Q263.44,48.25 264.44,50.00 Q266.06,51.31 267.75,51.06 Q268.75,50.50 268.88,48.69 Q268.94,46.56 268.44,44.50 Q267.69,42.81 267.06,42.19 Q269.50,40.12 271.94,37.88 Z",to:"M269.56,58.50Q270.19,57.75 269.56,57.69 Q269.50,57.38 269.56,56.94 Q269.56,56.44 269.69,55.38 Q270.00,53.69 270.00,52.06 Q269.50,51.12 268.62,50.75 Q268.19,50.25 267.44,49.38 Q266.56,47.81 264.69,46.56 Q262.19,45.38 259.38,46.00 Q256.44,46.88 255.06,50.12 Q254.12,54.50 255.62,58.69 Q258.31,61.25 260.88,61.69 Q260.50,62.75 260.25,64.88 Q260.00,67.00 260.69,68.81 Q262.00,70.31 263.62,70.31 Q264.69,69.94 265.06,68.25 Q265.44,66.25 265.25,64.25 Q264.75,62.56 264.31,61.88 Q266.94,60.25 269.56,58.50 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M269.56,58.50Q270.19,57.75 269.56,57.69 Q269.50,57.38 269.56,56.94 Q269.56,56.44 269.69,55.38 Q270.00,53.69 270.00,52.06 Q269.50,51.12 268.62,50.75 Q268.19,50.25 267.44,49.38 Q266.56,47.81 264.69,46.56 Q262.19,45.38 259.38,46.00 Q256.44,46.88 255.06,50.12 Q254.12,54.50 255.62,58.69 Q258.31,61.25 260.88,61.69 Q260.50,62.75 260.25,64.88 Q260.00,67.00 260.69,68.81 Q262.00,70.31 263.62,70.31 Q264.69,69.94 265.06,68.25 Q265.44,66.25 265.25,64.25 Q264.75,62.56 264.31,61.88 Q266.94,60.25 269.56,58.50 Z",to:"M265.06,129.81Q266.00,129.50 265.50,129.06 Q265.62,128.75 265.94,128.38 Q266.19,127.94 266.88,127.06 Q268.06,125.75 269.00,124.31 Q269.06,123.19 268.56,122.38 Q268.38,121.69 268.19,120.50 Q268.25,118.69 267.38,116.56 Q265.81,114.12 262.94,113.06 Q259.88,112.25 256.88,114.31 Q253.56,117.75 252.62,122.25 Q253.56,125.94 255.62,127.75 Q254.69,128.50 253.31,130.25 Q251.88,132.06 251.56,134.00 Q251.88,136.06 253.31,136.94 Q254.44,137.19 255.75,135.88 Q257.12,134.31 258.12,132.44 Q258.62,130.69 258.62,129.88 Q261.75,129.94 265.06,129.81 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M265.06,129.81Q266.00,129.50 265.50,129.06 Q265.62,128.75 265.94,128.38 Q266.19,127.94 266.88,127.06 Q268.06,125.75 269.00,124.31 Q269.06,123.19 268.56,122.38 Q268.38,121.69 268.19,120.50 Q268.25,118.69 267.38,116.56 Q265.81,114.12 262.94,113.06 Q259.88,112.25 256.88,114.31 Q253.56,117.75 252.62,122.25 Q253.56,125.94 255.62,127.75 Q254.69,128.50 253.31,130.25 Q251.88,132.06 251.56,134.00 Q251.88,136.06 253.31,136.94 Q254.44,137.19 255.75,135.88 Q257.12,134.31 258.12,132.44 Q258.62,130.69 258.62,129.88 Q261.75,129.94 265.06,129.81 Z",to:"M266.06,131.44Q267.00,131.12 266.50,130.69 Q266.62,130.38 266.94,130.00 Q267.19,129.56 267.94,128.69 Q269.12,127.38 270.06,125.94 Q270.12,124.81 269.62,124.00 Q269.50,123.31 269.31,122.12 Q269.38,120.31 268.50,118.12 Q266.94,115.69 264.06,114.56 Q260.94,113.75 257.94,115.81 Q254.62,119.19 253.62,123.75 Q254.50,127.50 256.56,129.31 Q255.62,130.06 254.25,131.81 Q252.81,133.62 252.44,135.56 Q252.75,137.62 254.19,138.56 Q255.31,138.81 256.62,137.50 Q258.06,135.94 259.06,134.06 Q259.56,132.31 259.56,131.44 Q262.75,131.50 266.06,131.44 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_56a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M306.56,95.75L286.88,96.94 289.75,111.75 295.31,111.12 296.00,112.44 298.38,111.75 314.94,105.94 ",to:"M300.81,36.94L290.12,53.50 309.00,49.31 309.00,49.31 309.00,49.31 310.50,45.88 314.00,36.19 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M300.81,36.94L290.12,53.50 309.00,49.31 309.00,49.31 309.00,49.31 310.50,45.88 314.00,36.19 ",to:"M296.81,61.88L284.38,75.88 302.75,75.75 303.19,74.94 303.19,74.94 305.00,71.31 308.44,62.38 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M296.81,61.88L284.38,75.88 302.75,75.75 303.19,74.94 303.19,74.94 305.00,71.31 308.44,62.38 ",to:"M287.38,147.81L268.62,153.31 285.69,167.06 287.62,163.38 287.62,163.38 290.38,158.94 293.75,152.69 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M287.38,147.81L268.62,153.31 285.69,167.06 287.62,163.38 287.62,163.38 290.38,158.94 293.75,152.69 ",to:"M288.38,149.75L269.44,155.12 286.56,169.19 288.56,165.44 288.56,165.44 291.31,160.94 294.69,154.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp4_57a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M297.62,71.88Q299.19,72.50 301.50,72.50 Q303.00,72.62 304.56,72.31 Q306.19,71.62 308.38,70.75 Q310.94,70.19 313.50,69.81 Q315.88,69.25 317.06,68.94 Q317.88,68.31 320.38,68.19 Q323.94,69.06 326.69,70.12 L326.19,68.44 Q325.81,68.38 325.19,68.19 Q324.44,67.88 324.00,67.62 Q325.25,67.56 327.31,67.38 Q329.25,67.19 330.25,66.81 Q330.75,66.19 329.62,65.81 Q327.88,65.75 325.88,66.00 Q324.44,66.00 323.94,66.06 Q324.62,65.25 325.75,64.25 Q326.75,63.62 327.38,63.19 Q327.81,62.25 327.38,61.94 Q326.56,62.12 325.19,63.12 Q323.69,64.00 322.81,64.69 Q323.38,63.19 323.62,61.56 Q322.94,60.50 322.00,61.00 Q321.69,62.25 321.44,64.06 Q321.75,64.81 319.94,65.50 Q316.12,66.94 310.88,67.94 Q305.94,68.00 303.31,67.56 Q302.69,67.38 301.12,67.69 Q298.75,68.31 297.12,69.50 Q296.38,70.81 297.62,71.88 Z",to:"M276.25,30.06Q277.25,29.25 277.69,27.75 Q278.12,26.75 278.06,25.56 Q277.56,24.06 277.06,22.19 Q276.94,20.12 277.00,18.25 Q276.81,16.25 276.69,15.31 Q276.12,14.38 276.50,12.69 Q278.12,10.69 279.88,9.38 L277.88,8.88 Q277.69,9.06 277.38,9.44 Q276.88,9.75 276.56,9.94 Q276.75,9.00 276.94,7.56 Q277.06,6.12 276.81,5.31 Q276.25,4.62 275.62,5.19 Q275.25,6.31 275.19,7.88 Q274.94,8.81 274.81,9.19 Q274.06,8.31 273.19,7.06 Q272.69,6.06 272.31,5.44 Q271.38,4.62 270.94,4.81 Q271.00,5.44 271.81,6.88 Q272.56,8.31 273.12,9.31 Q271.56,8.12 269.81,7.19 Q268.50,7.12 268.88,8.06 Q270.25,8.88 272.19,9.94 Q273.06,10.12 273.44,11.69 Q274.31,14.94 274.44,19.06 Q273.62,22.44 272.56,24.06 Q272.25,24.31 272.31,25.56 Q272.56,27.44 273.56,29.19 Q274.88,30.31 276.25,30.06 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M276.25,30.06Q277.25,29.25 277.69,27.75 Q278.12,26.75 278.06,25.56 Q277.56,24.06 277.06,22.19 Q276.94,20.12 277.00,18.25 Q276.81,16.25 276.69,15.31 Q276.12,14.38 276.50,12.69 Q278.12,10.69 279.88,9.38 L277.88,8.88 Q277.69,9.06 277.38,9.44 Q276.88,9.75 276.56,9.94 Q276.75,9.00 276.94,7.56 Q277.06,6.12 276.81,5.31 Q276.25,4.62 275.62,5.19 Q275.25,6.31 275.19,7.88 Q274.94,8.81 274.81,9.19 Q274.06,8.31 273.19,7.06 Q272.69,6.06 272.31,5.44 Q271.38,4.62 270.94,4.81 Q271.00,5.44 271.81,6.88 Q272.56,8.31 273.12,9.31 Q271.56,8.12 269.81,7.19 Q268.50,7.12 268.88,8.06 Q270.25,8.88 272.19,9.94 Q273.06,10.12 273.44,11.69 Q274.31,14.94 274.44,19.06 Q273.62,22.44 272.56,24.06 Q272.25,24.31 272.31,25.56 Q272.56,27.44 273.56,29.19 Q274.88,30.31 276.25,30.06 Z",to:"M273.94,52.00Q274.50,51.75 274.81,51.06 Q275.06,50.62 275.06,50.06 Q274.81,49.25 274.56,48.31 Q274.50,47.25 274.62,46.38 Q274.56,45.38 274.50,44.94 Q274.19,44.44 274.44,43.69 Q275.44,42.94 276.50,42.50 L275.31,42.00 Q275.25,42.06 275.06,42.25 Q274.75,42.31 274.56,42.38 Q274.69,41.94 274.81,41.25 Q274.88,40.56 274.81,40.19 Q274.50,39.81 274.12,40.00 Q273.88,40.44 273.81,41.19 Q273.62,41.62 273.56,41.81 Q273.12,41.25 272.62,40.56 Q272.38,40.00 272.19,39.69 Q271.62,39.19 271.38,39.25 Q271.44,39.56 271.88,40.38 Q272.25,41.12 272.56,41.69 Q271.69,40.88 270.69,40.25 Q269.94,40.06 270.12,40.56 Q270.88,41.12 272.00,41.88 Q272.50,42.00 272.69,42.81 Q273.12,44.50 273.12,46.50 Q272.50,48.00 271.88,48.69 Q271.69,48.75 271.69,49.38 Q271.81,50.25 272.38,51.25 Q273.12,51.94 273.94,52.00 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M273.94,52.00Q274.50,51.75 274.81,51.06 Q275.06,50.62 275.06,50.06 Q274.81,49.25 274.56,48.31 Q274.50,47.25 274.62,46.38 Q274.56,45.38 274.50,44.94 Q274.19,44.44 274.44,43.69 Q275.44,42.94 276.50,42.50 L275.31,42.00 Q275.25,42.06 275.06,42.25 Q274.75,42.31 274.56,42.38 Q274.69,41.94 274.81,41.25 Q274.88,40.56 274.81,40.19 Q274.50,39.81 274.12,40.00 Q273.88,40.44 273.81,41.19 Q273.62,41.62 273.56,41.81 Q273.12,41.25 272.62,40.56 Q272.38,40.00 272.19,39.69 Q271.62,39.19 271.38,39.25 Q271.44,39.56 271.88,40.38 Q272.25,41.12 272.56,41.69 Q271.69,40.88 270.69,40.25 Q269.94,40.06 270.12,40.56 Q270.88,41.12 272.00,41.88 Q272.50,42.00 272.69,42.81 Q273.12,44.50 273.12,46.50 Q272.50,48.00 271.88,48.69 Q271.69,48.75 271.69,49.38 Q271.81,50.25 272.38,51.25 Q273.12,51.94 273.94,52.00 Z",to:"M269.75,127.56Q268.94,129.00 268.69,131.19 Q268.38,132.62 268.62,134.19 Q269.12,135.88 269.81,138.06 Q270.06,140.56 270.25,143.06 Q270.56,145.44 270.81,146.62 Q271.31,147.50 271.25,149.94 Q270.06,153.31 268.81,155.94 L270.44,155.50 Q270.56,155.19 270.88,154.62 Q271.19,153.94 271.44,153.50 Q271.31,154.75 271.38,156.75 Q271.38,158.62 271.69,159.62 Q272.19,160.19 272.69,159.19 Q272.81,157.44 272.81,155.44 Q272.88,154.00 273.00,153.56 Q273.62,154.25 274.56,155.44 Q275.00,156.50 275.44,157.12 Q276.25,157.62 276.69,157.19 Q276.50,156.44 275.69,155.06 Q274.88,153.56 274.38,152.62 Q275.75,153.31 277.31,153.69 Q278.38,153.06 278.00,152.06 Q276.75,151.62 275.12,151.25 Q274.31,151.44 273.88,149.69 Q272.81,145.88 272.38,140.69 Q272.69,135.88 273.38,133.38 Q273.56,132.81 273.44,131.25 Q273.00,128.94 272.06,127.25 Q270.81,126.44 269.75,127.56 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M269.75,127.56Q268.94,129.00 268.69,131.19 Q268.38,132.62 268.62,134.19 Q269.12,135.88 269.81,138.06 Q270.06,140.56 270.25,143.06 Q270.56,145.44 270.81,146.62 Q271.31,147.50 271.25,149.94 Q270.06,153.31 268.81,155.94 L270.44,155.50 Q270.56,155.19 270.88,154.62 Q271.19,153.94 271.44,153.50 Q271.31,154.75 271.38,156.75 Q271.38,158.62 271.69,159.62 Q272.19,160.19 272.69,159.19 Q272.81,157.44 272.81,155.44 Q272.88,154.00 273.00,153.56 Q273.62,154.25 274.56,155.44 Q275.00,156.50 275.44,157.12 Q276.25,157.62 276.69,157.19 Q276.50,156.44 275.69,155.06 Q274.88,153.56 274.38,152.62 Q275.75,153.31 277.31,153.69 Q278.38,153.06 278.00,152.06 Q276.75,151.62 275.12,151.25 Q274.31,151.44 273.88,149.69 Q272.81,145.88 272.38,140.69 Q272.69,135.88 273.38,133.38 Q273.56,132.81 273.44,131.25 Q273.00,128.94 272.06,127.25 Q270.81,126.44 269.75,127.56 Z",to:"M270.75,129.25Q269.88,130.75 269.69,133.00 Q269.38,134.50 269.62,136.06 Q270.12,137.75 270.81,140.00 Q271.06,142.56 271.25,145.12 Q271.56,147.56 271.88,148.81 Q272.38,149.69 272.31,152.19 Q271.06,155.62 269.75,158.31 L271.44,157.88 Q271.56,157.56 271.88,157.00 Q272.19,156.31 272.50,155.88 Q272.38,157.12 272.44,159.19 Q272.44,161.12 272.75,162.12 Q273.25,162.75 273.75,161.69 Q273.88,159.88 273.88,157.81 Q273.94,156.38 274.06,155.94 Q274.75,156.69 275.69,157.88 Q276.19,158.94 276.62,159.56 Q277.44,160.06 277.88,159.69 Q277.69,158.88 276.88,157.50 Q276.06,155.94 275.50,154.94 Q276.94,155.69 278.56,156.06 Q279.62,155.50 279.25,154.44 Q278.00,154.00 276.31,153.56 Q275.44,153.75 275.00,151.94 Q273.88,148.06 273.44,142.75 Q273.75,137.81 274.50,135.25 Q274.69,134.62 274.56,133.06 Q274.12,130.69 273.12,128.94 Q271.88,128.06 270.75,129.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M279.00,59.38L283.81,58.00 Q285.75,60.56 288.81,63.75 Q290.81,64.69 293.12,66.25 Q296.69,70.50 299.25,74.19 ",to:"M255.19,37.75L256.88,33.06 Q260.06,32.94 264.50,32.38 Q266.44,31.31 269.06,30.38 Q274.62,30.00 279.06,30.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M255.19,37.75L256.88,33.06 Q260.06,32.94 264.50,32.38 Q266.44,31.31 269.06,30.38 Q274.62,30.00 279.06,30.12 ",to:"M253.81,55.94L256.06,51.81 Q259.06,52.12 263.31,52.25 Q265.31,51.56 267.94,51.06 Q273.19,51.50 277.38,52.25 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.81,55.94L256.06,51.81 Q259.06,52.12 263.31,52.25 Q265.31,51.56 267.94,51.06 Q273.19,51.50 277.38,52.25 ",to:"M252.50,118.88L256.81,116.38 Q259.31,118.38 263.00,120.81 Q265.19,121.25 267.75,122.25 Q272.19,125.56 275.44,128.56 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M252.50,118.88L256.81,116.38 Q259.31,118.38 263.00,120.81 Q265.19,121.25 267.75,122.25 Q272.19,125.56 275.44,128.56 ",to:"M253.50,120.31L257.88,117.88 Q260.38,119.94 264.06,122.38 Q266.25,122.88 268.81,123.88 Q273.25,127.25 276.50,130.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M283.81,58.00L288.00,59.44 Q288.94,60.56 291.38,62.62 Q294.12,64.44 297.06,66.31 Q299.69,68.44 301.00,69.75 ",to:"M256.88,33.06L260.50,30.50 Q261.94,30.38 265.06,29.69 Q268.19,28.50 271.44,27.25 Q274.75,26.31 276.50,26.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M256.88,33.06L260.50,30.50 Q261.94,30.38 265.06,29.69 Q268.19,28.50 271.44,27.25 Q274.75,26.31 276.50,26.06 ",to:"M256.06,51.81L259.88,49.88 Q261.25,50.00 264.25,49.81 Q267.31,49.12 270.62,48.44 Q273.88,48.06 275.56,48.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M256.06,51.81L259.88,49.88 Q261.25,50.00 264.25,49.81 Q267.31,49.12 270.62,48.44 Q273.88,48.06 275.56,48.06 ",to:"M256.81,116.38L261.25,116.81 Q262.38,117.69 265.19,119.19 Q268.25,120.25 271.56,121.44 Q274.62,122.94 276.12,123.88 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M256.81,116.38L261.25,116.81 Q262.38,117.69 265.19,119.19 Q268.25,120.25 271.56,121.44 Q274.62,122.94 276.12,123.88 ",to:"M257.88,117.88L262.31,118.31 Q263.44,119.19 266.25,120.75 Q269.38,121.88 272.69,123.06 Q275.75,124.56 277.25,125.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M280.94,57.00L288.75,55.00 Q290.75,55.88 294.69,57.62 Q299.25,59.50 302.44,60.81 ",to:"M254.38,34.75L257.38,27.31 Q259.25,26.19 263.00,24.06 Q267.25,21.44 270.12,19.69 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M254.38,34.75L257.38,27.31 Q259.25,26.19 263.00,24.06 Q267.25,21.44 270.12,19.69 ",to:"M253.44,53.00L257.38,46.44 Q259.31,45.69 263.12,44.19 Q267.50,42.38 270.50,41.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.44,53.00L257.38,46.44 Q259.31,45.69 263.12,44.19 Q267.50,42.38 270.50,41.12 ",to:"M253.81,116.06L260.94,112.38 Q263.06,112.75 267.31,113.56 Q272.19,114.38 275.50,114.94 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M253.81,116.06L260.94,112.38 Q263.06,112.75 267.31,113.56 Q272.19,114.38 275.50,114.94 ",to:"M254.88,117.50L262.06,113.88 Q264.19,114.31 268.44,115.12 Q273.31,116.00 276.69,116.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M283.81,58.00Q287.50,59.56 292.44,61.50 Q295.75,62.44 297.44,62.75 Q298.69,63.00 299.12,63.31 Q299.94,63.88 300.44,64.38 Q301.00,64.44 302.00,64.81 Q302.88,65.44 303.44,66.00 ",to:"M256.88,33.06Q260.31,31.00 264.81,28.12 Q267.56,25.94 268.75,24.81 Q269.75,23.94 270.19,23.81 Q271.19,23.44 271.88,23.38 Q272.25,22.88 273.12,22.38 Q274.19,22.00 274.94,21.94 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M256.88,33.06Q260.31,31.00 264.81,28.12 Q267.56,25.94 268.75,24.81 Q269.75,23.94 270.19,23.81 Q271.19,23.44 271.88,23.38 Q272.25,22.88 273.12,22.38 Q274.19,22.00 274.94,21.94 ",to:"M256.06,51.81Q259.62,50.38 264.25,48.31 Q267.12,46.62 268.44,45.75 Q269.50,45.06 269.94,45.06 Q270.94,44.88 271.62,44.88 Q272.06,44.50 272.94,44.12 Q273.94,43.94 274.69,43.94 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M256.06,51.81Q259.62,50.38 264.25,48.31 Q267.12,46.62 268.44,45.75 Q269.50,45.06 269.94,45.06 Q270.94,44.88 271.62,44.88 Q272.06,44.50 272.94,44.12 Q273.94,43.94 274.69,43.94 ",to:"M256.81,116.38Q260.75,117.06 266.00,117.81 Q269.44,118.00 271.12,117.88 Q272.44,117.88 272.88,118.06 Q273.88,118.44 274.44,118.81 Q274.94,118.75 275.94,118.94 Q276.94,119.31 277.62,119.69 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M256.81,116.38Q260.75,117.06 266.00,117.81 Q269.44,118.00 271.12,117.88 Q272.44,117.88 272.88,118.06 Q273.88,118.44 274.44,118.81 Q274.94,118.75 275.94,118.94 Q276.94,119.31 277.62,119.69 ",to:"M257.88,117.88Q261.81,118.56 267.12,119.38 Q270.62,119.56 272.25,119.50 Q273.56,119.50 274.00,119.69 Q275.00,120.06 275.56,120.44 Q276.12,120.38 277.12,120.56 Q278.12,120.94 278.81,121.38 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M280.94,57.00Q284.25,56.75 288.56,57.25 Q290.75,58.25 292.56,59.88 Q295.62,61.19 298.44,62.25 Q300.62,63.31 301.38,63.81 ",to:"M254.38,34.75Q256.19,31.94 259.12,28.75 Q261.25,27.56 263.56,27.06 Q266.38,25.38 268.94,23.75 Q271.06,22.56 271.94,22.31 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M254.38,34.75Q256.19,31.94 259.12,28.75 Q261.25,27.56 263.56,27.06 Q266.38,25.38 268.94,23.75 Q271.06,22.56 271.94,22.31 ",to:"M253.44,53.00Q255.56,50.62 258.81,48.06 Q261.00,47.25 263.25,47.12 Q266.19,45.94 268.81,44.81 Q271.00,44.00 271.81,43.88 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.44,53.00Q255.56,50.62 258.81,48.06 Q261.00,47.25 263.25,47.12 Q266.19,45.94 268.81,44.81 Q271.00,44.00 271.81,43.88 ",to:"M253.81,116.06Q257.00,115.12 261.31,114.62 Q263.69,115.06 265.75,116.19 Q269.00,116.75 272.00,117.19 Q274.31,117.75 275.12,118.06 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M253.81,116.06Q257.00,115.12 261.31,114.62 Q263.69,115.06 265.75,116.19 Q269.00,116.75 272.00,117.19 Q274.31,117.75 275.12,118.06 ",to:"M254.88,117.50Q258.06,116.56 262.44,116.12 Q264.81,116.62 266.88,117.75 Q270.12,118.38 273.12,118.81 Q275.50,119.38 276.31,119.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M280.94,57.00Q281.81,56.44 283.94,55.75 Q286.25,55.25 288.75,55.00 Q290.56,54.62 292.25,54.75 Q293.88,55.00 296.31,55.88 Q300.00,57.06 302.75,58.00 ",to:"M254.38,34.75Q254.44,33.69 255.12,31.62 Q256.06,29.44 257.38,27.31 Q258.12,25.56 259.25,24.31 Q260.44,23.06 262.56,21.69 Q265.69,19.38 268.06,17.75 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M254.38,34.75Q254.44,33.69 255.12,31.62 Q256.06,29.44 257.38,27.31 Q258.12,25.56 259.25,24.31 Q260.44,23.06 262.56,21.69 Q265.69,19.38 268.06,17.75 ",to:"M253.44,53.00Q253.69,52.06 254.62,50.19 Q255.88,48.25 257.38,46.44 Q258.38,44.88 259.56,43.88 Q260.81,42.94 263.06,41.94 Q266.38,40.19 268.81,39.00 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M253.44,53.00Q253.69,52.06 254.62,50.19 Q255.88,48.25 257.38,46.44 Q258.38,44.88 259.56,43.88 Q260.81,42.94 263.06,41.94 Q266.38,40.19 268.81,39.00 ",to:"M253.81,116.06Q254.56,115.31 256.44,114.19 Q258.56,113.12 260.94,112.38 Q262.62,111.62 264.31,111.38 Q265.94,111.19 268.50,111.50 Q272.31,111.81 275.19,112.12 "}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M253.81,116.06Q254.56,115.31 256.44,114.19 Q258.56,113.12 260.94,112.38 Q262.62,111.62 264.31,111.38 Q265.94,111.19 268.50,111.50 Q272.31,111.81 275.19,112.12 ",to:"M254.88,117.50Q255.56,116.75 257.50,115.62 Q259.69,114.62 262.06,113.88 Q263.75,113.12 265.44,112.88 Q267.12,112.75 269.69,113.06 Q273.56,113.38 276.38,113.75 "}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M282.38,64.69Q282.50,64.56 283.00,64.75 Q283.44,64.88 284.00,65.25 Q284.44,65.69 284.75,66.25 Q284.94,66.75 284.81,67.00 Q284.62,67.06 284.19,66.88 Q283.69,66.62 283.19,66.19 Q282.69,65.69 282.44,65.31 Q282.19,64.88 282.38,64.69 Z",to:"M261.44,38.12Q261.44,37.88 261.88,37.69 Q262.25,37.38 262.88,37.19 Q263.50,37.00 264.12,37.12 Q264.62,37.25 264.75,37.56 Q264.75,37.75 264.31,38.00 Q263.75,38.19 263.12,38.38 Q262.44,38.44 262.00,38.44 Q261.50,38.31 261.44,38.12 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.34s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M261.44,38.12Q261.44,37.88 261.88,37.69 Q262.25,37.38 262.88,37.19 Q263.50,37.00 264.12,37.12 Q264.62,37.25 264.75,37.56 Q264.75,37.75 264.31,38.00 Q263.75,38.19 263.12,38.38 Q262.44,38.44 262.00,38.44 Q261.50,38.31 261.44,38.12 Z",to:"M259.62,57.19Q259.69,57.00 260.12,56.88 Q260.50,56.62 261.12,56.56 Q261.75,56.50 262.31,56.69 Q262.75,56.88 262.81,57.19 Q262.75,57.38 262.38,57.50 Q261.81,57.62 261.19,57.69 Q260.56,57.69 260.12,57.62 Q259.62,57.44 259.62,57.19 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.84s",dur:"0.15s",calcMode:"spline",keyTimes:"0;1",keySplines:"0.42 0 1 1",attributeName:"d",from:"M259.62,57.19Q259.69,57.00 260.12,56.88 Q260.50,56.62 261.12,56.56 Q261.75,56.50 262.31,56.69 Q262.75,56.88 262.81,57.19 Q262.75,57.38 262.38,57.50 Q261.81,57.62 261.19,57.69 Q260.56,57.69 260.12,57.62 Q259.62,57.44 259.62,57.19 Z",to:"M257.00,123.12Q257.12,122.94 257.62,123.06 Q258.06,123.06 258.69,123.38 Q259.25,123.69 259.69,124.12 Q259.94,124.56 259.81,124.88 Q259.69,125.06 259.25,124.94 Q258.69,124.75 258.06,124.44 Q257.50,124.06 257.19,123.75 Q256.88,123.31 257.00,123.12 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.99s",dur:"0.51s",attributeName:"d",from:"M257.00,123.12Q257.12,122.94 257.62,123.06 Q258.06,123.06 258.69,123.38 Q259.25,123.69 259.69,124.12 Q259.94,124.56 259.81,124.88 Q259.69,125.06 259.25,124.94 Q258.69,124.75 258.06,124.44 Q257.50,124.06 257.19,123.75 Q256.88,123.31 257.00,123.12 Z",to:"M258.00,124.69Q258.12,124.50 258.62,124.62 Q259.06,124.62 259.69,124.94 Q260.25,125.25 260.69,125.69 Q260.94,126.12 260.81,126.44 Q260.69,126.62 260.25,126.50 Q259.69,126.31 259.06,126.00 Q258.50,125.62 258.19,125.31 Q257.88,124.88 258.00,124.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+1.50s",dur:"1.00s",attributeName:"d",from:"M278.62,66.44Q278.62,66.31 278.81,66.56 Q279.00,66.88 279.25,67.50 Q279.44,68.06 279.69,68.56 Q279.88,69.06 279.94,69.25 Q279.81,69.31 279.62,69.00 Q279.44,68.62 279.25,68.06 Q279.00,67.44 278.81,67.00 Q278.62,66.56 278.62,66.44 Z",to:"M260.62,42.19Q260.50,42.06 260.88,42.12 Q261.25,42.12 261.88,42.31 Q262.44,42.44 263.00,42.62 Q263.50,42.69 263.69,42.81 Q263.69,42.88 263.31,42.94 Q262.88,42.81 262.31,42.69 Q261.69,42.50 261.25,42.38 Q260.75,42.25 260.62,42.19 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.50s",dur:"0.25s",calcMode:"spline",keyTimes:"0;1",keySplines:"0 0 0.58 1",attributeName:"d",from:"M260.62,42.19Q260.50,42.06 260.88,42.12 Q261.25,42.12 261.88,42.31 Q262.44,42.44 263.00,42.62 Q263.50,42.69 263.69,42.81 Q263.69,42.88 263.31,42.94 Q262.88,42.81 262.31,42.69 Q261.69,42.50 261.25,42.38 Q260.75,42.25 260.62,42.19 Z",to:"M254.56,99.25Q254.50,99.12 254.81,99.31 Q255.12,99.50 255.56,99.94 Q255.94,100.38 256.31,100.81 Q256.62,101.12 256.75,101.25 Q256.69,101.31 256.44,101.19 Q256.06,100.94 255.69,100.50 Q255.25,100.06 255.00,99.69 Q254.62,99.31 254.56,99.25 Z"}),e("animate",{fill:"freeze",begin:"Sa.begin+2.75s",dur:"0.75s",calcMode:"spline",keyTimes:"0;1",keySplines:"0 0 0.58 1",attributeName:"d",from:"M254.56,99.25Q254.50,99.12 254.81,99.31 Q255.12,99.50 255.56,99.94 Q255.94,100.38 256.31,100.81 Q256.62,101.12 256.75,101.25 Q256.69,101.31 256.44,101.19 Q256.06,100.94 255.69,100.50 Q255.25,100.06 255.00,99.69 Q254.62,99.31 254.56,99.25 Z",to:"M253.88,119.31Q253.88,119.19 254.12,119.44 Q254.38,119.69 254.75,120.25 Q255.06,120.75 255.38,121.25 Q255.62,121.62 255.75,121.81 Q255.69,121.88 255.44,121.69 Q255.12,121.31 254.81,120.81 Q254.50,120.25 254.25,119.88 Q253.94,119.44 253.88,119.31 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+3.50s",attributeName:"d",to:"M0,0"})])]),e("g",{id:"P6a1:loop2,0"},[e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 ",to:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 ",to:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z",to:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 ",to:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z",to:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 ",to:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-34.44,82.31L-31.81,93.56 ",to:"M-34.44,82.31L-31.81,93.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-36.12,71.00L-34.75,77.56 ",to:"M-36.12,71.00L-34.75,77.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M392.38,58.88L389.75,99.62 388.88,100.50 ",to:"M392.38,58.88L389.75,99.62 388.88,100.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 ",to:"M405.06,67.06Q402.75,69.25 398.50,73.62 Q393.75,78.75 390.69,82.31 L402.12,101.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z",to:"M408.00,86.62Q404.81,90.75 404.50,96.69 Q407.44,100.50 411.50,99.62 Q413.31,95.94 412.31,90.56 Q410.69,86.19 408.00,86.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 ",to:"M417.56,85.62L423.62,100.50 Q422.31,94.38 421.88,87.69 Q422.50,83.38 425.38,85.06 Q429.25,90.25 432.31,96.19 Q430.69,90.31 430.31,84.50 Q431.81,81.19 434.94,84.75 Q437.62,92.62 439.19,100.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z",to:"M442.44,88.25Q443.38,83.56 446.75,83.94 Q452.44,88.75 454.56,95.19 Q450.56,98.50 444.19,96.94 Q441.44,93.31 442.44,88.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 ",to:"M457.38,77.88L462.62,96.94 Q461.06,91.25 460.88,84.75 Q463.25,81.50 466.06,81.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M473.00,88.38L475.62,99.62 ",to:"M473.00,88.38L475.62,99.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M471.31,77.06L472.69,83.62 ",to:"M471.31,77.06L472.69,83.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#99ffcc",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z",to:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_18a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z",to:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M426.94,230.44Q444.75,229.19 458.25,232.19 Q470.44,235.69 471.69,241.81 Q470.94,248.12 459.19,253.94 Q446.12,259.38 428.38,261.38 Q410.56,262.62 397.12,259.62 Q384.88,256.06 383.62,249.94 Q384.31,243.56 396.12,237.81 Q409.12,232.38 426.94,230.44 Z",to:"M437.31,236.00Q452.62,236.25 464.12,239.25 Q474.44,242.56 475.31,247.00 Q474.44,251.44 464.12,254.75 Q452.62,257.75 437.31,258.00 Q421.94,257.75 410.50,254.75 Q400.12,251.44 399.31,247.00 Q400.12,242.56 410.50,239.25 Q421.94,236.25 437.31,236.00 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M235.44,211.50Q274.19,211.81 303.12,216.25 Q329.12,221.12 331.19,227.75 Q329.12,234.31 303.12,239.19 Q274.19,243.56 235.44,243.94 Q196.56,243.56 167.69,239.19 Q141.62,234.31 139.62,227.75 Q141.62,221.12 167.69,216.25 Q196.56,211.81 235.44,211.50 Z",to:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#ffffff",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M55.88,212.56Q89.75,212.62 115.00,216.75 Q137.75,221.31 139.62,227.75 Q137.75,234.06 115.00,239.00 Q89.75,243.44 55.88,244.06 Q22.00,243.94 -3.25,239.81 Q-26.00,235.19 -27.88,228.81 Q-26.00,222.44 -3.25,217.56 Q22.00,213.12 55.88,212.56 Z",to:"M22.50,213.06Q42.88,213.38 58.12,217.69 Q71.81,222.44 72.94,228.81 Q71.81,235.19 58.12,239.94 Q42.88,244.19 22.50,244.56 Q2.06,244.19 -13.12,239.94 Q-26.81,235.19 -27.94,228.81 Q-26.81,222.44 -13.12,217.69 Q2.06,213.38 22.50,213.06 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_22a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M300.25,230.25Q310.00,227.00 317.50,223.00 Q315.12,220.56 308.50,220.00 L236.50,217.25 Q208.69,218.00 176.25,220.00 Q158.31,221.81 157.69,224.62 Q159.69,228.56 166.38,231.38 L181.06,234.12 Q185.69,234.06 197.75,234.12 Q211.88,234.38 227.06,234.50 Q238.31,234.31 247.69,233.75 Q259.00,233.31 269.12,232.56 Q279.50,231.38 284.56,230.56 ",to:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_23a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M19.94,149.12Q18.50,133.25 18.12,112.81 Q18.94,101.06 22.38,94.44 Q25.06,85.88 30.94,78.31 Q37.06,70.38 47.69,63.69 Q56.19,58.00 74.19,52.56 Q102.12,44.75 128.88,38.69 Q143.75,34.38 150.19,34.31 Q163.19,35.25 170.94,37.38 L138.44,57.62 Q129.75,62.69 115.19,72.62 Q102.94,81.88 91.69,92.06 Q80.81,102.56 72.44,110.75 Q65.19,114.19 58.69,120.50 Q48.81,136.69 42.38,150.44 L22.00,159.75 ",to:"M37.38,152.25Q39.00,136.94 42.62,117.19 Q45.75,105.88 50.50,99.44 Q54.88,91.19 62.19,83.88 Q69.81,76.19 81.75,69.75 Q91.31,64.25 110.44,59.00 Q139.94,51.50 167.81,45.62 Q183.50,41.44 190.00,41.38 Q202.81,42.31 210.19,44.31 L173.69,63.88 Q164.00,68.75 147.56,78.38 Q133.50,87.25 120.25,97.12 Q107.31,107.31 97.38,115.19 Q89.44,118.50 81.75,124.56 Q68.69,140.19 59.56,153.50 L37.38,162.50 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_24a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M32.50,168.38Q27.50,165.38 22.00,159.75 Q13.19,154.88 19.94,149.12 Q39.12,144.88 71.62,136.62 Q100.12,124.12 122.38,109.56 Q137.31,98.44 149.00,88.81 Q171.12,75.62 186.62,67.62 Q185.81,73.12 182.69,85.62 Q178.50,99.38 173.06,113.62 Q168.31,124.44 163.69,133.50 Q157.88,146.38 154.44,154.31 L154.12,159.12 Q140.94,177.06 117.88,194.94 Q95.56,199.81 78.12,194.56 Q68.06,194.44 61.12,189.69 Q45.31,179.56 33.75,170.69 ",to:"M46.25,170.81Q41.81,167.94 37.38,162.50 Q29.50,157.81 37.38,152.25 Q57.38,148.12 91.50,140.12 Q122.44,128.00 147.56,114.00 Q164.62,103.25 178.19,94.00 Q202.88,81.25 219.94,73.56 Q218.06,78.88 212.50,90.94 Q205.69,104.19 197.44,117.94 Q190.56,128.38 184.19,137.12 Q175.88,149.56 170.88,157.25 L169.62,161.88 Q152.94,179.19 126.44,196.44 Q103.19,201.12 86.75,196.06 Q76.69,195.94 70.69,191.38 Q56.81,181.62 47.00,173.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_25a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M19.94,149.12Q13.44,149.12 4.75,157.62 Q-2.88,170.75 -4.25,191.50 Q-0.25,215.06 5.94,230.19 L21.31,235.38 Q33.31,235.94 46.25,234.06 Q51.12,228.81 49.88,223.94 Q41.81,222.00 30.75,214.75 Q22.31,206.00 18.75,193.38 Q16.00,178.94 19.12,168.38 Q24.75,162.06 30.31,162.06 L28.62,153.50 ",to:"M37.38,152.25Q30.88,152.25 20.56,160.44 Q9.94,172.06 4.94,193.12 Q5.56,220.06 10.19,238.88 L34.19,237.06 Q39.19,236.38 47.19,234.25 Q54.69,230.88 58.94,228.31 Q48.12,224.50 35.44,215.56 Q27.94,206.62 27.62,194.94 Q27.69,181.06 32.88,170.81 Q39.69,164.69 45.25,164.69 L45.25,156.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_26a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M199.94,226.56Q197.44,222.06 195.00,214.75 Q194.38,207.38 195.00,203.06 L208.12,199.50 Q210.88,193.75 210.50,185.81 Q206.44,178.69 197.88,176.62 Q188.50,177.50 181.94,182.75 Q178.56,186.50 180.31,190.88 Q181.44,195.69 184.44,199.25 Q187.75,201.75 190.06,202.25 Q189.62,208.44 190.06,217.31 Q191.69,224.38 193.38,227.69 ",to:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M195.12,177.25Q193.69,178.62 194.25,181.50 Q195.00,184.44 197.38,187.31 Q199.88,190.06 202.81,191.31 Q205.56,192.25 207.31,191.12 Q208.75,189.69 208.31,186.88 Q207.50,183.88 205.12,181.06 Q202.56,178.31 199.75,177.12 Q196.88,176.12 195.12,177.25 Z",to:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_28a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M301.25,224.25Q302.81,222.88 304.38,218.62 Q304.75,212.06 304.38,206.94 L293.38,202.88 Q291.00,197.06 291.38,189.12 Q294.69,182.19 301.94,180.44 Q309.75,181.62 315.31,187.12 Q318.06,191.00 316.69,195.31 Q315.69,200.06 313.25,203.56 Q310.44,205.94 308.50,206.31 Q308.50,213.81 308.50,221.38 Q308.50,223.25 308.50,221.38 ",to:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_29a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M260.25,221.75Q259.44,222.69 262.00,220.44 Q267.25,215.56 275.25,207.44 Q283.19,198.44 287.88,192.75 Q282.69,200.12 274.69,210.31 Q267.38,217.94 263.38,221.25 ",to:"M261.88,198.19Q261.31,199.31 263.38,196.62 Q267.44,190.75 273.44,181.06 Q279.25,170.50 282.56,163.88 Q279.12,172.25 273.56,183.94 Q268.06,193.00 264.88,197.12 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_30a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M237.19,222.38Q237.88,223.50 235.19,220.81 Q229.56,214.94 221.44,205.19 Q213.56,194.62 209.19,188.00 Q213.75,196.38 221.25,208.06 Q228.62,217.19 233.00,221.31 ",to:"M238.88,198.81Q239.56,199.94 236.81,197.25 Q231.19,191.44 222.94,181.88 Q214.88,171.44 210.38,164.88 Q215.06,173.12 222.75,184.75 Q230.25,193.75 234.75,197.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#610000",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M300.75,181.12Q302.12,182.00 302.25,184.81 Q302.12,187.81 300.75,191.25 Q299.06,194.56 296.88,196.69 Q294.62,198.44 293.06,197.94 Q291.62,197.00 291.56,194.25 Q291.62,191.25 293.06,187.81 Q294.69,184.44 296.94,182.38 Q299.12,180.56 300.75,181.12 Z",to:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_32a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M432.56,197.38Q434.06,182.88 434.31,164.69 Q433.25,154.56 429.31,149.75 Q426.06,143.00 419.38,138.06 Q412.31,132.81 400.25,130.06 Q390.44,127.56 369.88,128.06 Q337.88,129.50 307.44,132.06 Q290.31,132.69 282.94,134.56 Q268.06,139.31 259.38,143.44 L296.69,151.62 Q306.50,153.50 323.19,158.00 Q337.25,162.56 350.25,168.25 Q362.69,174.31 372.38,179.00 Q380.62,179.88 388.12,183.56 Q399.50,194.94 407.00,205.19 L430.31,207.38 ",to:"M431.75,194.56Q430.00,180.12 426.25,162.31 Q423.00,152.62 418.06,148.81 Q413.44,142.94 405.81,139.62 Q397.81,136.06 385.38,136.06 Q375.25,135.75 355.31,140.81 Q324.44,149.25 295.31,158.50 Q278.75,162.88 272.00,166.31 Q258.50,174.19 250.94,180.19 L289.12,179.94 Q299.12,179.62 316.38,180.31 Q331.12,181.62 345.06,184.31 Q358.56,187.50 369.00,189.94 Q377.25,188.94 385.38,190.88 Q399.00,199.44 408.56,207.81 L431.75,204.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#e8e8e8",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M250.88,292.62Q310.50,293.38 355.00,303.12 Q395.12,313.94 398.44,328.44 Q395.19,342.88 355.12,353.62 Q310.69,363.31 251.12,364.12 Q191.44,363.31 147.00,353.62 Q106.81,342.88 103.56,328.44 Q106.75,313.94 146.81,303.12 Q191.19,293.38 250.88,292.62 Z",to:"M250.88,290.62Q313.88,291.38 360.94,301.69 Q403.38,313.06 406.88,328.44 Q403.44,343.69 361.12,355.12 Q314.19,365.38 251.19,366.19 Q188.06,365.38 141.06,355.12 Q98.62,343.69 95.19,328.44 Q98.50,313.06 140.88,301.69 Q187.81,291.38 250.88,290.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_34a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z",to:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_35a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M259.88,134.69L272.94,134.31 Q270.62,148.19 267.69,171.31 Q265.44,185.12 264.75,208.19 Q264.62,249.56 265.31,281.81 Q266.00,283.19 264.56,285.25 Q261.19,287.25 255.62,287.94 Q249.75,287.88 245.81,286.12 Q243.88,283.69 244.50,281.81 Q244.44,268.06 245.06,245.12 Q245.00,231.38 247.81,208.38 Q254.19,166.94 259.88,134.69 Z",to:"M250.31,134.69L263.31,134.31 Q263.50,148.12 263.88,171.19 Q264.06,185.00 264.50,208.06 Q265.12,249.50 265.69,281.81 Q266.31,283.19 264.75,285.25 Q261.25,287.25 255.62,287.94 Q249.75,287.88 245.94,286.12 Q244.19,283.69 244.88,281.81 Q245.31,268.00 246.19,245.00 Q246.69,231.19 247.56,208.25 Q249.06,166.88 250.31,134.69 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_36a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M263.62,137.88Q264.06,137.69 266.88,137.00 Q270.69,135.38 276.31,134.56 Q281.19,134.38 286.62,136.56 Q292.00,138.62 297.94,143.62 Q303.88,148.38 310.06,157.12 Q317.12,168.50 322.19,180.12 Q325.50,189.06 325.88,194.62 Q326.94,202.75 325.88,203.94 Q324.50,200.12 320.81,190.31 Q316.38,182.44 311.12,175.44 Q306.62,169.62 302.50,165.12 Q298.44,159.56 294.19,155.44 Q290.00,152.62 284.69,150.69 Q277.06,146.81 271.88,144.19 ",to:"M255.19,137.56Q255.75,137.06 259.50,134.44 Q264.44,130.25 272.06,125.56 Q278.81,121.94 286.69,120.31 Q294.50,118.56 303.56,119.38 Q312.62,119.94 322.75,124.31 Q334.62,130.56 343.69,138.50 Q349.94,144.94 351.44,150.19 Q354.44,157.44 353.19,159.31 Q350.62,156.50 343.69,149.44 Q336.19,144.75 327.62,141.50 Q320.38,138.88 313.81,137.38 Q307.12,134.75 300.50,133.62 Q294.25,133.75 286.62,135.50 Q275.44,137.00 267.75,138.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_37a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M264.56,138.19Q264.62,137.69 262.56,133.44 Q259.31,126.81 253.88,118.06 Q248.94,110.81 242.88,104.75 Q236.81,98.50 229.44,93.94 Q221.94,89.12 213.06,87.19 Q202.44,85.88 193.88,87.75 Q187.69,89.88 185.62,93.69 Q181.94,98.38 182.69,100.81 Q185.19,99.75 192.06,97.56 Q198.88,97.69 206.31,99.81 Q212.56,101.69 218.19,104.19 Q224.00,105.69 229.56,108.62 Q234.56,112.38 240.44,118.44 Q249.19,126.31 255.25,131.81 ",to:"M256.19,137.69Q256.12,137.19 253.25,134.44 Q248.75,130.19 241.69,125.44 Q235.44,121.75 228.19,120.06 Q220.88,118.19 212.62,118.94 Q204.19,119.44 194.94,123.81 Q184.00,130.00 175.69,137.88 Q169.88,144.31 168.50,149.50 Q165.69,156.69 166.88,158.56 Q169.19,155.75 175.69,148.75 Q182.56,144.12 190.44,140.94 Q197.12,138.38 203.25,136.88 Q209.31,134.31 215.44,133.31 Q221.19,133.44 228.25,135.25 Q238.50,136.81 245.62,138.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_38a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M264.56,138.19Q264.69,137.69 267.44,135.69 Q271.50,132.50 277.56,129.44 Q282.75,127.19 288.38,127.12 Q293.94,126.94 299.88,129.56 Q305.88,131.94 311.88,138.25 Q318.69,146.69 323.31,156.31 Q326.38,163.88 326.44,169.31 Q327.12,177.00 325.88,178.62 Q324.62,175.38 321.25,167.06 Q317.06,161.00 312.00,156.12 Q307.56,152.06 303.44,149.25 Q299.44,145.31 295.19,142.94 Q290.94,141.81 285.50,142.06 Q277.69,141.31 272.31,140.88 ",to:"M256.19,137.69Q256.19,137.19 258.50,134.69 Q261.88,130.81 267.31,126.69 Q272.00,123.50 277.50,122.44 Q282.94,121.19 289.25,122.69 Q295.56,123.88 302.69,129.00 Q310.94,136.06 317.25,144.62 Q321.62,151.50 322.75,156.81 Q324.81,164.25 323.94,166.06 Q322.12,163.06 317.25,155.56 Q312.06,150.31 306.12,146.50 Q301.00,143.38 296.44,141.38 Q291.75,138.25 287.12,136.69 Q282.75,136.38 277.50,137.62 Q269.69,138.31 264.31,138.88 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_39a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M263.62,137.88Q264.31,133.75 263.12,126.69 Q260.38,120.25 255.25,114.50 Q250.75,109.19 245.00,106.06 Q239.12,102.75 231.94,102.31 Q224.75,101.62 216.00,105.19 Q205.31,110.62 196.50,118.44 Q190.12,124.94 187.81,130.75 Q183.75,138.69 184.38,141.06 Q186.94,138.19 194.00,131.06 Q200.81,126.75 208.25,124.31 Q214.44,122.44 220.00,121.69 Q225.81,119.69 231.31,119.44 Q236.12,120.56 241.69,123.75 Q250.00,127.19 255.75,129.62 ",to:"M255.19,137.56Q255.00,133.31 252.69,126.81 Q249.31,121.44 244.19,117.69 Q239.62,114.12 234.44,113.25 Q229.19,112.19 223.38,114.44 Q217.50,116.44 211.12,123.25 Q203.62,132.56 198.06,143.56 Q194.19,152.31 193.44,158.88 Q191.69,168.19 192.62,170.31 Q194.12,166.50 198.44,156.88 Q203.06,150.06 208.56,144.94 Q213.19,140.75 217.44,137.94 Q221.69,133.75 226.00,131.50 Q230.06,130.81 235.12,131.88 Q242.38,132.19 247.44,132.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_40a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M268.88,137.12Q270.06,133.06 273.31,127.31 Q276.94,122.81 281.44,120.38 Q285.38,118.06 289.06,118.50 Q292.81,118.75 296.12,122.38 Q299.50,125.75 302.00,134.00 Q304.50,144.94 305.31,157.06 Q305.50,166.62 304.31,173.25 Q303.00,182.75 301.88,184.56 Q301.81,180.44 301.50,170.00 Q300.12,162.25 297.94,155.88 Q295.94,150.62 293.88,146.81 Q292.12,141.69 289.94,138.38 Q287.38,136.69 283.75,136.56 Q278.75,135.00 275.38,134.00 ",to:"M260.25,135.88Q260.62,131.62 262.75,125.38 Q265.50,120.31 269.44,117.06 Q272.88,114.06 276.62,113.81 Q280.31,113.31 284.25,116.31 Q288.19,119.00 292.19,126.62 Q296.69,136.94 299.75,148.69 Q301.69,158.00 301.75,164.75 Q302.19,174.31 301.44,176.38 Q300.62,172.31 298.38,162.12 Q295.62,154.69 292.25,148.88 Q289.31,144.06 286.56,140.75 Q283.88,136.00 281.12,133.19 Q278.31,132.00 274.75,132.56 Q269.56,131.94 266.00,131.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_41a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M264.56,138.19Q265.25,134.06 265.19,127.62 Q264.19,122.12 261.75,118.00 Q259.62,114.19 256.62,112.81 Q253.62,111.25 249.56,112.94 Q245.50,114.38 240.19,120.38 Q233.62,128.62 228.00,138.69 Q223.88,146.88 222.12,153.31 Q219.19,162.12 219.31,164.25 Q221.00,160.69 225.56,151.75 Q229.81,145.62 234.25,141.19 Q237.94,137.50 241.19,135.12 Q244.62,131.50 247.75,129.69 Q250.38,129.31 253.31,130.81 Q257.75,131.75 260.88,132.50 ",to:"M256.19,137.69Q256.12,133.50 254.81,127.19 Q252.81,121.94 249.69,118.38 Q246.88,115.00 243.69,114.25 Q240.44,113.31 236.75,115.69 Q233.00,117.81 228.94,124.75 Q224.06,134.06 220.38,145.00 Q217.81,153.81 217.25,160.44 Q216.00,169.62 216.56,171.69 Q217.56,167.88 220.38,158.25 Q223.38,151.44 226.94,146.25 Q229.88,141.94 232.62,139.06 Q235.31,134.88 238.06,132.50 Q240.56,131.62 243.75,132.56 Q248.31,132.69 251.50,132.81 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_42a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M263.56,139.88Q264.31,135.75 266.44,129.81 Q268.75,125.06 271.56,122.12 Q274.06,119.31 276.38,119.19 Q278.69,118.88 280.75,121.88 Q282.81,124.62 284.38,132.19 Q285.88,142.25 286.31,153.75 Q286.38,162.88 285.62,169.44 Q284.69,178.69 284.00,180.56 Q284.00,176.62 283.88,166.69 Q283.06,159.38 281.69,153.62 Q280.38,148.88 279.12,145.56 Q278.06,140.94 276.75,138.19 Q275.12,136.94 272.88,137.25 Q269.75,136.50 267.62,136.00 ",to:"M255.50,139.56Q255.50,135.38 256.44,129.12 Q257.81,124.00 260.06,120.62 Q262.00,117.38 264.25,116.81 Q266.50,116.06 269.06,118.69 Q271.62,121.00 274.50,128.12 Q277.81,137.75 280.44,148.94 Q282.25,157.88 282.69,164.50 Q283.50,173.75 283.12,175.75 Q282.38,171.88 280.44,162.12 Q278.31,155.12 275.88,149.69 Q273.75,145.25 271.88,142.25 Q269.94,137.94 268.12,135.44 Q266.31,134.50 264.19,135.25 Q261.00,135.06 258.81,135.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_43a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M269.75,124.44Q268.81,118.81 264.00,118.06 Q258.50,121.56 253.38,130.56 Q250.12,138.12 249.00,146.12 Q247.06,153.12 246.75,160.31 Q247.12,171.62 248.81,176.25 Q249.38,175.06 251.56,163.69 Q255.31,150.31 259.69,138.44 Q262.56,132.62 264.75,131.44 Q268.56,127.81 269.75,124.44 Z",to:"M258.75,123.25Q256.75,117.88 251.88,118.06 Q247.12,122.50 243.75,132.31 Q242.00,140.31 242.38,148.38 Q241.75,155.62 242.75,162.75 Q245.25,173.75 247.75,178.00 Q248.12,176.75 248.12,165.19 Q249.31,151.38 251.44,138.88 Q253.19,132.56 255.12,131.00 Q258.25,126.75 258.75,123.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_44a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M425.25,216.25Q428.56,210.06 431.31,201.44 Q437.31,190.88 429.00,191.44 Q410.06,202.69 377.69,220.88 Q347.06,232.75 321.38,238.31 Q303.62,240.94 289.50,242.19 Q264.44,248.62 247.38,254.12 Q250.19,257.94 257.94,265.44 Q267.06,273.12 277.62,280.19 Q286.06,285.12 293.75,288.81 Q304.00,294.56 310.31,298.19 L312.50,301.75 Q331.31,305.88 359.06,302.44 Q380.94,289.31 394.56,271.81 Q403.50,264.00 407.94,254.94 Q418.19,234.81 425.12,219.00 ",to:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_45a1)",stroke:"none"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 ",to:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_46a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M268.44,135.44Q266.75,135.88 264.44,135.50 Q262.88,135.44 261.31,134.75 Q259.50,133.62 257.19,132.25 Q254.44,131.06 251.88,130.12 Q249.38,129.00 248.25,128.50 Q247.25,127.56 244.69,126.94 Q240.94,127.25 238.12,128.06 L238.69,126.25 Q239.00,126.19 239.69,126.06 Q240.44,125.81 240.94,125.69 Q239.56,125.38 237.50,124.75 Q235.44,124.06 234.44,123.50 Q233.81,122.75 235.00,122.62 Q236.75,122.88 238.94,123.50 Q240.38,123.75 240.94,123.88 Q240.19,122.81 239.06,121.44 Q237.88,120.50 237.25,119.88 Q236.69,118.69 237.25,118.38 Q238.12,118.81 239.69,120.25 Q241.12,121.56 242.06,122.50 Q241.44,120.62 241.31,118.75 Q241.88,117.56 242.88,118.31 Q243.12,119.88 243.50,122.06 Q243.19,122.81 245.12,123.88 Q249.00,126.25 254.50,128.50 Q259.56,129.50 262.38,129.44 Q263.00,129.38 264.75,130.06 Q267.12,131.19 268.88,132.88 Q269.62,134.50 268.44,135.44 Z",to:"M255.81,70.62Q254.44,71.62 252.12,72.19 Q250.62,72.69 248.88,72.62 Q246.75,72.25 244.12,71.81 Q241.12,71.75 238.44,71.88 Q235.75,71.75 234.50,71.62 Q233.19,71.12 230.56,71.50 Q227.25,73.19 224.94,75.00 L224.75,73.12 Q225.00,72.94 225.56,72.56 Q226.19,72.06 226.62,71.75 Q225.25,71.94 223.12,72.19 Q220.94,72.31 219.75,72.12 Q218.94,71.69 220.00,71.12 Q221.75,70.69 224.00,70.44 Q225.44,70.12 225.94,70.06 Q224.88,69.38 223.31,68.50 Q221.88,68.06 221.06,67.69 Q220.12,66.75 220.50,66.31 Q221.50,66.38 223.44,67.19 Q225.31,67.88 226.50,68.38 Q225.25,66.88 224.38,65.19 Q224.50,63.88 225.69,64.19 Q226.50,65.50 227.62,67.44 Q227.62,68.31 229.81,68.56 Q234.38,69.31 240.31,69.31 Q245.44,68.38 247.94,67.31 Q248.50,67.00 250.38,67.06 Q253.00,67.25 255.25,68.12 Q256.56,69.31 255.81,70.62 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_47a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M282.25,155.12L300.38,158.62 L301.12,162.00 L301.00,164.25 L301.12,164.62 Q300.62,164.62 299.94,165.12 Q299.38,165.88 299.06,166.88 Q298.81,167.69 298.88,168.12 Q299.00,168.38 299.50,168.69 Q300.19,168.69 300.81,168.56 L301.56,166.81 L302.44,167.88 L303.50,168.00 Q303.81,167.06 304.62,165.75 Q305.69,164.62 306.50,164.06 Q305.94,163.12 305.38,161.88 Q305.06,160.75 305.06,160.19 Q304.56,159.38 304.12,157.69 Q304.06,155.56 304.31,154.12 Q303.69,153.69 302.38,153.75 Q300.62,154.50 299.38,155.38 L295.25,154.50 L281.62,149.75 ",to:"M250.19,102.75L243.06,119.81 L239.69,119.81 L237.50,119.25 L237.12,119.31 Q237.12,118.81 236.81,118.06 Q236.12,117.38 235.25,116.88 Q234.44,116.44 234.12,116.38 Q233.75,116.44 233.44,116.88 Q233.25,117.62 233.31,118.25 L234.88,119.31 L233.56,119.94 L233.31,121.00 Q234.06,121.44 235.25,122.50 Q236.12,123.75 236.56,124.69 Q237.50,124.31 238.88,124.06 Q240.00,124.00 240.62,124.12 Q241.50,123.75 243.25,123.69 Q245.25,124.06 246.69,124.56 Q247.19,124.00 247.50,122.69 Q247.06,120.81 246.50,119.44 L248.19,115.56 L255.50,103.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_48a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M285.44,161.25L303.50,165.44 L304.00,168.94 L303.81,171.12 L303.94,171.50 Q303.44,171.50 302.75,172.00 Q302.19,172.75 301.94,173.75 Q301.62,174.56 301.56,174.94 Q301.62,175.19 302.12,175.44 Q302.88,175.50 303.50,175.44 L304.25,173.75 L305.19,174.88 L306.25,174.94 Q306.56,174.06 307.38,172.81 Q308.44,171.69 309.31,171.19 Q308.88,170.31 308.38,169.06 Q308.12,167.88 308.12,167.31 Q307.56,166.44 307.19,164.69 Q307.25,162.56 307.56,161.19 Q306.94,160.75 305.62,160.75 Q303.81,161.38 302.50,162.19 L298.31,161.19 L285.00,156.06 ",to:"M257.69,106.69L257.88,125.19 L254.69,126.50 L252.44,126.88 L252.12,127.06 Q251.94,126.56 251.38,126.06 Q250.50,125.69 249.50,125.62 Q248.62,125.56 248.25,125.62 Q248.00,125.75 247.88,126.25 Q247.94,126.94 248.19,127.56 L250.06,127.94 L249.19,129.06 L249.31,130.12 Q250.19,130.19 251.69,130.69 Q253.00,131.50 253.75,132.19 Q254.44,131.56 255.62,130.81 Q256.62,130.31 257.25,130.19 Q257.94,129.44 259.50,128.62 Q261.50,128.12 263.00,128.12 Q263.25,127.44 263.00,126.12 Q261.88,124.50 260.81,123.44 L260.81,119.19 L262.62,105.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M253.50,120.31Q254.69,121.81 256.00,123.75 Q256.19,124.50 256.50,125.50 Q257.94,127.75 259.31,129.62 L259.94,131.75 L266.75,138.69 ",to:"M249.75,52.31Q250.06,54.19 250.31,56.50 Q250.12,57.25 249.94,58.25 Q250.12,60.94 250.44,63.25 L249.94,65.44 L252.62,74.75 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_50a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M265.00,134.31Q265.06,140.12 266.06,147.81 Q267.00,152.69 269.44,155.12 Q272.75,157.88 276.38,158.44 Q278.50,158.44 280.94,156.69 Q285.88,155.25 288.94,152.62 Q288.88,149.56 286.00,145.75 Q284.81,142.50 282.62,138.31 Q278.94,132.06 275.50,127.31 Q273.94,125.25 273.12,125.50 Q270.56,124.31 268.62,123.62 ",to:"M253.19,70.06Q250.50,75.19 247.69,82.44 Q246.12,87.19 247.12,90.50 Q248.69,94.50 251.69,96.69 Q253.50,97.75 256.50,97.38 Q261.50,98.50 265.50,97.62 Q266.88,94.88 266.19,90.12 Q266.62,86.75 266.75,82.00 Q266.44,74.75 265.75,68.94 Q265.38,66.38 264.50,66.19 Q262.81,63.94 261.50,62.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M254.88,117.50Q254.31,118.12 253.50,120.31 Q252.12,122.50 252.25,126.56 Q254.19,132.44 256.44,136.81 ",to:"M252.31,50.50Q251.50,50.75 249.75,52.31 Q247.50,53.56 245.69,57.19 Q244.50,63.25 244.44,68.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M254.50,123.38L255.38,124.12 L257.94,131.94 Q258.94,133.38 260.38,135.81 Q261.44,138.12 262.00,139.50 ",to:"M249.19,55.44L249.56,56.56 L248.12,64.62 Q248.25,66.38 248.38,69.19 Q248.25,71.75 248.06,73.19 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M253.50,120.31L254.88,126.44 260.31,139.38 ",to:"M249.75,52.31L248.06,58.31 246.62,72.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_54a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M266.06,131.44Q267.00,131.12 266.50,130.69 Q266.62,130.38 266.94,130.00 Q267.19,129.56 267.94,128.69 Q269.12,127.38 270.06,125.94 Q270.12,124.81 269.62,124.00 Q269.50,123.31 269.31,122.12 Q269.38,120.31 268.50,118.12 Q266.94,115.69 264.06,114.56 Q260.94,113.75 257.94,115.81 Q254.62,119.19 253.62,123.75 Q254.50,127.50 256.56,129.31 Q255.62,130.06 254.25,131.81 Q252.81,133.62 252.44,135.56 Q252.75,137.62 254.19,138.56 Q255.31,138.81 256.62,137.50 Q258.06,135.94 259.06,134.06 Q259.56,132.31 259.56,131.44 Q262.75,131.50 266.06,131.44 Z",to:"M255.50,68.06Q256.50,68.25 256.25,67.62 Q256.50,67.38 256.94,67.19 Q257.38,67.00 258.44,66.56 Q260.12,66.00 261.62,65.12 Q262.19,64.19 262.19,63.25 Q262.38,62.56 262.81,61.44 Q263.75,59.88 264.00,57.50 Q263.75,54.56 261.81,52.25 Q259.44,50.06 255.81,50.44 Q251.25,51.88 248.25,55.38 Q247.19,59.12 248.12,61.69 Q246.94,61.88 244.94,62.75 Q242.81,63.62 241.56,65.19 Q240.81,67.12 241.62,68.62 Q242.50,69.38 244.31,68.88 Q246.31,68.19 248.06,67.00 Q249.38,65.69 249.75,64.94 Q252.50,66.50 255.50,68.06 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_55a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M288.38,149.75L269.44,155.12 286.56,169.19 288.56,165.44 288.56,165.44 291.31,160.94 294.69,154.69 ",to:"M266.38,94.81L247.12,90.50 245.88,105.56 251.31,106.50 251.69,107.94 254.12,107.94 271.62,106.94 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_56a1)",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M270.75,129.25Q269.88,130.75 269.69,133.00 Q269.38,134.50 269.62,136.06 Q270.12,137.75 270.81,140.00 Q271.06,142.56 271.25,145.12 Q271.56,147.56 271.88,148.81 Q272.38,149.69 272.31,152.19 Q271.06,155.62 269.75,158.31 L271.44,157.88 Q271.56,157.56 271.88,157.00 Q272.19,156.31 272.50,155.88 Q272.38,157.12 272.44,159.19 Q272.44,161.12 272.75,162.12 Q273.25,162.75 273.75,161.69 Q273.88,159.88 273.88,157.81 Q273.94,156.38 274.06,155.94 Q274.75,156.69 275.69,157.88 Q276.19,158.94 276.62,159.56 Q277.44,160.06 277.88,159.69 Q277.69,158.88 276.88,157.50 Q276.06,155.94 275.50,154.94 Q276.94,155.69 278.56,156.06 Q279.62,155.50 279.25,154.44 Q278.00,154.00 276.31,153.56 Q275.44,153.75 275.00,151.94 Q273.88,148.06 273.44,142.75 Q273.75,137.81 274.50,135.25 Q274.69,134.62 274.56,133.06 Q274.12,130.69 273.12,128.94 Q271.88,128.06 270.75,129.25 Z",to:"M264.31,69.38Q265.69,70.44 267.88,71.06 Q269.25,71.62 270.81,71.69 Q272.56,71.44 274.94,71.25 Q277.50,71.38 280.06,71.75 Q282.56,71.88 283.81,71.88 Q284.75,71.50 287.19,72.06 Q290.38,73.81 292.75,75.62 L292.62,73.88 Q292.31,73.69 291.81,73.38 Q291.19,72.88 290.88,72.50 Q292.12,72.81 294.12,73.19 Q296.00,73.50 297.06,73.44 Q297.75,73.00 296.81,72.31 Q295.12,71.75 293.06,71.44 Q291.62,71.06 291.19,70.94 Q292.06,70.38 293.44,69.75 Q294.56,69.44 295.25,69.12 Q295.94,68.38 295.62,67.94 Q294.81,67.94 293.25,68.50 Q291.56,69.00 290.50,69.38 Q291.44,68.06 292.12,66.56 Q291.75,65.31 290.69,65.56 Q290.00,66.69 289.31,68.38 Q289.38,69.25 287.50,69.38 Q283.44,69.69 278.12,69.19 Q273.38,67.94 271.00,66.81 Q270.44,66.44 268.81,66.25 Q266.38,66.19 264.50,66.94 Q263.38,68.00 264.31,69.38 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M253.50,120.31L257.88,117.88 Q260.38,119.94 264.06,122.38 Q266.25,122.88 268.81,123.88 Q273.25,127.25 276.50,130.25 ",to:"M249.75,52.31L254.75,52.25 Q255.94,55.19 258.06,59.12 Q259.69,60.62 261.50,62.75 Q263.75,67.81 265.25,72.00 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M257.88,117.88L262.31,118.31 Q263.44,119.19 266.25,120.75 Q269.38,121.88 272.69,123.06 Q275.75,124.56 277.25,125.56 ",to:"M254.75,52.25L258.44,54.75 Q259.00,56.06 260.75,58.75 Q262.94,61.25 265.31,63.88 Q267.25,66.69 268.12,68.25 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M254.88,117.50L262.06,113.88 Q264.19,114.31 268.44,115.12 Q273.31,116.00 276.69,116.56 ",to:"M252.31,50.50L260.38,50.69 Q262.00,52.12 265.38,54.88 Q269.25,57.94 271.94,60.06 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M257.88,117.88Q261.81,118.56 267.12,119.38 Q270.62,119.56 272.25,119.50 Q273.56,119.50 274.00,119.69 Q275.00,120.06 275.56,120.44 Q276.12,120.38 277.12,120.56 Q278.12,120.94 278.81,121.38 ",to:"M254.75,52.25Q257.88,54.75 262.19,57.94 Q265.12,59.75 266.62,60.50 Q267.75,61.12 268.06,61.50 Q268.69,62.31 269.06,62.94 Q269.56,63.19 270.38,63.81 Q271.06,64.62 271.50,65.31 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M254.88,117.50Q258.06,116.56 262.44,116.12 Q264.81,116.62 266.88,117.75 Q270.12,118.38 273.12,118.81 Q275.50,119.38 276.31,119.69 ",to:"M252.31,50.50Q255.56,51.19 259.62,52.88 Q261.44,54.44 262.75,56.44 Q265.31,58.50 267.75,60.31 Q269.56,61.94 270.12,62.62 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M254.88,117.50Q255.56,116.75 257.50,115.62 Q259.69,114.62 262.06,113.88 Q263.75,113.12 265.44,112.88 Q267.12,112.75 269.69,113.06 Q273.56,113.38 276.38,113.75 ",to:"M252.31,50.50Q253.25,50.19 255.50,50.06 Q257.88,50.19 260.38,50.69 Q262.25,50.81 263.81,51.44 Q265.31,52.12 267.44,53.62 Q270.62,55.75 273.00,57.44 "}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M258.00,124.69Q258.12,124.50 258.62,124.62 Q259.06,124.62 259.69,124.94 Q260.25,125.25 260.69,125.69 Q260.94,126.12 260.81,126.44 Q260.69,126.62 260.25,126.50 Q259.69,126.31 259.06,126.00 Q258.50,125.62 258.19,125.31 Q257.88,124.88 258.00,124.69 Z",to:"M251.62,58.25Q251.81,58.19 252.19,58.50 Q252.56,58.75 253.00,59.31 Q253.38,59.88 253.50,60.44 Q253.50,60.94 253.25,61.19 Q253.06,61.25 252.75,60.94 Q252.31,60.50 251.94,59.94 Q251.56,59.38 251.50,58.94 Q251.44,58.44 251.62,58.25 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M253.88,119.31Q253.88,119.19 254.12,119.44 Q254.38,119.69 254.75,120.25 Q255.06,120.75 255.38,121.25 Q255.62,121.62 255.75,121.81 Q255.69,121.88 255.44,121.69 Q255.12,121.31 254.81,120.81 Q254.50,120.25 254.25,119.88 Q253.94,119.44 253.88,119.31 Z",to:"M247.50,58.88Q247.56,58.75 247.69,59.12 Q247.75,59.50 247.81,60.12 Q247.88,60.75 247.94,61.31 Q248.00,61.81 248.00,62.00 Q247.88,62.06 247.75,61.75 Q247.62,61.31 247.62,60.69 Q247.56,60.06 247.56,59.56 Q247.50,59.00 247.50,58.88 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})]),e("path",{fill:"url(#SGp6_65a1)",stroke:"none","stroke-width":"3.00"},[e("animate",{fill:"freeze",begin:"Sa.begin+3.50s",dur:"1.00s",attributeName:"d",from:"M279.56,124.75Q279.56,121.00 284.19,122.38 Q290.94,126.75 298.19,135.00 Q302.56,141.62 304.44,148.06 Q307.25,154.06 308.12,159.69 Q308.19,168.19 306.38,171.25 Q304.81,169.38 302.31,160.88 Q299.56,152.88 296.44,145.88 Q293.69,141.56 290.75,139.31 Q287.12,135.94 283.94,132.38 Q280.31,127.94 279.56,124.75 Z",to:"M252.69,120.75Q254.00,115.88 258.06,116.81 Q263.19,121.25 267.44,130.69 Q269.44,138.56 269.00,146.62 Q269.69,153.88 268.56,161.06 Q265.62,172.19 262.75,176.56 Q261.88,174.38 262.38,163.75 Q262.44,153.75 261.88,145.19 Q260.69,140.06 258.56,137.69 Q256.19,134.00 254.31,129.94 Q252.25,124.81 252.69,120.75 Z"}),e("set",{fill:"freeze",begin:"Sa.begin+4.50s",attributeName:"d",to:"M0,0"})])]),e("g",{id:"SVG_End"},[e("rect",{fill:"white",x:"0",y:"0",width:"512",height:"384"}),e("use",{"xlink:href":"#BSp1a1"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-143.50,-36.38L-145.38,-7.25 -146.00,-6.62 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-134.50,-30.50Q-136.12,-28.88 -139.19,-25.81 Q-142.50,-22.12 -144.75,-19.62 L-136.56,-5.69 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-132.38,-16.56Q-134.62,-13.56 -134.88,-9.38 Q-132.75,-6.56 -129.88,-7.25 Q-128.56,-9.88 -129.31,-13.75 Q-130.44,-16.81 -132.38,-16.56 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-125.56,-17.25L-121.25,-6.62 Q-122.19,-10.94 -122.50,-15.81 Q-122.00,-18.88 -120.00,-17.69 Q-117.19,-13.94 -115.06,-9.75 Q-116.12,-13.88 -116.44,-18.06 Q-115.31,-20.38 -113.19,-17.88 Q-111.25,-12.19 -110.12,-6.62 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-107.81,-15.38Q-107.12,-18.69 -104.75,-18.50 Q-100.62,-15.00 -99.12,-10.44 Q-101.94,-8.00 -106.56,-9.19 Q-108.50,-11.69 -107.81,-15.38 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-97.12,-22.81L-93.38,-9.19 Q-94.44,-13.19 -94.62,-17.88 Q-92.94,-20.19 -90.94,-20.38 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-86.00,-15.31L-84.12,-7.25 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-87.19,-23.38L-86.25,-18.69 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M395.50,12.50L392.88,53.25 392.00,54.12 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M408.19,20.69Q405.88,22.88 401.62,27.25 Q396.88,32.38 393.81,35.94 L405.25,55.50 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M411.12,40.25Q407.94,44.38 407.62,50.31 Q410.56,54.12 414.62,53.25 Q416.44,49.56 415.44,44.19 Q413.81,39.81 411.12,40.25 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M420.69,39.25L426.75,54.12 Q425.44,48.00 425.00,41.31 Q425.62,37.00 428.50,38.69 Q432.38,43.88 435.44,49.81 Q433.81,43.94 433.44,38.12 Q434.94,34.81 438.06,38.38 Q440.75,46.25 442.31,54.12 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M445.56,41.88Q446.50,37.19 449.88,37.56 Q455.56,42.38 457.69,48.81 Q453.69,52.12 447.31,50.56 Q444.56,46.94 445.56,41.88 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M460.50,31.50L465.75,50.56 Q464.19,44.88 464.00,38.38 Q466.38,35.12 469.19,34.94 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M476.12,42.00L478.75,53.25 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M474.44,30.69L475.81,37.25 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-115.06,52.81L-117.69,93.56 -118.56,94.44 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-102.38,61.00Q-104.62,63.19 -108.94,67.56 Q-113.62,72.69 -116.75,76.25 L-105.31,95.81 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-99.44,80.56Q-102.56,84.69 -102.94,90.62 Q-99.94,94.44 -95.94,93.56 Q-94.06,89.88 -95.12,84.50 Q-96.69,80.12 -99.44,80.56 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-89.88,79.56L-83.81,94.44 Q-85.12,88.31 -85.56,81.62 Q-84.88,77.31 -82.06,79.00 Q-78.12,84.19 -75.12,90.12 Q-76.69,84.25 -77.12,78.44 Q-75.56,75.12 -72.50,78.69 Q-69.75,86.56 -68.25,94.44 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-65.00,82.19Q-64.00,77.50 -60.69,77.88 Q-54.94,82.69 -52.88,89.12 Q-56.81,92.44 -63.25,90.88 Q-65.94,87.25 -65.00,82.19 Z"}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-50.06,71.81L-44.81,90.88 Q-46.31,85.19 -46.56,78.69 Q-44.19,75.44 -41.38,75.25 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-34.44,82.31L-31.81,93.56 "}),e("path",{fill:"none",stroke:"none","stroke-width":"1.00",d:"M-36.12,71.00L-34.75,77.56 "}),e("path",{fill:"#99ffcc",stroke:"none","stroke-width":"3.00",d:"M-31.50,-17.88L516.44,-17.88 521.75,178.00 -26.19,178.00 -31.50,-17.88 Z"}),e("path",{fill:"url(#SGp2_26a1)",stroke:"none","stroke-width":"3.00",d:"M-41.62,165.19L537.94,165.19 534.19,409.25 -31.50,409.25 -41.62,165.19 Z"}),e("path",{fill:"#ffffff",stroke:"none",d:"M437.31,236.00Q452.62,236.25 464.12,239.25 Q474.44,242.56 475.31,247.00 Q474.44,251.44 464.12,254.75 Q452.62,257.75 437.31,258.00 Q421.94,257.75 410.50,254.75 Q400.12,251.44 399.31,247.00 Q400.12,242.56 410.50,239.25 Q421.94,236.25 437.31,236.00 Z"}),e("path",{fill:"#ffffff",stroke:"none",d:"M235.44,206.06Q287.19,206.50 325.81,212.44 Q360.50,218.94 363.31,227.75 Q360.50,236.50 325.81,243.06 Q287.19,248.94 235.44,249.44 Q183.62,248.94 145.06,243.06 Q110.31,236.50 107.56,227.75 Q110.31,218.94 145.06,212.44 Q183.62,206.50 235.44,206.06 Z"}),e("path",{fill:"#ffffff",stroke:"none",d:"M22.50,213.06Q42.88,213.38 58.12,217.69 Q71.81,222.44 72.94,228.81 Q71.81,235.19 58.12,239.94 Q42.88,244.19 22.50,244.56 Q2.06,244.19 -13.12,239.94 Q-26.81,235.19 -27.94,228.81 Q-26.81,222.44 -13.12,217.69 Q2.06,213.38 22.50,213.06 Z"}),e("path",{fill:"url(#SGp2_30a1)",stroke:"none",d:"M332.69,203.25Q330.38,200.69 324.50,197.81 Q316.25,196.44 310.12,196.44 L238.12,193.69 Q212.25,193.94 177.88,196.44 Q153.25,198.88 143.56,205.31 Q138.94,215.62 142.94,223.81 L151.81,228.62 Q163.38,232.12 192.94,235.50 Q230.88,236.31 264.88,234.81 Q284.88,233.75 290.25,232.06 Q297.12,231.19 303.25,228.62 Q315.81,223.38 325.19,219.06 "}),e("path",{fill:"url(#SGp2_31a1)",stroke:"none",d:"M37.38,152.25Q39.00,136.94 42.62,117.19 Q45.75,105.88 50.50,99.44 Q54.88,91.19 62.19,83.88 Q69.81,76.19 81.75,69.75 Q91.31,64.25 110.44,59.00 Q139.94,51.50 167.81,45.62 Q183.50,41.44 190.00,41.38 Q202.81,42.31 210.19,44.31 L173.69,63.88 Q164.00,68.75 147.56,78.38 Q133.50,87.25 120.25,97.12 Q107.31,107.31 97.38,115.19 Q89.44,118.50 81.75,124.56 Q68.69,140.19 59.56,153.50 L37.38,162.50 "}),e("path",{fill:"url(#SGp2_32a1)",stroke:"none",d:"M46.25,170.81Q41.81,167.94 37.38,162.50 Q29.50,157.81 37.38,152.25 Q57.38,148.12 91.50,140.12 Q122.44,128.00 147.56,114.00 Q164.62,103.25 178.19,94.00 Q202.88,81.25 219.94,73.56 Q218.06,78.88 212.50,90.94 Q205.69,104.19 197.44,117.94 Q190.56,128.38 184.19,137.12 Q175.88,149.56 170.88,157.25 L169.62,161.88 Q152.94,179.19 126.44,196.44 Q103.19,201.12 86.75,196.06 Q76.69,195.94 70.69,191.38 Q56.81,181.62 47.00,173.06 "}),e("path",{fill:"url(#SGp2_33a1)",stroke:"none",d:"M37.38,152.25Q30.88,152.25 20.56,160.44 Q9.94,172.06 4.94,193.12 Q5.56,220.06 10.19,238.88 L34.19,237.06 Q39.19,236.38 47.19,234.25 Q54.69,230.88 58.94,228.31 Q48.12,224.50 35.44,215.56 Q27.94,206.62 27.62,194.94 Q27.69,181.06 32.88,170.81 Q39.69,164.69 45.25,164.69 L45.25,156.44 "}),e("path",{fill:"url(#SGp2_34a1)",stroke:"none",d:"M201.56,203.00Q199.06,198.50 196.62,191.19 Q196.00,183.81 196.62,179.50 L209.75,175.94 Q212.50,170.19 212.12,162.25 Q208.06,155.12 199.50,153.06 Q190.12,153.94 183.56,159.19 Q180.19,162.94 181.94,167.31 Q183.06,172.12 186.06,175.69 Q189.38,178.19 191.69,178.69 Q191.25,184.88 191.69,193.75 Q193.31,200.81 195.00,204.12 "}),e("path",{fill:"#610000",stroke:"none",d:"M191.00,157.38Q188.94,157.50 187.50,160.00 Q186.12,162.69 186.06,166.44 Q186.12,170.12 187.50,173.00 Q188.94,175.56 191.00,175.88 Q193.00,175.75 194.56,173.31 Q195.88,170.50 196.00,166.81 Q195.88,163.06 194.56,160.31 Q193.00,157.69 191.00,157.38 Z"}),e("path",{fill:"url(#SGp2_36a1)",stroke:"none",d:"M301.88,206.69Q303.94,202.31 306.00,195.06 Q306.50,187.75 306.00,183.38 L295.00,179.31 Q292.62,173.50 293.00,165.56 Q296.31,158.62 303.56,156.88 Q311.38,158.06 316.94,163.56 Q319.69,167.44 318.31,171.75 Q317.31,176.50 314.88,180.00 Q312.06,182.38 310.12,182.75 Q310.44,189.00 310.12,197.81 Q308.75,204.81 307.38,208.06 "}),e("path",{fill:"url(#SGp2_37a1)",stroke:"none",d:"M261.88,198.19Q261.31,199.31 263.38,196.62 Q267.44,190.75 273.44,181.06 Q279.25,170.50 282.56,163.88 Q279.12,172.25 273.56,183.94 Q268.06,193.00 264.88,197.12 "}),e("path",{fill:"url(#SGp2_38a1)",stroke:"none",d:"M238.88,198.81Q239.56,199.94 236.81,197.25 Q231.19,191.44 222.94,181.88 Q214.88,171.44 210.38,164.88 Q215.06,173.12 222.75,184.75 Q230.25,193.75 234.75,197.81 "}),e("path",{fill:"#610000",stroke:"none",d:"M310.69,161.50Q312.31,161.69 313.62,164.25 Q314.75,167.00 314.88,170.75 Q314.75,174.44 313.62,177.25 Q312.31,179.75 310.69,180.00 Q309.00,179.75 307.75,177.25 Q306.56,174.44 306.50,170.75 Q306.56,167.00 307.75,164.25 Q309.00,161.69 310.69,161.50 Z"}),e("path",{fill:"url(#SGp2_40a1)",stroke:"none",d:"M431.75,194.56Q430.00,180.12 426.25,162.31 Q423.00,152.62 418.06,148.81 Q413.44,142.94 405.81,139.62 Q397.81,136.06 385.38,136.06 Q375.25,135.75 355.31,140.81 Q324.44,149.25 295.31,158.50 Q278.75,162.88 272.00,166.31 Q258.50,174.19 250.94,180.19 L289.12,179.94 Q299.12,179.62 316.38,180.31 Q331.12,181.62 345.06,184.31 Q358.56,187.50 369.00,189.94 Q377.25,188.94 385.38,190.88 Q399.00,199.44 408.56,207.81 L431.75,204.81 "}),e("path",{fill:"#e8e8e8",stroke:"none",d:"M250.88,290.62Q313.88,291.38 360.94,301.69 Q403.38,313.06 406.88,328.44 Q403.44,343.69 361.12,355.12 Q314.19,365.38 251.19,366.19 Q188.06,365.38 141.06,355.12 Q98.62,343.69 95.19,328.44 Q98.50,313.06 140.88,301.69 Q187.81,291.38 250.88,290.62 Z"}),e("path",{fill:"url(#SGp2_42a1)",stroke:"none","stroke-width":"3.00",d:"M255.38,277.56Q306.94,278.69 345.38,293.44 Q391.69,313.12 382.62,331.75 Q336.75,343.75 250.88,343.38 Q168.25,343.75 128.00,331.75 Q120.00,313.12 165.31,293.44 Q203.75,278.69 255.38,277.56 Z"}),e("path",{fill:"url(#SGp2_43a1)",stroke:"none","stroke-width":"3.00",d:"M250.31,134.69L263.31,134.31 Q263.50,148.12 263.88,171.19 Q264.06,185.00 264.50,208.06 Q265.12,249.50 265.69,281.81 Q266.31,283.19 264.75,285.25 Q261.25,287.25 255.62,287.94 Q249.75,287.88 245.94,286.12 Q244.19,283.69 244.88,281.81 Q245.31,268.00 246.19,245.00 Q246.69,231.19 247.56,208.25 Q249.06,166.88 250.31,134.69 Z"}),e("path",{fill:"url(#SGp2_44a1)",stroke:"none","stroke-width":"3.00",d:"M255.19,137.56Q255.75,137.06 259.50,134.44 Q264.44,130.25 272.06,125.56 Q278.81,121.94 286.69,120.31 Q294.50,118.56 303.56,119.38 Q312.62,119.94 322.75,124.31 Q334.62,130.56 343.69,138.50 Q349.94,144.94 351.44,150.19 Q354.44,157.44 353.19,159.31 Q350.62,156.50 343.69,149.44 Q336.19,144.75 327.62,141.50 Q320.38,138.88 313.81,137.38 Q307.12,134.75 300.50,133.62 Q294.25,133.75 286.62,135.50 Q275.44,137.00 267.75,138.06 "}),e("path",{fill:"url(#SGp2_45a1)",stroke:"none","stroke-width":"3.00",d:"M256.19,137.69Q256.12,137.19 253.25,134.44 Q248.75,130.19 241.69,125.44 Q235.44,121.75 228.19,120.06 Q220.88,118.19 212.62,118.94 Q204.19,119.44 194.94,123.81 Q184.00,130.00 175.69,137.88 Q169.88,144.31 168.50,149.50 Q165.69,156.69 166.88,158.56 Q169.19,155.75 175.69,148.75 Q182.56,144.12 190.44,140.94 Q197.12,138.38 203.25,136.88 Q209.31,134.31 215.44,133.31 Q221.19,133.44 228.25,135.25 Q238.50,136.81 245.62,138.00 "}),e("path",{fill:"url(#SGp2_46a1)",stroke:"none","stroke-width":"3.00",d:"M256.19,137.69Q256.19,137.19 258.50,134.69 Q261.88,130.81 267.31,126.69 Q272.00,123.50 277.50,122.44 Q282.94,121.19 289.25,122.69 Q295.56,123.88 302.69,129.00 Q310.94,136.06 317.25,144.62 Q321.62,151.50 322.75,156.81 Q324.81,164.25 323.94,166.06 Q322.12,163.06 317.25,155.56 Q312.06,150.31 306.12,146.50 Q301.00,143.38 296.44,141.38 Q291.75,138.25 287.12,136.69 Q282.75,136.38 277.50,137.62 Q269.69,138.31 264.31,138.88 "}),e("path",{fill:"url(#SGp2_47a1)",stroke:"none","stroke-width":"3.00",d:"M255.19,137.56Q255.00,133.31 252.69,126.81 Q249.31,121.44 244.19,117.69 Q239.62,114.12 234.44,113.25 Q229.19,112.19 223.38,114.44 Q217.50,116.44 211.12,123.25 Q203.62,132.56 198.06,143.56 Q194.19,152.31 193.44,158.88 Q191.69,168.19 192.62,170.31 Q194.12,166.50 198.44,156.88 Q203.06,150.06 208.56,144.94 Q213.19,140.75 217.44,137.94 Q221.69,133.75 226.00,131.50 Q230.06,130.81 235.12,131.88 Q242.38,132.19 247.44,132.44 "}),e("path",{fill:"url(#SGp2_48a1)",stroke:"none","stroke-width":"3.00",d:"M260.25,135.88Q260.62,131.62 262.75,125.38 Q265.50,120.31 269.44,117.06 Q272.88,114.06 276.62,113.81 Q280.31,113.31 284.25,116.31 Q288.19,119.00 292.19,126.62 Q296.69,136.94 299.75,148.69 Q301.69,158.00 301.75,164.75 Q302.19,174.31 301.44,176.38 Q300.62,172.31 298.38,162.12 Q295.62,154.69 292.25,148.88 Q289.31,144.06 286.56,140.75 Q283.88,136.00 281.12,133.19 Q278.31,132.00 274.75,132.56 Q269.56,131.94 266.00,131.56 "}),e("path",{fill:"url(#SGp2_49a1)",stroke:"none","stroke-width":"3.00",d:"M256.19,137.69Q256.12,133.50 254.81,127.19 Q252.81,121.94 249.69,118.38 Q246.88,115.00 243.69,114.25 Q240.44,113.31 236.75,115.69 Q233.00,117.81 228.94,124.75 Q224.06,134.06 220.38,145.00 Q217.81,153.81 217.25,160.44 Q216.00,169.62 216.56,171.69 Q217.56,167.88 220.38,158.25 Q223.38,151.44 226.94,146.25 Q229.88,141.94 232.62,139.06 Q235.31,134.88 238.06,132.50 Q240.56,131.62 243.75,132.56 Q248.31,132.69 251.50,132.81 "}),e("path",{fill:"url(#SGp2_50a1)",stroke:"none","stroke-width":"3.00",d:"M255.50,139.56Q255.50,135.38 256.44,129.12 Q257.81,124.00 260.06,120.62 Q262.00,117.38 264.25,116.81 Q266.50,116.06 269.06,118.69 Q271.62,121.00 274.50,128.12 Q277.81,137.75 280.44,148.94 Q282.25,157.88 282.69,164.50 Q283.50,173.75 283.12,175.75 Q282.38,171.88 280.44,162.12 Q278.31,155.12 275.88,149.69 Q273.75,145.25 271.88,142.25 Q269.94,137.94 268.12,135.44 Q266.31,134.50 264.19,135.25 Q261.00,135.06 258.81,135.00 "}),e("path",{fill:"url(#SGp2_51a1)",stroke:"none","stroke-width":"3.00",d:"M252.69,120.75Q254.00,115.88 258.06,116.81 Q263.19,121.25 267.44,130.69 Q269.44,138.56 269.00,146.62 Q269.69,153.88 268.56,161.06 Q265.62,172.19 262.75,176.56 Q261.88,174.38 262.38,163.75 Q262.44,153.75 261.88,145.19 Q260.69,140.06 258.56,137.69 Q256.19,134.00 254.31,129.94 Q252.25,124.81 252.69,120.75 Z"}),e("path",{fill:"url(#SGp2_52a1)",stroke:"none","stroke-width":"3.00",d:"M258.75,123.25Q256.75,117.88 251.88,118.06 Q247.12,122.50 243.75,132.31 Q242.00,140.31 242.38,148.38 Q241.75,155.62 242.75,162.75 Q245.25,173.75 247.75,178.00 Q248.12,176.75 248.12,165.19 Q249.31,151.38 251.44,138.88 Q253.19,132.56 255.12,131.00 Q258.25,126.75 258.75,123.25 Z"}),e("path",{fill:"url(#SGp2_53a1)",stroke:"none",d:"M422.50,217.88Q427.12,212.62 431.75,204.81 Q439.94,195.88 431.75,194.56 Q410.75,201.31 375.12,211.69 Q342.62,216.38 316.38,215.94 Q298.50,214.50 284.44,212.56 Q258.56,213.19 240.69,214.69 Q242.56,219.00 248.44,228.06 Q255.56,237.62 264.25,246.88 Q271.38,253.62 278.06,258.94 Q286.75,266.88 292.06,271.81 L293.38,275.75 Q310.75,284.06 338.56,286.94 Q362.81,279.06 380.06,265.12 Q390.56,259.56 396.94,251.69 Q411.44,234.44 421.75,220.56 "}),e("path",{fill:"url(#SGp2_54a1)",stroke:"none",d:"M431.25,194.19Q439.31,191.88 449.44,193.56 Q455.81,197.44 457.62,209.19 Q458.44,226.50 457.25,240.00 L437.31,247.00 Q433.19,248.25 426.06,249.62 Q418.62,250.06 414.06,249.88 Q420.19,243.88 427.50,234.00 Q431.81,225.81 432.25,218.25 Q433.31,209.38 430.00,204.62 Q423.12,203.06 416.81,205.00 L419.44,199.69 "}),e("path",{fill:"url(#SGp2_55a1)",stroke:"none","stroke-width":"1.00",d:"M256.00,70.94Q254.50,71.94 252.19,72.44 Q250.69,72.94 249.06,72.94 Q247.00,72.50 244.31,72.06 Q241.38,72.00 238.62,72.12 Q235.88,72.00 234.56,71.94 Q233.31,71.38 230.75,71.75 Q227.44,73.44 225.12,75.25 L224.88,73.38 Q225.12,73.19 225.75,72.81 Q226.38,72.31 226.81,72.00 Q225.44,72.19 223.25,72.44 Q221.12,72.62 219.94,72.44 Q219.06,71.94 220.12,71.31 Q221.88,70.88 224.12,70.69 Q225.62,70.44 226.12,70.38 Q225.00,69.69 223.44,68.81 Q222.06,68.31 221.25,67.94 Q220.31,67.06 220.69,66.62 Q221.69,66.69 223.62,67.44 Q225.50,68.12 226.69,68.62 Q225.38,67.12 224.50,65.44 Q224.62,64.12 225.81,64.44 Q226.69,65.75 227.88,67.69 Q227.88,68.56 230.00,68.88 Q234.50,69.62 240.44,69.56 Q245.56,68.56 248.12,67.50 Q248.69,67.19 250.50,67.25 Q253.19,67.38 255.44,68.31 Q256.81,69.56 256.00,70.94 Z"}),e("path",{fill:"url(#SGp2_56a1)",stroke:"none","stroke-width":"1.00",d:"M250.19,102.75L243.06,119.81 L239.69,119.81 L237.50,119.25 L237.12,119.31 Q237.12,118.81 236.81,118.06 Q236.12,117.38 235.25,116.88 Q234.44,116.44 234.12,116.38 Q233.75,116.44 233.44,116.88 Q233.25,117.62 233.31,118.25 L234.88,119.31 L233.56,119.94 L233.31,121.00 Q234.06,121.44 235.25,122.50 Q236.12,123.75 236.56,124.69 Q237.50,124.31 238.88,124.06 Q240.00,124.00 240.62,124.12 Q241.50,123.75 243.25,123.69 Q245.25,124.06 246.69,124.56 Q247.19,124.00 247.50,122.69 Q247.06,120.81 246.50,119.44 L248.19,115.56 L255.50,103.19 "}),e("path",{fill:"url(#SGp2_57a1)",stroke:"none","stroke-width":"1.00",d:"M257.81,106.94L258.00,125.44 L254.88,126.75 L252.69,127.12 L252.31,127.31 Q252.12,126.88 251.56,126.31 Q250.69,125.94 249.69,125.81 Q248.81,125.75 248.44,125.81 Q248.12,125.94 248.00,126.50 Q248.12,127.19 248.44,127.81 L250.25,128.19 L249.31,129.31 L249.50,130.38 Q250.38,130.50 251.88,131.00 Q253.19,131.75 253.94,132.44 Q254.62,131.75 255.81,131.00 Q256.81,130.50 257.44,130.38 Q258.12,129.69 259.69,128.94 Q261.69,128.44 263.19,128.38 Q263.44,127.62 263.19,126.31 Q262.06,124.75 261.00,123.75 L261.00,119.50 L262.88,105.25 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.94,52.50Q250.25,54.38 250.50,56.75 Q250.31,57.50 250.19,58.50 Q250.31,61.19 250.62,63.50 L250.06,65.62 L252.75,75.00 "}),e("path",{fill:"url(#SGp2_59a1)",stroke:"none","stroke-width":"1.00",d:"M253.38,70.31Q250.62,75.44 247.81,82.69 Q246.25,87.50 247.25,90.81 Q248.88,94.75 251.88,96.94 Q253.75,98.00 256.75,97.62 Q261.69,98.69 265.62,97.81 Q267.00,95.12 266.38,90.44 Q266.88,87.06 266.94,82.31 Q266.62,75.06 265.94,69.19 Q265.56,66.62 264.69,66.44 Q263.00,64.19 261.69,62.69 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.50,50.75Q251.69,51.00 249.94,52.50 Q247.69,53.81 245.81,57.44 Q244.69,63.50 244.69,68.44 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.38,55.75L249.69,56.81 L248.31,64.94 Q248.44,66.69 248.56,69.50 Q248.44,72.06 248.25,73.50 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.94,52.50L248.19,58.56 246.81,72.56 "}),e("path",{fill:"url(#SGp2_63a1)",stroke:"none","stroke-width":"3.00",d:"M255.62,68.25Q256.56,68.44 256.38,67.88 Q256.62,67.69 257.12,67.50 Q257.56,67.25 258.69,66.81 Q260.38,66.25 261.81,65.44 Q262.38,64.50 262.38,63.50 Q262.56,62.75 262.94,61.62 Q263.81,60.12 264.12,57.81 Q263.94,54.94 262.00,52.56 Q259.62,50.31 255.94,50.69 Q251.38,52.12 248.38,55.62 Q247.38,59.38 248.31,61.94 Q247.12,62.19 245.12,63.06 Q242.94,63.94 241.69,65.44 Q241.00,67.44 241.88,68.94 Q242.69,69.69 244.50,69.19 Q246.44,68.50 248.25,67.25 Q249.56,66.00 249.94,65.25 Q252.69,66.75 255.62,68.25 Z"}),e("path",{fill:"url(#SGp2_64a1)",stroke:"none","stroke-width":"1.00",d:"M266.56,95.06L247.25,90.81 246.00,105.81 251.56,106.75 251.88,108.19 254.31,108.19 271.88,107.12 "}),e("path",{fill:"url(#SGp2_65a1)",stroke:"none","stroke-width":"1.00",d:"M264.50,69.62Q265.88,70.69 268.06,71.31 Q269.44,71.88 271.00,71.94 Q272.75,71.69 275.12,71.50 Q277.75,71.62 280.31,71.94 Q282.75,72.06 284.00,72.12 Q285.00,71.69 287.38,72.25 Q290.50,74.06 292.88,75.88 L292.88,74.12 Q292.56,73.94 292.00,73.56 Q291.38,73.06 291.00,72.75 Q292.25,73.00 294.25,73.38 Q296.19,73.75 297.25,73.69 Q297.88,73.25 296.94,72.56 Q295.25,72.00 293.25,71.69 Q291.81,71.31 291.38,71.25 Q292.25,70.69 293.62,70.00 Q294.75,69.62 295.50,69.38 Q296.19,68.62 295.81,68.19 Q294.88,68.19 293.31,68.75 Q291.69,69.25 290.69,69.62 Q291.62,68.31 292.31,66.81 Q291.94,65.56 290.88,65.81 Q290.19,66.94 289.50,68.62 Q289.56,69.44 287.69,69.62 Q283.62,70.00 278.31,69.50 Q273.50,68.19 271.12,67.00 Q270.56,66.69 268.94,66.56 Q266.50,66.50 264.62,67.19 Q263.56,68.25 264.50,69.62 Z"}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M249.94,52.50L254.94,52.50 Q256.12,55.50 258.25,59.44 Q259.88,60.88 261.62,63.00 Q263.94,68.06 265.44,72.31 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M254.94,52.50L258.62,55.06 Q259.25,56.38 261.00,59.00 Q263.19,61.50 265.50,64.12 Q267.44,66.94 268.31,68.50 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.50,50.75L260.50,51.00 Q262.12,52.38 265.50,55.12 Q269.44,58.19 272.19,60.31 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M254.94,52.50Q258.06,55.00 262.31,58.19 Q265.25,60.00 266.75,60.75 Q267.88,61.38 268.25,61.81 Q268.94,62.62 269.25,63.19 Q269.75,63.38 270.62,64.00 Q271.31,64.88 271.69,65.56 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.50,50.75Q255.69,51.44 259.75,53.06 Q261.56,54.62 262.88,56.69 Q265.44,58.75 267.88,60.56 Q269.69,62.19 270.31,62.94 "}),e("path",{fill:"none",stroke:"#000000","stroke-width":"3.00",d:"M252.50,50.75Q253.44,50.44 255.69,50.38 Q258.00,50.50 260.50,51.00 Q262.38,51.12 264.00,51.69 Q265.50,52.38 267.56,53.88 Q270.81,56.00 273.25,57.69 "}),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00",d:"M251.75,58.56Q251.94,58.44 252.38,58.75 Q252.75,59.00 253.19,59.56 Q253.50,60.12 253.62,60.69 Q253.69,61.19 253.50,61.38 Q253.25,61.44 252.94,61.12 Q252.50,60.75 252.12,60.25 Q251.75,59.69 251.69,59.19 Q251.56,58.69 251.75,58.56 Z"}),e("path",{fill:"#000000",stroke:"none","stroke-width":"1.00",d:"M247.69,59.19Q247.69,59.06 247.81,59.44 Q247.88,59.75 248.00,60.38 Q248.06,61.00 248.12,61.56 Q248.12,62.06 248.12,62.25 Q248.06,62.25 248.00,61.94 Q247.88,61.50 247.81,60.94 Q247.69,60.31 247.69,59.81 Q247.62,59.31 247.69,59.19 Z"}),e("set",{fill:"freeze",begin:"0s;click",attributeName:"display",to:"none"})]),e("rect",{fill:"black",x:"-100%",y:"-100%",width:"300%",height:"100%"}),e("rect",{fill:"black",x:"-100%",y:"100%",width:"300%",height:"100%"}),e("rect",{fill:"black",x:"-100%",y:"0",width:"100%",height:"100%"}),e("rect",{fill:"black",x:"100%",y:"0",width:"100%",height:"100%"})])],-1),Wp=[jp,Up];function Vp(t,s){return p(),f("div",Bp,Wp)}const Kp=Q(Rp,[["render",Vp]]),Jp="/php-cours/assets/kurtcobain-f262dd7e.svg",Xp={},Yp={class:"slide"},ef=m(`<div class="heading">while Loops</div><div class="content"><p> L&#39;instruction while de PHP est la construction d&#39;itération la plus générale du langage. En termes simples, elle exécute de manière répétée un bloc d&#39;instructions (normalement indentées) tant qu&#39;un test situé en haut de l&#39;instruction continue d&#39;être évalué à une valeur vraie. On l&#39;appelle une &quot;boucle&quot; parce que le contrôle revient au début de l&#39;instruction jusqu&#39;à ce que le test devienne faux. </p><div class="flex-container"><div style="width:20%;"><p><b>Format général</b></p></div><div class="codeblock"><pre style="margin:0;line-height:125%;">            <span style="color:#008800;font-weight:bold;">while</span> (test) { <span style="color:#888888;">// Test en boucle</span>
              statements <span style="color:#888888;">//Corps de la boucle</span>
            }</pre></div></div><br><div class="flex-container"><div style="width:20%;"><p><b>Exemple</b></p></div><div class="codeblock"><pre style="margin:0;line-height:125%;">            <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">while</span>(<span style="color:#008800;font-weight:bold;">True</span>){
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;Here we are now </span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\r\\n</span><span style="background-color:#fff0f0;">&quot;</span>;
            }
            <span style="color:#557799;">?&gt;</span></pre></div></div><img src="`+Jp+'" class="html-css-logo" style="width:40%;left:57%;top:62%;height:unset;"></div>',2),tf=[ef];function sf(t,s){return p(),f("div",Yp,tf)}const nf=Q(Xp,[["render",sf]]),af={},of={class:"slide"},lf=e("div",{class:"heading"},"while Loops",-1),rf=e("div",{class:"content"},[e("p",null," Le code suivant compte à partir de la valeur de a jusqu'à, mais sans inclure, b. Nous verrons plus tard une façon plus simple de le faire avec une boucle foreach. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupfy68q"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),cf=[lf,rf];function df(t,s){return p(),f("div",of,cf)}const pf=Q(af,[["render",df]]),ff={},Qf={class:"slide"},uf=m(`<div class="heading">break, continue</div><div class="content"><p><b>break: </b>Saute hors de la boucle la plus proche (au-delà de l&#39;énoncé de la boucle). </p><p><b>continue: </b>Saut au sommet de la boucle la plus proche (à la ligne d&#39;en-tête de la boucle). </p><p> En tenant compte des instructions break et continue, le format général de la boucle while se présente comme suit ressemble à ceci : </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">while</span>(test){
              declarations
              <span style="color:#008800;font-weight:bold;">if</span>( test){
                  <span style="color:#008800;font-weight:bold;">break</span>; <span style="color:#888888;">// Quitter la boucle maintenant, ignorer else si présent</span>
              }
              <span style="color:#008800;font-weight:bold;">if</span> (test){
                  <span style="color:#008800;font-weight:bold;">continue</span>; <span style="color:#888888;">// Aller au début de la boucle maintenant, à test1</span>
              }
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),hf=[uf];function gf(t,s){return p(),f("div",Qf,hf)}const bf=Q(ff,[["render",gf]]),mf={},_f={class:"slide"},yf=e("div",{class:"heading"},"while Loops - continue",-1),vf=e("div",{class:"content"},[e("p",null," L'instruction continue provoque un saut immédiat au début d'une boucle. Elle permet aussi parfois d'éviter l'imbrication des instructions "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yupvfzca"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),xf=[yf,vf];function $f(t,s){return p(),f("div",_f,xf)}const kf=Q(mf,[["render",$f]]),Sf={},Mf={class:"slide"},Lf=e("div",{class:"heading"},"while Loops - break",-1),wf=e("div",{class:"content"},[e("p",null," L'instruction break provoque une sortie immédiate d'une boucle. Comme le code qui la suit dans la boucle n'est pas exécuté si l'instruction break est atteinte, vous pouvez aussi parfois éviter l'imbrication en incluant une instruction break. l'imbrication en incluant un break. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yurtejsz"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Gf=[Lf,wf];function zf(t,s){return p(),f("div",Mf,Gf)}const Nf=Q(Sf,[["render",zf]]),qf={},Pf={class:"slide"},Tf=e("div",{class:"heading"},"while Loops - exercise",-1),Cf=e("div",{class:"content"},[e("p",null," Comptez de 1 à 100 en utilisant une boucle while et affichez chaque étape sur la console avec echo. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yurtpfna"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Ef=[Tf,Cf];function Df(t,s){return p(),f("div",Pf,Ef)}const Zf=Q(qf,[["render",Df]]),Ff={},Af={class:"slide"},Hf=e("div",{class:"heading"},"while Loops - exercise",-1),Of=e("div",{class:"content"},[e("p",null,"imprimer tous les éléments d'un array en utilisant une boucle while"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yurtvr6c"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),If=[Hf,Of];function Rf(t,s){return p(),f("div",Af,If)}const Bf=Q(Ff,[["render",Rf]]),jf={},Uf={class:"slide"},Wf=m(`<div class="heading">For Loop</div><div class="content"><p>L&#39;instruction for crée une boucle avec 3 expressions facultatives</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#000080;font-weight:bold;">for</span> (expression <span style="color:#0000FF;">1</span>; expression <span style="color:#0000FF;">2</span>; expression <span style="color:#0000FF;">3</span>) {
            <span style="color:#008800;font-style:italic;">// code block to be executed</span>
          }</pre></div><p><b>L&#39;expression 1</b> est exécutée (une fois) avant l&#39;exécution du bloc de code. </p><p><b>L&#39;expression 2</b> définit la condition d&#39;exécution du bloc de code. </p><p><b>L&#39;expression 3</b> est exécutée (à chaque fois) après l&#39;exécution du bloc de code. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
          <span style="color:#008800;font-weight:bold;">for</span> (<span style="color:#996633;">$counter</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">0</span>; <span style="color:#996633;">$counter</span> <span style="color:#333333;">&lt;</span> <span style="color:#0000DD;font-weight:bold;">10</span>; <span style="color:#996633;">$counter</span><span style="color:#333333;">++</span>) {
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;Counter is </span><span style="background-color:#eeeeee;">$counter</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\n</span><span style="background-color:#fff0f0;">&quot;</span>;
          }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Vf=[Wf];function Kf(t,s){return p(),f("div",Uf,Vf)}const Jf=Q(jf,[["render",Kf]]),Xf={},Yf={class:"slide"},eQ=e("div",{class:"heading"},"for Loops - exemple",-1),tQ=e("div",{class:"content"},[e("p",null,"imprimer tous les éléments d'un array en utilisant une boucle for"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yury4nhy"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),sQ=[eQ,tQ];function nQ(t,s){return p(),f("div",Yf,sQ)}const aQ=Q(Xf,[["render",nQ]]),iQ={},oQ={class:"slide"},lQ=m(`<div class="heading">foreach Loops</div><div class="content"><p> La boucle foreach est un itérateur générique en PHP : elle peut parcourir les éléments d&#39;une séquence ordonnée ou d&#39;un autre objet itérable. </p><br><p><b>Format général</b></p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">foreach</span> (<span style="color:#996633;">$array</span> <span style="color:#008800;font-weight:bold;">as</span> <span style="color:#996633;">$current</span>) {
              <span style="color:#888888;">// ...</span>
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),rQ=[lQ];function cQ(t,s){return p(),f("div",oQ,rQ)}const dQ=Q(iQ,[["render",cQ]]),pQ={},fQ={class:"slide"},QQ=e("div",{class:"heading"},"foreach Loops",-1),uQ=e("div",{class:"content"},[e("p",null,"imprimer tous les éléments d'un array en utilisant une boucle for"),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yurzpj2q"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),hQ=[QQ,uQ];function gQ(t,s){return p(),f("div",fQ,hQ)}const bQ=Q(pQ,[["render",gQ]]),mQ="/php-cours/assets/backTofunctions-8225b5d6.svg",_Q={},yQ={class:"slide"},vQ=e("div",{class:"heading"},"Retour vers le functions",-1),xQ=e("div",{class:"content"},[e("p",null," Puisque l'on a compris les fonctions et les structures de contrôle, nous allons maintenant examiner quelques fonctions utiles pour un grand nombre de types de données. "),e("img",{src:mQ,style:{height:"100%"}})],-1),$Q=[vQ,xQ];function kQ(t,s){return p(),f("div",yQ,$Q)}const SQ=Q(_Q,[["render",kQ]]),MQ={},LQ={class:"slide"},wQ=m(`<div class="heading">Strings revisités - String as array</div><div class="content"><p> Les chaînes de caractères peuvent être accédées et modifiées comme s&#39;il s&#39;agissait de tableaux. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#888888;">// Obtenez le premier caractère d&#39;une chaîne de caractères</span>
            <span style="color:#996633;">$str</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;Ceci est un test.&#39;</span> ;
            <span style="color:#996633;">$first</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$str</span>[<span style="color:#0000DD;font-weight:bold;">0</span>] ;

            <span style="color:#888888;">// Récupère le troisième caractère d&#39;une chaîne de caractères</span>
            <span style="color:#996633;">$third</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$str</span>[<span style="color:#0000DD;font-weight:bold;">2</span>] ;

            <span style="color:#888888;">// Récupère le dernier caractère d&#39;une chaîne de caractères.</span>
            <span style="color:#996633;">$str</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;This is still a test.&#39;</span> ;
            <span style="color:#996633;">$last</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$str</span>[<span style="color:#007020;">strlen</span>(<span style="color:#996633;">$str</span>)<span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">1</span>] ;

            <span style="color:#888888;">// Modifie le dernier caractère d&#39;une chaîne de caractères</span>
            <span style="color:#996633;">$str</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;Regarde la mer&#39;</span> ;
            <span style="color:#996633;">$str</span>[<span style="color:#007020;">strlen</span>(<span style="color:#996633;">$str</span>)<span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">1</span>] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;e&#39;</span> ;
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),GQ=[wQ];function zQ(t,s){return p(),f("div",LQ,GQ)}const NQ=Q(MQ,[["render",zQ]]),qQ={},PQ={class:"slide"},TQ=m(`<div class="heading">Strings revisités - strpos</div><div class="content"><p> Trouver la position de la première occurrence d&#39;une sous-chaîne dans une chaîne de caractères. C&#39;est utile pour savoir si une chaîne de caractères contient une autre chaîne de caractères. </p><p><b>Syntax:</b></p><div class="codeblock"><pre style="margin:0;line-height:125%;"><span style="color:#007020;">strpos</span>(string <span style="color:#996633;">$haystack</span>, string <span style="color:#996633;">$needle</span>, int <span style="color:#996633;">$offset</span> <span style="color:#333333;">=</span> <span style="color:#0000DD;font-weight:bold;">0</span>)<span style="color:#333333;">:</span> int<span style="color:#333333;">|</span><span style="color:#008800;font-weight:bold;">false</span></pre></div><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$text</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Bonjour le monde, bienvenue dans l&#39;univers.&quot;</span>;
            <span style="color:#996633;">$findme</span>   <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;monde&#39;</span>;
            <span style="color:#996633;">$pos</span> <span style="color:#333333;">=</span> <span style="color:#007020;">strpos</span>(<span style="color:#996633;">$text</span>, <span style="color:#996633;">$findme</span>);
            <span style="color:#008800;font-weight:bold;">if</span> (<span style="color:#996633;">$pos</span> <span style="color:#333333;">===</span> <span style="color:#008800;font-weight:bold;">false</span>) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;La chaîne &#39;</span><span style="background-color:#eeeeee;">$findme</span><span style="background-color:#fff0f0;">&#39; n&#39;a pas été trouvée dans la chaîne &#39;</span><span style="background-color:#eeeeee;">$text</span><span style="background-color:#fff0f0;">&#39;.&quot;</span>;
            } <span style="color:#008800;font-weight:bold;">else</span> {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;La chaîne de caractères &#39;</span><span style="background-color:#eeeeee;">$findme</span><span style="background-color:#fff0f0;">&#39; a été trouvée dans la chaîne de caractères &#39;</span><span style="background-color:#eeeeee;">$text</span><span style="background-color:#fff0f0;">&#39;&quot;</span>;
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot; et existe à la position </span><span style="background-color:#eeeeee;">$pos</span><span style="background-color:#fff0f0;">&quot;</span>;
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),CQ=[TQ];function EQ(t,s){return p(),f("div",PQ,CQ)}const DQ=Q(qQ,[["render",EQ]]),ZQ={},FQ={class:"slide"},AQ=e("div",{class:"heading"},"Strings revisités - strpos exercice",-1),HQ=e("div",{class:"content"},[e("p",null,' Je veux compter toutes les occurrences de "eau" dans ma liste de mots. Pouvez-vous finir ma fonction en utilisant la function strpos()? '),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvceakev"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),OQ=[AQ,HQ];function IQ(t,s){return p(),f("div",FQ,OQ)}const RQ=Q(ZQ,[["render",IQ]]),BQ={},jQ={class:"slide"},UQ=m(`<div class="heading">Strings revisités - strlen()</div><div class="content"><p> La function strlen() renvoie la longueur d&#39;une chaîne de caractères. La length d&#39;une chaîne vide est 0. </p><br><p>Exemple:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
              <span style="color:#996633;">$str</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;formation-bge&quot;</span>;
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#007020;">strlen</span>(<span style="color:#996633;">$str</span>); <span style="color:#888888;">//13</span>
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),WQ=[UQ];function VQ(t,s){return p(),f("div",jQ,WQ)}const KQ=Q(BQ,[["render",VQ]]),JQ={},XQ={class:"slide"},YQ=e("div",{class:"heading"},"Strings revisités - strlen() exercice",-1),eu=e("div",{class:"content"},[e("p",null," J'ai un tableau de plusieurs longs mots français. Je veux trouver le mot le plus long dans mon tableau en utilisant la function strlen(). "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvcf5m6v"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"100%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),tu=[YQ,eu];function su(t,s){return p(),f("div",XQ,tu)}const nu=Q(JQ,[["render",su]]),au={},iu={class:"slide"},ou=m(`<div class="heading">Strings revisités - explode()</div><div class="content"><p> La méthode explode() divise une chaîne de caractères en un tableau de sous-chaînes. </p><br><p>Syntax:</p><div class="codeblock"><pre style="margin:0;line-height:125%;"><span style="color:#007020;">explode</span>(separator,string,limit) </pre></div><br><p>Exemple:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$text</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Comment ça va aujourd&#39;hui ?&quot;</span>;
            <span style="color:#996633;">$words</span> <span style="color:#333333;">=</span> <span style="color:#007020;">explode</span>(<span style="background-color:#fff0f0;">&quot; &quot;</span>,<span style="color:#996633;">$text</span>);
            <span style="color:#996633;">$word</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$words</span>[<span style="color:#0000DD;font-weight:bold;">1</span>];
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$word</span>;
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),lu=[ou];function ru(t,s){return p(),f("div",iu,lu)}const cu=Q(au,[["render",ru]]),du={},pu={class:"slide"},fu=m(`<div class="heading"> Strings revisités - str_starts_with <a href="https://www.jdoodle.com/php-online-editor/">(PHP version 8)</a></div><div class="content"><p> Vérifie si une chaîne de caractères commence par une sous-chaîne donnée. </p><p>Syntax:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">str_starts_with(string <span style="color:#996633;">$haystack</span>, string <span style="color:#996633;">$needle</span>)<span style="color:#333333;">:</span> bool</pre></div><p>Exemple:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$string</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;Le renard paresseux a sauté par-dessus la clôture&#39;</span> ;
            <span style="color:#008800;font-weight:bold;">if</span> (str_starts_with(<span style="color:#996633;">$string</span>, <span style="background-color:#fff0f0;">&#39;Le&#39;</span>)) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;La chaîne commence par &#39;Le&#39;&quot;</span> ;
            }
            <span style="color:#008800;font-weight:bold;">if</span> (str_starts_with(<span style="color:#996633;">$string</span>, <span style="background-color:#fff0f0;">&#39;le&#39;</span>)) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;La chaîne de caractères commence par &#39;le&#39;&quot;</span> ;
            } <span style="color:#008800;font-weight:bold;">else</span> {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;&#39;le&#39; n&#39;a pas été trouvé car la casse ne correspond pas&quot;</span> ;
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Qu=[fu];function uu(t,s){return p(),f("div",pu,Qu)}const hu=Q(du,[["render",uu]]),gu={},bu={class:"slide"},mu=m(`<div class="heading"> Strings revisités - substr <a href="https://www.jdoodle.com/php-online-editor/">(PHP version 7)</a></div><div class="content"><p>Même code que str_starts_with mais avec substr.</p><p>Syntax:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">substr(string <span style="color:#996633;">$string</span>, int <span style="color:#996633;">$offset</span>, <span style="color:#333333;">?</span>int <span style="color:#996633;">$length</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">null</span>)<span style="color:#333333;">:</span> string</pre></div><p>Exemple:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$string</span> <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&#39;Le renard paresseux a sauté par-dessus la clôture&#39;</span>;
            <span style="color:#008800;font-weight:bold;">if</span> (substr(<span style="color:#996633;">$string</span>, <span style="color:#0000DD;font-weight:bold;">0</span>, <span style="color:#0000DD;font-weight:bold;">2</span>) <span style="color:#333333;">===</span> <span style="background-color:#fff0f0;">&#39;Le&#39;</span>) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;La chaîne commence par &#39;Le&#39;&quot;</span>;
            }
            <span style="color:#008800;font-weight:bold;">if</span> (substr(<span style="color:#996633;">$string</span>, <span style="color:#0000DD;font-weight:bold;">0</span>, <span style="color:#0000DD;font-weight:bold;">2</span>) <span style="color:#333333;">===</span> <span style="background-color:#fff0f0;">&#39;le&#39;</span>) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;La chaîne de caractères commence par &#39;le&#39;&quot;</span>;
            } <span style="color:#008800;font-weight:bold;">else</span> {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;&#39;le&#39; n&#39;a pas été trouvé car la casse ne correspond pas&quot;</span>;
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),_u=[mu];function yu(t,s){return p(),f("div",bu,_u)}const vu=Q(gu,[["render",yu]]),xu={class:"slide"},$u=e("div",{class:"heading"},"Array revisités",-1),ku={class:"content"},Su={__name:"SlidePresentation133",setup(t){return(s,n)=>(p(),f("div",xu,[$u,e("div",ku,[d(Ct)])]))}},Mu={},Lu={class:"slide"},wu=m(`<div class="heading">Array revisités - array_push</div><div class="content"><p> La méthode <b>array_push</b> ajoute de nouveaux éléments à la fin d&#39;un tableau. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);

            <span style="color:#007020;">array_push</span>(<span style="color:#996633;">$fruits</span>, <span style="background-color:#fff0f0;">&quot;Kiwi&quot;</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);

            <span style="color:#007020;">array_push</span>(<span style="color:#996633;">$fruits</span>, <span style="background-color:#fff0f0;">&quot;Strawberry&quot;</span>, <span style="background-color:#fff0f0;">&quot;Lemon&quot;</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);

            <span style="color:#996633;">$fruits</span>[] <span style="color:#333333;">=</span> <span style="background-color:#fff0f0;">&quot;Blueberry&quot;</span>;
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Gu=[wu];function zu(t,s){return p(),f("div",Lu,Gu)}const Nu=Q(Mu,[["render",zu]]),qu={},Pu={class:"slide"},Tu=e("div",{class:"heading"},"Array revisités - array_push",-1),Cu=e("div",{class:"content"},[e("p",null,` J'ai une array de noms. Je veux créer une nouvelle array avec les noms de la première array qui commencent par la lettre "a". Utilisez substr et la méthode array_push. `),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvcngwm6"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Eu=[Tu,Cu];function Du(t,s){return p(),f("div",Pu,Eu)}const Zu=Q(qu,[["render",Du]]),Fu={},Au={class:"slide"},Hu=m(`<div class="heading">Array revisités - array_pop()</div><div class="content"><p> La méthode array_pop() supprime (pop) le dernier élément d&#39;un tableau. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$stack</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Banane&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apfel&quot;</span>, <span style="background-color:#fff0f0;">&quot;Himbeere&quot;</span>);
            <span style="color:#996633;">$fruit</span> <span style="color:#333333;">=</span> <span style="color:#007020;">array_pop</span>(<span style="color:#996633;">$stack</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$stack</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Ou=[Hu];function Iu(t,s){return p(),f("div",Au,Ou)}const Ru=Q(Fu,[["render",Iu]]),Bu={},ju={class:"slide"},Uu=e("div",{class:"heading"}," Array revisités - array_pop ",-1),Wu=e("div",{class:"content"},[e("p",null," Souvent, vous verrez que array_pop() est utilisé lorsqu'il existe une liste d'actions qui doivent être traitées et retirées de la liste lorsqu'elles sont effectuées. L'exemple suivant est une démonstration naïve de ce concept. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvfm9cm6"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),Vu=[Uu,Wu];function Ku(t,s){return p(),f("div",ju,Vu)}const Ju=Q(Bu,[["render",Ku]]),Xu={},Yu={class:"slide"},eh=e("div",{class:"heading"},"Array revisités - array_shift",-1),th=e("div",{class:"content"},[e("p",null," La méthode array_shift supprime le premier élément d'un tableau. C'est donc comme le array_pop(), mais il commence au début du tableau. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvfmjsya"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),sh=[eh,th];function nh(t,s){return p(),f("div",Yu,sh)}const ah=Q(Xu,[["render",nh]]),ih={},oh={class:"slide"},lh=e("div",{class:"heading"},"Array revisités - array_shift()",-1),rh=e("div",{class:"content"},[e("p",null," Ainsi, puisque array_shift() est très similaire à array_pop() dans la mesure où array_shift() commence à supprimer un élément d'un tableau au début, nous pouvons maintenant écrire notre exemple de liste de tâches que j'ai montré plus tôt avec array_pop() en utilisant array_shift(). "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvfmn2r5"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ch=[lh,rh];function dh(t,s){return p(),f("div",oh,ch)}const ph=Q(ih,[["render",dh]]),fh={},Qh={class:"slide"},uh=m(`<div class="heading">Array revisités - array_unshift()</div><div class="content"><p> La méthode array_unshift() ajoute de nouveaux éléments au début d&#39;un tableau. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);
            <span style="color:#007020;">array_unshift</span>(<span style="color:#996633;">$fruits</span>, <span style="background-color:#fff0f0;">&quot;Lemon&quot;</span>,<span style="background-color:#fff0f0;">&quot;Pineapple&quot;</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),hh=[uh];function gh(t,s){return p(),f("div",Qh,hh)}const bh=Q(fh,[["render",gh]]),mh="/php-cours/assets/eventqueue-270cec8c.svg",_h={},yh={class:"slide"},vh=e("div",{class:"heading"}," Event Queue comme exemple - FIFO (First in first out) ",-1),xh=e("div",{class:"content"},[e("p",null," Chaque fois que l'utilisateur interagit avec votre programme - clique sur un bouton, déroule un menu ou appuie sur une touche - le système d'exploitation génère un événement. "),e("img",{src:mh,style:{width:"85%"}})],-1),$h=[vh,xh];function kh(t,s){return p(),f("div",yh,$h)}const Sh=Q(_h,[["render",kh]]);const Mh={name:"LightSwitch",data:function(){return{isSortActive:!1,isFilterActive:!1,data:[{name:"Eloise",droitier:!0,age:21},{name:"Charlotte",droitier:!0,age:47},{name:"Josephine",droitier:!1,age:28},{name:"Remy",droitier:!1,age:16},{name:"Louis",droitier:!0,age:34}],storeData:[],sortOptions:[{name:"Nom",type:"A - Z"},{name:"Nom",type:"Z - A"},{name:"Age",type:"ASC"},{name:"Age",type:"DESC"}],filterOptions:["Droitier","Gaucher"]}},mounted:function(){this.$nextTick(function(){this.storeData=[...this.data]})},methods:{sortArr:function(t){t==="A - Z"?this.data.sort((s,n)=>s.name<n.name?-1:1):t==="Z - A"?this.data.sort((s,n)=>s.name>n.name?-1:1):t==="ASC"?this.data.sort((s,n)=>s.age-n.age):t==="DESC"&&this.data.sort((s,n)=>n.age-s.age)},filterArr:function(t){t==="Droitier"?this.data=this.storeData.filter(s=>s.droitier):t==="Gaucher"&&(this.data=this.storeData.filter(s=>!s.droitier))},reset:function(){this.data=[...this.storeData]}}},Et=t=>(Ve("data-v-b1fdc8e8"),t=t(),Ke(),t),Lh={class:"navbar"},wh={class:"dropdown"},Gh=Et(()=>e("button",{class:"dropbtn"},[z(" Sort "),e("i",{class:"fa fa-caret-down"})],-1)),zh={class:"dropdown-content"},Nh=["onClick"],qh={class:"dropdown"},Ph=Et(()=>e("button",{class:"dropbtn"},[z(" Filter "),e("i",{class:"fa fa-caret-down"})],-1)),Th={class:"dropdown-content"},Ch=["onClick"],Eh={id:"list"};function Dh(t,s,n,a,i,o){return p(),f(i1,null,[e("div",Lh,[e("div",wh,[Gh,e("div",zh,[(p(!0),f(i1,null,D2(t.sortOptions,l=>(p(),f("a",{href:"#",class:"sortOption",key:l.id,onClick:c=>o.sortArr(l.type)},[z(F1(l.name)+" ",1),e("span",null,F1(l.type),1)],8,Nh))),128))])]),e("div",qh,[Ph,e("div",Th,[(p(!0),f(i1,null,D2(t.filterOptions,l=>(p(),f("a",{href:"#",class:"filterOption",key:l.id,onClick:c=>o.filterArr(l)},F1(l),9,Ch))),128))])]),e("a",{href:"#",class:"filterOption",onClick:s[0]||(s[0]=(...l)=>o.reset&&o.reset(...l))},"Reset")]),e("div",Eh,[(p(!0),f(i1,null,D2(t.data,l=>(p(),f("div",{class:"listItem show",key:l.id},[e("h2",null,F1(l.name),1),e("p",null,F1(l.droitier?"droitier":"gaucher"),1),e("p",null,F1(l.age),1)]))),128))])],64)}const Dt=Q(Mh,[["render",Dh],["__scopeId","data-v-b1fdc8e8"]]),Zh={class:"slide"},Fh=e("div",{class:"heading"},"Array revisités - sort()",-1),Ah={class:"content"},Hh=e("p",null,"La fonction sort() trie les éléments d'un tableau.",-1),Oh={__name:"SlidePresentation142",setup(t){return(s,n)=>(p(),f("div",Zh,[Fh,e("div",Ah,[Hh,d(Dt)])]))}},Ih={},Rh={class:"slide"},Bh=m(`<div class="heading">Array revisités - sort()</div><div class="content"><p>La fonction sort() trie les éléments d&#39;un tableau.</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);
            <span style="color:#007020;">sort</span>(<span style="color:#996633;">$fruits</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);
          <span style="color:#557799;">?&gt;</span></pre></div><br><p> Dans l&#39;exemple ci-dessus, le tableau est trié par ordre alphabétique. </p></div>`,2),jh=[Bh];function Uh(t,s){return p(),f("div",Rh,jh)}const Wh=Q(Ih,[["render",Uh]]),Vh={},Kh={class:"slide"},Jh=m(`<div class="heading">Array revisités - array_reverse()</div><div class="content"><p> La méthode array_reverse() inverse l&#39;ordre des éléments d&#39;un tableau. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#007020;">array_reverse</span>(<span style="color:#996633;">$fruits</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Xh=[Jh];function Yh(t,s){return p(),f("div",Kh,Xh)}const eg=Q(Vh,[["render",Yh]]),tg={},sg={class:"slide"},ng=e("div",{class:"heading"},"Array revisités - array_reverse()",-1),ag=e("div",{class:"content"},[e("p",null," En connaissant sort() et array_reverse(), pouvez-vous maintenant trier une liste de mots de Z à A ? "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvfqav58"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ig=[ng,ag];function og(t,s){return p(),f("div",sg,ig)}const lg=Q(tg,[["render",og]]),rg={},cg={class:"slide"},dg=m(`<div class="heading">Array revisités - in_array()</div><div class="content"><p> La méthode in_array() renvoie un résultat positif si un tableau contient une valeur spécifiée. Elle renvoie false si la valeur n&#39;est pas trouvée. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);
            <span style="color:#996633;">$result</span> <span style="color:#333333;">=</span> <span style="color:#007020;">in_array</span>(<span style="background-color:#fff0f0;">&quot;Mango&quot;</span>, <span style="color:#996633;">$fruits</span>);
            <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$result</span>; <span style="color:#888888;">//true</span>
          <span style="color:#557799;">?&gt;</span></pre></div><br><p> Si le troisième paramètre, strict, vaut true, la fonction in_array() vérifiera également les types suivants </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$a</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&#39;1.10&#39;</span>, <span style="color:#6600EE;font-weight:bold;">12.4</span>, <span style="color:#6600EE;font-weight:bold;">1.13</span>);
            <span style="color:#008800;font-weight:bold;">if</span> (<span style="color:#007020;">in_array</span>(<span style="color:#6600EE;font-weight:bold;">1.13</span>, <span style="color:#996633;">$a</span>, <span style="color:#008800;font-weight:bold;">true</span>)) {
                <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;1.13 found with strict check</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\n</span><span style="background-color:#fff0f0;">&quot;</span>;
            }
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),pg=[dg];function fg(t,s){return p(),f("div",cg,pg)}const Qg=Q(rg,[["render",fg]]),ug={},hg={class:"slide"},gg=e("div",{class:"heading"},"Array revisités - in_array()",-1),bg=e("div",{class:"content"},[e("p",null," Quelqu'un a écrit une fonction contains qui vérifie si un élément est dans un tableau. Peut-on modifier le code en utilisant la fonction intégrée in_array() ? "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvfs9ns3"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"90%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),mg=[gg,bg];function _g(t,s){return p(),f("div",hg,mg)}const yg=Q(ug,[["render",_g]]),vg={},xg={class:"slide"},$g=m(`<div class="heading">Array revisités - array_merge()</div><div class="content"><p> La méthode array_merge() concatène deux tableaux ou plus. Elle renvoie un nouveau tableau, contenant les tableaux joints et ne modifie pas les tableaux existants. </p><p>Exemple:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$arr1</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Cecilie&quot;</span>, <span style="background-color:#fff0f0;">&quot;Lone&quot;</span>);
            <span style="color:#996633;">$arr2</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Emil&quot;</span>, <span style="background-color:#fff0f0;">&quot;Tobias&quot;</span>, <span style="background-color:#fff0f0;">&quot;Linus&quot;</span>);
            <span style="color:#996633;">$children</span> <span style="color:#333333;">=</span> <span style="color:#007020;">array_merge</span>(<span style="color:#996633;">$arr1</span>, <span style="color:#996633;">$arr2</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$children</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),kg=[$g];function Sg(t,s){return p(),f("div",xg,kg)}const Mg=Q(vg,[["render",Sg]]);const Lg={},Zt=t=>(Ve("data-v-fc8ab11a"),t=t(),Ke(),t),wg={class:"slide"},Gg=Zt(()=>e("div",{class:"heading"},"Callback",-1)),zg={class:"content"},Ng=Zt(()=>e("p",null," Un callback est une fonction passée comme argument à une autre fonction. Cette technique permet à une fonction d'appeler une autre fonction ",-1)),qg={version:"1.1",id:"Ilustration",xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",x:"0px",y:"0px",viewBox:"0 0 1979.9 1080",style:{"enable-background":"new 0 0 1979.9 1080"},"xml:space":"preserve",class:"svg-image"},Pg=m('<g id="background" data-v-fc8ab11a><g id="white_wall" data-v-fc8ab11a><polygon id="the_wall" class="st0" points="1509.7,1040.3 511.2,1014 608.2,276 1959.8,9.8 " data-v-fc8ab11a></polygon><polygon id="window" class="st1" points="1555.1,682.1 1027,616 1045.1,254 1710.6,134.4 " data-v-fc8ab11a></polygon><path id="trees" class="st2" d="M1029.8,585c0,0,10.5-54.9,84.3-56.7s107.8,74.7,107.8,74.7s62.1-25.3,114.5-12.5    c27.3,6.7,66.5,24.5,82,46.5c54.5-26.7,119.5-26.1,155.5-21l-18.8,66.1L1027,616L1029.8,585z" data-v-fc8ab11a></path><polygon id="window_bar" class="st3" points="1324.9,178.1 1265.9,658.8 1293.1,661.3 1363.7,165.4" data-v-fc8ab11a></polygon><polygon id="white_wall_shadow" class="st3" points="1045.1,254 1025,618.1 1010.7,613 1015.8,262.1 586.9,411.3 604.1,276.7     1955.7,10.5 1736.2,515.1 1710.6,134.4" data-v-fc8ab11a></polygon></g><polygon id="purple_wall" class="st4" points="18,168.9 198.5,1036.9 441.9,1021.1 663.2,998.8 604.2,276.4" data-v-fc8ab11a></polygon><polygon id="purple_wall_shadow" class="st5" points="614.4,401.7 99.8,560.6 18,168.9 604.2,276.4" data-v-fc8ab11a></polygon><g id="clock" style="display:none;" data-v-fc8ab11a><ellipse id="shadow_clock" transform="matrix(6.816390e-02 -0.9977 0.9977 6.816390e-02 369.6182 1222.0718)" class="st6" cx="839" cy="413.2" rx="58.4" ry="52.7" data-v-fc8ab11a></ellipse><ellipse id="clock_base" transform="matrix(6.816390e-02 -0.9977 0.9977 6.816390e-02 368.862 1230.5776)" class="st7" cx="843.2" cy="417.8" rx="58.9" ry="47.8" data-v-fc8ab11a></ellipse><polyline id="clock_hands" class="st8" points="844.5,383.4 843.2,417.8 859.5,433.1" data-v-fc8ab11a></polyline></g><g id="callendar" style="display:none;" data-v-fc8ab11a><polygon id="callendar_paper_back" class="st9" points="300.7,555.6 161.7,557.1 181.5,705.1 189.1,704.3 189.7,707.7 202.6,710.9     322,697.1   " data-v-fc8ab11a></polygon><polygon id="callendar_dark_bar" class="st10" points="303.5,578.8 165.7,586.9 161.7,557.1 300.7,555.6" data-v-fc8ab11a></polygon><polygon id="callendar_paper" class="st3" points="161.7,557.1 300.7,555.6 329.8,699.5 202.6,710.9" data-v-fc8ab11a></polygon><polygon id="callendar_dark_bar_2" class="st10" points="305.4,578.7 168.3,583.1 161.7,557.1 300.7,555.6" data-v-fc8ab11a></polygon><g id="callendar_lines" data-v-fc8ab11a><line class="st11" x1="180.6" y1="570.3" x2="259.2" y2="568.4" data-v-fc8ab11a></line><polygon class="st12" points="308.9,680.8 220.7,689.4 200.6,608.3 288.9,604.6 " data-v-fc8ab11a></polygon><line class="st12" x1="197.5" y1="599.8" x2="256" y2="597.9" data-v-fc8ab11a></line><line class="st12" x1="217.3" y1="607.5" x2="237.8" y2="687.3" data-v-fc8ab11a></line><line class="st12" x1="237.8" y1="606.4" x2="257.4" y2="685" data-v-fc8ab11a></line><line class="st12" x1="259.2" y1="607" x2="276.9" y2="684.5" data-v-fc8ab11a></line><line class="st12" x1="273.1" y1="606.4" x2="290.8" y2="683.9" data-v-fc8ab11a></line><line class="st12" x1="205.2" y1="626.9" x2="293.3" y2="621.3" data-v-fc8ab11a></line><line class="st12" x1="209.2" y1="643.1" x2="297" y2="635.3" data-v-fc8ab11a></line><line class="st12" x1="213.6" y1="658.6" x2="301.3" y2="650.9" data-v-fc8ab11a></line><line class="st12" x1="215.4" y1="674.2" x2="303.1" y2="666.4" data-v-fc8ab11a></line></g></g></g><g id="red_armchair" data-v-fc8ab11a><path id="red_armchair_back" class="st13" d="M678.3,875.3l-83.4-136.5L409.2,471.4c-40.2,31.1-83.1,92.1-32.4,245.3s139.5,260.2,139.5,260.2   l237.9,44.2l131.9,3.4l108-152.9L678.3,875.3z" data-v-fc8ab11a></path><path id="red_armchair_highlight" class="st14" d="M460.1,444.4c-99.9,24.7-103.8,116.8-81.1,190.8c22.7,74,29.9,127.3,63.6,114.1   c79-31,103.8,105.2,103.8,105.2l289.4-62.3c0,0-43.4-157.7-100.5-123.3s-57.8-22.1-76.6-88.3S583.7,413.9,460.1,444.4z" data-v-fc8ab11a></path><path id="interviewer_shadow" class="st13" d="M544.6,489.3c-8.7-23.1-58.7-26.3-87.4-6.1c-14.4,10.2-39.8,49.2-21.6,77.9   c6.1,9.7,35.5,46.5,35.5,46.5s-29.4,26.1-30.5,47c-4,79.3,37,28.1,80.9,124.3c17.5,38.3,37,32.5,37,32.5l66.4-12.2L544.6,489.3z" data-v-fc8ab11a></path></g><g id="table" data-v-fc8ab11a><g id="table_construction" data-v-fc8ab11a><polygon class="st15" points="1512.9,983.3 1212.5,967.9 1100.6,806.9 1425.7,732.8 1458.4,745.1" data-v-fc8ab11a></polygon><g data-v-fc8ab11a><path id="SVGID_1_" class="st15" d="M1369.3,786.5l1.5-29.5c0,0-294-32.6-335.3-24c-133.8,28-426,89.6-497.9,107.3                 c-0.5,0.1-0.9,0.2-1.4,0.4h-0.1c-75.4,17.6-35.7,174.5-35.7,174.5l313.3,7.5c1-19.3,5.8-62.3,36.2-73.9L1369.3,786.5z" data-v-fc8ab11a></path></g><g data-v-fc8ab11a><g data-v-fc8ab11a><path id="SVGID_3_" class="st16" d="M1427.2,732.7l-373.1-22.2c-8-1.2-16.2-0.9-24.1,0.7c-72.4,15.2-450.9,94.7-515.9,110.7      c-0.5,0.1-0.9,0.2-1.4,0.4h-0.1c-75.4,17.6-12.2,192.9-12.2,192.9l276.3,6.7c0,0,1-73,49.7-91.5l601.5-191.5      C1431.3,737.8,1430.7,732.9,1427.2,732.7z" data-v-fc8ab11a></path></g><g data-v-fc8ab11a><clipPath id="SVGID_4_" data-v-fc8ab11a><use xlink:href="#SVGID_3_" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><polygon class="st17" points="429.6,875.6 822.4,989.7 777,1022.4 500.5,1015.2" data-v-fc8ab11a></polygon></g></g></g><g id="shadows" data-v-fc8ab11a><g id="shadow_legs" data-v-fc8ab11a><polygon class="st18" points="912.4,736.7 875.6,744.2 1022.2,734 977.2,723.1 " data-v-fc8ab11a></polygon><polygon class="st18" points="1067.2,713.5 1036.2,716.5 1030.2,733.3 1085.3,730 " data-v-fc8ab11a></polygon></g><polygon id="shadow_hand" class="st18" points="1035.2,829.9 1028.3,866.1 1073.1,853.8 1056.9,812" data-v-fc8ab11a></polygon></g><g id="stuff_on_table" data-v-fc8ab11a><g id="phone" data-v-fc8ab11a><path id="shadow_phone" class="st18" d="M923.9,749.7c0,0-7.1,0.8-8.5,5.8c0,0-4.7,21.5-4.7,24.2s-4.2,9,11.5,11.3     c12.7,1.9,36.6,2.8,46.7,3.5c2.5,0.2,10.3-0.1,12.5-1.2l27.2-6L923.9,749.7z" data-v-fc8ab11a></path><path class="st19" d="M1005.2,789.5l-79-7.8c-4.5-0.4-7.7-3.1-7.3-7.6l3.2-22.1c0.4-4.5,4.1-5.6,8.5-5.2l75.5,5     c4.5,0.4,6.4,2.5,6,7l0.7,23.2C1012.4,786.5,1009.7,789.9,1005.2,789.5z" data-v-fc8ab11a></path><polygon id="phoneScreen" class="st10" points="934.1,749.2 931.4,776 1005.9,782.7 1005,753.8 " data-v-fc8ab11a></polygon><path class="st19" d="M949.4,785.4l-14-1.3c-0.8-0.1-1.4-0.8-1.3-1.6l0,0c0.1-0.8,0.8-1.4,1.6-1.3l14,1.3     c0.8,0.1,1.4,0.8,1.3,1.6l0,0C950.9,784.9,950.2,785.5,949.4,785.4z" data-v-fc8ab11a></path><circle class="st20" cx="927" cy="761.8" r="3.8" data-v-fc8ab11a></circle></g><g id="papers" data-v-fc8ab11a><polygon id="paper_bottom" class="st19" points="800.4,779.8 879.2,767.1 951.8,838.8 866.2,857 " data-v-fc8ab11a></polygon><polygon id="paper_top" class="st1" points="810.4,786.2 885.7,764 971.6,826 890.7,854.4 " data-v-fc8ab11a></polygon></g><g id="pen" data-v-fc8ab11a><path id="shadow_pen" class="st18" d="M693.7,807.6c0,0-23.6,5.2-20,8.2s33.7,4.9,45.5,3.1s48.6-5.7,48.6-5.7L693.7,807.6z" data-v-fc8ab11a></path><path class="st21" d="M716.5,816h-22.1c-2.1,0-3.9-1.7-3.9-3.9v-1.4c0-2.1,1.7-3.9,3.9-3.9h22.1c2.1,0,3.9,1.7,3.9,3.9v1.4     C720.3,814.3,718.6,816,716.5,816z" data-v-fc8ab11a></path><path class="st21" d="M767.8,813.2h-49.9c-1.7,0-3.1-1.4-3.1-3.1l0,0c0-1.7,1.4-3.1,3.1-3.1h49.9c1.7,0,3.1,1.4,3.1,3.1l0,0     C770.9,811.8,769.5,813.2,767.8,813.2z" data-v-fc8ab11a></path><path class="st19" d="M768.2,807l10.2,2.9v0.9l-10.6,2.3C767.8,813.2,767.1,807.8,768.2,807" data-v-fc8ab11a></path></g></g></g><g id="interviewer" data-v-fc8ab11a><g id="legs" data-v-fc8ab11a><path id="leg2" class="st22" d="M990.2,679.5l-99.7,12.2c-20.2,2.5-38.3,13.6-49.6,30.4l-22.5,34l177.2-36.7L990.2,679.5z" data-v-fc8ab11a></path><path id="leg1" class="st22" d="M1076.5,658.3l-99.7,12.5c-20.2,2.5-38.2,13.7-49.5,30.6L904.8,735l177.2-36.8L1076.5,658.3z" data-v-fc8ab11a></path><path id="highlight" class="st23" d="M827.2,742.4c0,0,24.5-35.1,73.6-39.5s77.1-9.5,77.1-9.5l5.5-13.3c0,0-99.3,3.5-126.3,23.1    C844.5,712.3,827.2,742.4,827.2,742.4z" data-v-fc8ab11a></path></g><g id="shoes" data-v-fc8ab11a><g id="shoe_2" data-v-fc8ab11a><path class="st10" d="M1116.1,603.7c-19.1,19.1-60.9,95.7-56.2,111.9c2.1,7,7.1,10.9,15.7,13.9c13.2,4.5,32.2-17.9,42.5-31.9     c16.9-23,39.3-57.4,40.6-71.9C1158.3,582.2,1130.1,589.8,1116.1,603.7z" data-v-fc8ab11a></path><path class="st21" d="M1144.4,593.6c-8.7-2.3-24.4-7.3-37.4,9.8c-13.1,17.1-31,49.3-37,52.3s-27.4,32.8-27.5,40.2     s17.6,26,22.7,29.2c5.1,3.2,10.6,5,10.6,5s-9.1-11.6-6.8-23.7s28.4-62,38.7-74.6c10.3-12.6,18.3-29.6,37.5-37.3" data-v-fc8ab11a></path><path class="st24" d="M1087.7,634.3c0,0-2.5-1.6-3.8-0.8c-12.4,8.2-6.2,18.9-2.1,23.6" data-v-fc8ab11a></path><path class="st25" d="M1110.9,699.1l-24.6-14.2c-2.4-1.4-3.2-4.4-1.8-6.8l0.8-1.5c1.4-2.4,4.4-3.2,6.8-1.8l24.6,14.2     c2.4,1.4,3.2,4.4,1.8,6.8l-0.8,1.5C1116.3,699.7,1113.3,700.5,1110.9,699.1z" data-v-fc8ab11a></path><path class="st25" d="M1133.9,656.6l-24.6-14.2c-2.4-1.4-3.2-4.4-1.8-6.8l0.8-1.5c1.4-2.4,4.4-3.2,6.8-1.8l24.6,14.2     c2.4,1.4,3.2,4.4,1.8,6.8l-0.8,1.5C1139.3,657.2,1136.2,658,1133.9,656.6z" data-v-fc8ab11a></path></g><g id="shoe_1" data-v-fc8ab11a><path class="st10" d="M1011.4,607.4c-14.6,22.4-13.8,111.8-3.4,124.8c4.5,5.7,13.4,6.5,21.9,5.6c13.1-1.4,17.5-29.7,20.9-47.1     c5.4-28.6,8.9-63.1,6.6-84.1c-1.2-10.7-6.3-17.8-11-20.1C1031.9,579.3,1020.7,593.2,1011.4,607.4z" data-v-fc8ab11a></path><path class="st21" d="M1032.1,581.9c-10.3,0.1-28.3,3.4-33.8,24.9s-4.5,63.1-25,68.2c-6.6,1.6-1.6,38.3,1.8,45.2     c3.4,6.9,29.6,16.2,36.4,16.9s12.6,1.1,12.6,1.1s-4-1.6-7.4-13.8c-3.4-12.3-6.7-148.3,29.8-137.9     C1046.5,586.5,1041.5,581.9,1032.1,581.9z" data-v-fc8ab11a></path><path class="st24" d="M990,645.5c0,0-0.5-0.1-1-0.1c0,0-6.4,22.9,6.3,26.3" data-v-fc8ab11a></path><path class="st24" d="M996.2,623.8c0,0-4.1-0.4-5.1,1.4c0,0-4.8,21.1,7.9,24.5" data-v-fc8ab11a></path><path class="st25" d="M1048.6,640.9l-29.1-6.1c-2.7-0.6-4.5-3.5-4-6.5l0.3-1.8c0.5-3,3.1-5,5.8-4.5l29.1,6.1     c2.7,0.6,4.5,3.5,4,6.5l-0.3,1.8C1053.9,639.4,1051.3,641.4,1048.6,640.9z" data-v-fc8ab11a></path><path class="st25" d="M1043,701.9l-30.4-6.3c-2.8-0.6-4.6-3.6-4.1-6.7l0.3-1.6c0.5-3.1,3.2-5.2,5.9-4.6l30.4,6.3     c2.8,0.6,4.6,3.6,4.1,6.7l-0.3,1.6C1048.4,700.5,1045.7,702.5,1043,701.9z" data-v-fc8ab11a></path></g></g><g id="arm_with_mug" data-v-fc8ab11a><path id="biceps" class="st26" d="M782.8,698.4l-30.5-32.1C716.4,623,662.5,604,662.5,604s-22.7,70.1,29.8,88.1    c68.4,23.3,85.7,14.6,89.2,13.9S784.3,702.1,782.8,698.4z" data-v-fc8ab11a></path><g id="forehand_mug" data-v-fc8ab11a><g id="coffee_mug" data-v-fc8ab11a><g data-v-fc8ab11a><g data-v-fc8ab11a><path id="SVGID_5_" class="st16" d="M715.6,535.6c14.9-0.2,25.4,3.2,26,9.1c0.6,5.8,5.5,58.7-23,58.7c-18.8,0-17,0-17,0        s-21,1.9-17.5-55.8C684.6,540.2,697.3,535.8,715.6,535.6z" data-v-fc8ab11a></path></g><g id="coffee_mug_shadows" data-v-fc8ab11a><defs data-v-fc8ab11a><path id="SVGID_6_" d="M715.6,535.6c14.9-0.2,25.4,3.2,26,9.1c0.6,5.8,5.5,58.7-23,58.7c-18.8,0-17,0-17,0s-21,1.9-17.5-55.8         C684.6,540.2,697.3,535.8,715.6,535.6z" data-v-fc8ab11a></path></defs><clipPath id="SVGID_8_" data-v-fc8ab11a><use xlink:href="#SVGID_6_" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path class="st27" d="M682.5,547.9c0.2,9.1,18.2,11.7,26.8,12c14.5,0.6,24-1.5,25.8-2.9c-0.1,4.5-2.8,41.7-14.2,46.9        c-11.5,5.2-29.8,2.6-29.8,2.6l-11.7-34.8L682.5,547.9z" data-v-fc8ab11a></path><clipPath id="SVGID_12_" data-v-fc8ab11a><use xlink:href="#SVGID_6_" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path class="st28" d="M688.4,548.7c0,0-4.5,38.6,8.9,53.9c13.4,15.2,7.3,4.3,7.3,4.3s-10.5-8-9.8-51.6        C697.2,541.4,688.4,548.7,688.4,548.7z" data-v-fc8ab11a></path></g></g><g id="mug_top" data-v-fc8ab11a><g data-v-fc8ab11a><ellipse id="SVGID_7_" class="st15" cx="713.4" cy="546.2" rx="24.7" ry="8.6" data-v-fc8ab11a></ellipse></g><g data-v-fc8ab11a><clipPath id="SVGID_15_" data-v-fc8ab11a><use xlink:href="#SVGID_7_" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><ellipse id="coffee" class="st29" cx="714.4" cy="553.7" rx="24.7" ry="8.6" data-v-fc8ab11a></ellipse></g></g><path id="handle" class="st30" d="M740.6,553c11.7-1.9,16.2-2.8,15.6,16s-8.7,24.3-23.4,22" data-v-fc8ab11a></path><g id="smoke" data-v-fc8ab11a><path id="smoke1" class="st31" d="M718.8,539.6c-3.3-11,1.2-13.7,2.2-23.5s-6.8-20.7-7.3-21.3c-0.5-0.7,13.8,7,15,14.8       C729.8,517.4,721.2,523.1,718.8,539.6z" data-v-fc8ab11a></path><path id="smoke2" class="st31" d="M706.7,547.8c-3.3-11,0.4-10.9,1.4-20.7s-2.8-22.8-6.6-24.1c7.5,2.1,11.9,15.6,13,23.4       C715.7,534.2,709.1,531.3,706.7,547.8z" data-v-fc8ab11a></path></g></g><path id="forehand" class="st26" d="M774.1,596.8c0.6-7.2-6.5-36.4-7.4-43.3s-17.7,1.5-21.2,2.6s-4.8,21.5-2.5,28.9     s11.2,16.7,11.2,16.7c2.3,18.7-8.3,39.1,2.1,78.4c10.3,39.1,26.2,18.3,26.2,18.3C782.7,690.1,773.5,603.9,774.1,596.8z" data-v-fc8ab11a></path></g></g><g id="body" data-v-fc8ab11a><path class="st32" d="M542.5,614.5c0,0,85.2-26.6,111-15.6c40.9,17.5,109.7,162.6,135.1,163.2c-36.3,8.2-110.3,25.7-159.7,36.3    c-29.2,6.3-66.8-56.5-66.8-56.5l-15.6-61.3L542.5,614.5z" data-v-fc8ab11a></path><path id="shadow" class="st33" d="M555.7,667.9c0,0,24.4,89.9,110.5,122.5l-62.7,13.4c-45.8-8.3-54.9-53.7-54.9-53.7L555.7,667.9z    " data-v-fc8ab11a></path></g><g id="arm_biceps" data-v-fc8ab11a><defs data-v-fc8ab11a><path id="SVGID_16_" d="M558.6,657.1c-0.2-8.8-5.5-47.3-5.5-47.3c-35.9,17-75.4,36.8-56.2,102.3c18.6,63.3,34.5,102.5,60.2,96.2     l8.5-17.2C576,734.4,558.8,665.9,558.6,657.1z" data-v-fc8ab11a></path></defs><use xlink:href="#SVGID_16_" style="overflow:visible;fill:#fccea4;" data-v-fc8ab11a></use><clipPath id="SVGID_17_" data-v-fc8ab11a><use xlink:href="#SVGID_16_" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path id="shadow_biceps" class="st34" d="M565.5,647.7c-10.3,5.6-46.9,13.6-45.6,30.8S525.5,727,530,767c1.7,14.5,10.8,57.3,24.7,61.6    c10.4,3.2-12.3,2.8-12.3,2.8l-62.1-116.1l16.6-78l57.3-35.6L565.5,647.7z" data-v-fc8ab11a></path></g><g id="shoulder" data-v-fc8ab11a><g data-v-fc8ab11a><path id="shoulder_base" class="st32" d="M554.6,604.7c-4.2-8.1-47.2,11.1-59.5,45.9c-12.3,34.7-4,51.9-4,51.9s59-24.4,77.1-6     C575.4,703.9,569.8,634,554.6,604.7z" data-v-fc8ab11a></path></g><g data-v-fc8ab11a><clipPath id="SVGID_19_" data-v-fc8ab11a><use xlink:href="#shoulder_base" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path id="shadow_shoulder" class="st35" d="M566.5,635.9c0,0-41.3-15.5-54.4,14.8c-7.8,18.1-8.1,38.7-8.1,38.7l-24.6,14.1l-0.7-39     l54.4-68.4l25,3.6L566.5,635.9z" data-v-fc8ab11a></path></g></g><g id="neck" data-v-fc8ab11a><path class="st33" d="M551.7,574.3c0,0-31.2-6.1-31.7,35.8c-0.4,33.1,43.3,24.4,58.8,28.4c65,16.8,81.9,10.1,74-21.4    c-6.7-26.7,1.9-29.2,1.9-29.2L551.7,574.3z" data-v-fc8ab11a></path><g id="lace2" data-v-fc8ab11a><path class="st36" d="M608.1,636.6c0,0-6.3,12.9-3,26.2s0.7,19.6,0.7,19.6" data-v-fc8ab11a></path><path class="st10" d="M610,677.6c-0.3,3.6-2.2,6.4-4.3,6.3c-2.1-0.1-3.6-3.1-3.3-6.7c0.3-3.6,2.2-6.4,4.3-6.3     C608.8,671,610.3,674,610,677.6z" data-v-fc8ab11a></path><path class="st37" d="M609.3,683.3c0.3,1.7-1.2,3.3-3.3,3.6c-2.1,0.2-4-1-4.3-2.7s1.2-3.3,3.3-3.6     C607.1,680.4,609,681.6,609.3,683.3z" data-v-fc8ab11a></path></g><g id="lace" data-v-fc8ab11a><path class="st36" d="M645.5,639.2c0,0,15.1,2.6,15,16.3s3.9,19.2,3.9,19.2" data-v-fc8ab11a></path><path class="st10" d="M659.2,671.1c1.1,3.4,3.6,5.7,5.6,5.1s2.8-3.8,1.7-7.3s-3.6-5.7-5.6-5.1S658.1,667.7,659.2,671.1z" data-v-fc8ab11a></path><path class="st37" d="M661.2,676.5c0.1,1.8,1.9,3,4,2.7s3.7-1.9,3.5-3.7c-0.1-1.8-1.9-3-4-2.7     C662.7,673.1,661.1,674.7,661.2,676.5z" data-v-fc8ab11a></path></g></g><g id="head" data-v-fc8ab11a><g id="head_base" data-v-fc8ab11a><g data-v-fc8ab11a><path id="SVGID_11_" class="st26" d="M533.3,484.3c-11.9-4.7-13.4,9.1-12.6,15.7s8,20.6,23.8,18.2c6.1,12.6,18.8,59.6,13.4,67.8      c-5.4,8.2,85.3,15.7,85.3,15.7l8.7-62.3c0,0,7.7-0.7,9.2-13.4c0.7-5.8-3.8-9-3.8-9s-1.8-20,11.2-25.6      c3.4-22.5,6.9-30.4-0.9-44.3c-7.9-14.1-87.5-30.8-87.5-30.8l-26.5,42.3l-23.4,21.6" data-v-fc8ab11a></path></g><g data-v-fc8ab11a><clipPath id="SVGID_21_" data-v-fc8ab11a><use xlink:href="#SVGID_11_" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path id="shadow_head" class="st38" d="M549.8,479.6l53.7-57.5l1.6,12.5l-6.4,37.8c0,0-29.7,14-9.8,58.1      c8.7,19.4,5.9,63.6,5.9,63.6l-52.3,0.1l-41.3-89.9l4.9-32.6l20.4,4.4L549.8,479.6z" data-v-fc8ab11a></path></g></g><g id="eyes" data-v-fc8ab11a><path class="st39" d="M625.8,501.6c-0.5,3.2-3.1,3.9-6.7,3.4c-3.5-0.5-6.5-2.1-6.1-5.3c0.5-3.2,3.7-5.4,7.2-4.9     C623.8,495.3,626.3,498.3,625.8,501.6z" data-v-fc8ab11a></path><path class="st39" d="M657.1,506.1c-0.6,3.1-2.6,3.7-4.8,3.3c-2.2-0.4-3.8-1.5-3.2-4.6s3-5.4,5.2-5     C656.5,500.1,657.7,502.9,657.1,506.1z" data-v-fc8ab11a></path></g><g id="eyebrows" data-v-fc8ab11a><path class="st10" d="M599.8,476.2c0.4,1.9,4.9-2.1,16.3-0.5c9.6,1.4,9.4,2.7,14,5.9c4.6,3.2,8-0.8,7.6-6s-8.2-8.3-21.3-9.6     C599.7,464.3,598.6,469.9,599.8,476.2z" data-v-fc8ab11a></path><path class="st10" d="M650.2,485.6c0,0-0.5-10.5,11.7-6.5c5.6,1.8,8.1,4,8.1,4c1.6,3.5,1,9.6-3,9.3c-4.1-0.3-0.4-3.6-9-4.2     C652.3,487.8,650.2,489.9,650.2,485.6z" data-v-fc8ab11a></path></g><g id="hair" data-v-fc8ab11a><g data-v-fc8ab11a><path id="hair_base" class="st10" d="M536.9,411.1c0,0,2.6,9.3,4.4,7s-3.7-29.2,81-38.9c35.6-4.1,58.2,2.4,78.4,9.3      c3.2,7.7,16,50.3-30.1,64.7c-11-11.1-26.5-15.5-46.9-17c-22.4-1.6-38.1,5.6-44,31.9c-22,18.7-20.3,23-20.3,23s-6,53.9,26.3,68      c17.2-24.1,22.1-29.6,39.3-27.8c9.5,6.3,26.9,8.3,26.9,8.3c7.5,6.1,5.6,14.2,5.1,26.8c-0.4,9.4,7.5,25,10.2,35.3      s-22.4,38.8-63.1,13.1c-31.1-19.7-47.5-34.6-54.1-42.6c0,0-1.5-25.1-2.5-44c-7-22.3-9.7-41.5-9.7-41.5s-4.5-0.8-6.7-2.8      c-8.4-17.7-5-23.9-7-32.4l6.5,3.5C530.5,454.7,527.6,429.1,536.9,411.1z" data-v-fc8ab11a></path></g><g id="hair_highlight" data-v-fc8ab11a><clipPath id="SVGID_23_" data-v-fc8ab11a><use xlink:href="#hair_base" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path class="st40" d="M700.6,388.5c0,0-13.8,57.8-30.1,64.7s47.7,1.7,47.7,1.7L708,388.6L700.6,388.5z" data-v-fc8ab11a></path><clipPath id="SVGID_25_" data-v-fc8ab11a><use xlink:href="#hair_base" style="overflow:visible;" data-v-fc8ab11a></use></clipPath><path class="st41" d="M649.1,538.4c0,0,8.3,16.2-5.6,30.5c-1.4,1.4,14.3,23.1,8.8,38.6c-5.2,14.8-23.6,23.2-23.6,23.2l53.5-7.4      l-3.7-61l-22-26.2L649.1,538.4z" data-v-fc8ab11a></path></g></g><path id="mouth" class="st39" d="M644.7,557.9c-0.8-0.6-2.8,0.8-11.1,0.3c-7-0.4-6.3-1.5-10.4-2.6c-4.1-1-5.3,0.3-3.6,2.1    c1.8,1.8,5.1,4.4,16.5,3.8C647.3,560.8,647.3,560,644.7,557.9z" data-v-fc8ab11a></path></g><g id="forehand_and_paper" data-v-fc8ab11a><g id="paper" data-v-fc8ab11a><path class="st42" d="M757.1,650.6c0.5,0.2,21.6,3.4,22.1,3.6c22.4,9.8,25.3,9.2,25.3,9.2c-34.2,26.7-69.8,78.8-75.4,94.7     l-77.4-9.9l12.8-19c0,0,34.7-50.6,41.3-57.3l5.3-4c0,0,15-10,21.5-12.1C737.7,654.1,757.1,650.6,757.1,650.6z" data-v-fc8ab11a></path><path class="st19" d="M779.8,654.3c0,0-15.9-6.7-38-2.3c-15.2,3.1-36.7,20.6-36.7,20.6s36.3-29,47.9-8.2     C759.4,650.9,771.5,653,779.8,654.3z" data-v-fc8ab11a></path></g><path id="hand_paper" class="st26" d="M558.1,809.5c37.4-9.1,62-43.7,73.3-53c6.7-5.5,16-12.6,22.9-18.6c22.6-1,42-6.6,42-6.6    s6.7-6.7,3.8-12.1c-1.3-2.4,2.3-7.2,3.9-11.3c2.1-5.3-0.3-10.6,3.4-15.6c6.1-8.3-10.9-6.4-31.6,1.2c-20.7,7.5-24.8,21.4-24.8,21.4    c-59.7,31-77.2,31.7-94.8,50.3c-6.6,7-6,11.7-12.7,24.8C536.8,803.1,544.7,808.8,558.1,809.5z" data-v-fc8ab11a></path></g></g><g id="ginger_dude" data-v-fc8ab11a><g id="ginger" data-v-fc8ab11a><g id="ginger_head" data-v-fc8ab11a><path id="ginger_head_base" class="st26" d="M1241.1,460.5c0,0-12.4,20.4-10.7,35.7c1.7,15.3,1.1,45.5,1.1,45.5s-14.1,19.2-13.6,22.1     c0.6,2.8,9.1,11.9,9.1,11.9s4.2,37.2,7,40.6c2.8,3.4,24.1,13.2,24.1,13.2l1.1,21.5c0,0,51.2,17.3,89.4-3.4     c-0.6-22.7,0-135.3,0-135.3l-76.4-25.5L1241.1,460.5z" data-v-fc8ab11a></path><path id="eye" class="st39" d="M1232.6,523.1c2.4,0,3.2,3.1,3.2,7.4c0,4.3-0.8,8.3-3.3,8.3s-4.4-3.5-4.4-7.9     C1228.2,526.6,1230.2,523.1,1232.6,523.1z" data-v-fc8ab11a></path><g id="ginger_hair" data-v-fc8ab11a><path class="st43" d="M1380.7,576l10.6-70.5l-0.8-66l-93.1-20.1c0,0-8.5,10.6-17,11.6c-7.8,1-39.6-8.8-44.6-10.3      c-1.5,9.3-0.3,21.5,1.2,37.4c0.8,8.6,23.2,20.1,23.2,20.1l-10.8,51.2c29.8-8,20.1,20.3,9.6,40.1c0.5,51.5,40.4,53.7,53.4,54.3      c13.3,0.8,44.7-2.4,44.7-2.4C1357.6,615.7,1379.5,583.5,1380.7,576z" data-v-fc8ab11a></path><path id="ginger_hair_highlight" class="st22" d="M1280.4,431c8.5-1.1,17.5-9.6,17.5-9.6s76.2,34.6,83.8,27c3.9,24.3-3.5,134.1-3.5,134.1      c13.6-22.7,27.5-126.2,27.5-126.2s-6.7-6.9-4.1-15.2c2.5-8.3-20.8-25.2-20.8-25.2l-6.4,6.9c-5.3,7.5-97.3-21.8-97.3-21.8      s-3.8,12.2-7.1,14.5c-7,4.8-24.6,3.3-24.6,3.3s-9.5,0.2-9.7,1.9C1240.8,422.3,1272.6,432,1280.4,431z" data-v-fc8ab11a></path></g><path id="ginger_eyebrow" class="st43" d="M1242.5,502.6l-10.8-4.3c-2.6-1-3.9-4-2.8-6.6l0,0c1-2.6,0.6-5.2,3.2-4.2l14.2,5.6     c2.6,1,2.9,6.5,1.9,9l0,0C1247.1,504.8,1245,503.6,1242.5,502.6z" data-v-fc8ab11a></path></g><g id="suit" data-v-fc8ab11a><path id="leg" class="st44" d="M1132.7,905.5l61.9-6.2l92.1,27.2l-164.5,103.8l-55.2-1c0,0,1.1-11.9,33.6-99.6     C1103.7,921.2,1123.6,906.4,1132.7,905.5z" data-v-fc8ab11a></path><path id="base" class="st25" d="M1409.5,870.7l8.9-187.9c0,0-44.9-35.9-76.2-35.9l-82.9,4c-8.8,1.9-14.5,3.3-32.2,10.6     c-8.6,3.6-48.3,25.6-48,34.9l17.5,193.8l5.6,74.3c0,31.3,86.1,66.8,117.4,66.8l4.2-8.8l43.8,12.1c0,0,22.7-31.4,22.7-62.7     l-12.6-81.8l22.9,1.2L1409.5,870.7z" data-v-fc8ab11a></path><path id="white_collar" class="st42" d="M1359.2,651.7l-105,13.6c0,0-1.8-22,2.8-26.6c51.2,19.1,91.2-2.3,91.2-2.3     L1359.2,651.7z" data-v-fc8ab11a></path><path id="collar" class="st10" d="M1248.6,649.7c-6.3,2-19,7.8-27.7,11.9c-4.3,2-4,8.3,0.5,9.9c9.9,3.5,24,5.6,25.9,6.2     c45.2,15.2,105-2.3,127.8-10.2c4.1-1.4,5-6.8,1.6-9.5l-18.4-14.3c-0.8-0.7-2-0.7-2.9-0.2c-9.2,5-58.7,29.7-104.7,6.4     C1250,649.6,1249.2,649.5,1248.6,649.7z" data-v-fc8ab11a></path><polygon id="back_shadow" class="st44" points="1328.2,916.8 1323.7,990.8 1340.3,994.5" data-v-fc8ab11a></polygon><g id="arm" data-v-fc8ab11a><path id="hand" class="st26" d="M1100.5,800.9c-25.7-9.8-49.5-5.6-64.4,12s-9.5,25.1-2.6,21.3c6.9-3.7,16.4-9.2,16.4-9.2      l27.8,24.9l37.7-30.4L1100.5,800.9z" data-v-fc8ab11a></path><path id="white_shirt" class="st42" d="M1119.6,816.3c-4.3-6-12.1-12.8-12.1-12.8s-51.1,7.2-37.8,44.6      c12.8,18.9,30.2,24.9,30.2,24.9L1119.6,816.3z" data-v-fc8ab11a></path><path id="suit_arm" class="st25" d="M1247.5,856.6l-127-47.9c0,0-45.2,2.1-38.9,54c14.8,31.2,167.1,53.4,167.1,53.4L1247.5,856.6z" data-v-fc8ab11a></path><g id="buttons" data-v-fc8ab11a><circle class="st39" cx="1096.4" cy="857.1" r="5.5" data-v-fc8ab11a></circle><circle class="st39" cx="1118" cy="868.2" r="5.5" data-v-fc8ab11a></circle></g></g><polygon id="arm_shadow" class="st44" points="1242,745.6 1248.6,916.1 1260.2,907.4" data-v-fc8ab11a></polygon></g></g></g><g id="black_armchair" data-v-fc8ab11a><path id="black_armchair_highlight" class="st21" d="M1505.6,1040.9L1736.2,515c0,0-9.8-11.8-89.3-12.5c-173.1-1.6-266.6,417-293.7,447.3   c-70.6,79.2-223.3-117.4-263.7,78.4" data-v-fc8ab11a></path><path id="dark" class="st44" d="M1662.6,544.7c-173.1,0-287.7,380.6-312.3,413c-73.5,96.8-244.5-108.4-274.1,71.6l429.4,11.6   l212.2-486.7C1717.8,554.3,1697.3,544.7,1662.6,544.7z" data-v-fc8ab11a></path></g><g id="fly" style="display:none;" data-v-fc8ab11a><path id="wing_2" class="st9" d="M299.6,388.5c0,0,5-19.3-11.8-26.2C271,355.5,288.3,385.4,299.6,388.5z" data-v-fc8ab11a></path><ellipse id="fly_base" class="st45" cx="299.5" cy="388.5" rx="10.5" ry="9.9" data-v-fc8ab11a></ellipse><ellipse id="fly_head" class="st45" cx="310" cy="388.5" rx="5" ry="7" data-v-fc8ab11a></ellipse><path id="wing_1" class="st9" d="M303,388.5c0,0-5-19.3,11.8-26.2C331.6,355.5,314.4,385.4,303,388.5z" data-v-fc8ab11a></path><g id="fly_legs" data-v-fc8ab11a><line class="st46" x1="305.1" y1="394.5" x2="307.8" y2="401.7" data-v-fc8ab11a></line><line class="st46" x1="302" y1="396.6" x2="302.9" y2="404.4" data-v-fc8ab11a></line><line class="st46" x1="297.9" y1="396.8" x2="297.5" y2="405.4" data-v-fc8ab11a></line><line class="st46" x1="294.3" y1="395.8" x2="293.2" y2="403.3" data-v-fc8ab11a></line></g></g><g id="phone-ringing" style="" data-v-fc8ab11a><path id="path3275" d="m 1010.5786,740.37404 c 1.4966,-0.24182 3.0383,-0.20157 4.5203,0.118 2.9128,0.62812 5.6012,2.39631 7.1668,4.93167 0.726,1.17563 1.209,2.50053 1.41,3.86753" style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;" data-v-fc8ab11a></path><path id="path3287" d="m 1010.6932,730.52212 c 3.444,0.43361 6.788,1.64431 9.7113,3.51606 1.6168,1.03522 3.1114,2.27567 4.3459,3.74596 0.9158,1.09067 1.6832,2.30085 2.339,3.565 0.7005,1.35014 1.276,2.76504 1.7169,4.22076" style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;" data-v-fc8ab11a></path></g>',8),Tg=[Pg];function Cg(t,s){return p(),f("div",wg,[Gg,e("div",zg,[Ng,(p(),f("svg",qg,Tg))])])}const Eg=Q(Lg,[["render",Cg],["__scopeId","data-v-fc8ab11a"]]),Dg={},Zg={class:"slide"},Fg=m(`<div class="heading">Callback</div><div class="content"><p> Un callback est une fonction passée comme argument à une autre fonction. </p><p>Exemple:</p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">displayer</span>(<span style="color:#996633;">$value</span>) {
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="color:#996633;">$value</span>;
            }

            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">calculator</span>(<span style="color:#996633;">$num1</span>, <span style="color:#996633;">$num2</span>, <span style="color:#996633;">$callbackFunc</span>) {
              <span style="color:#996633;">$sum</span> <span style="color:#333333;">=</span> <span style="color:#996633;">$num1</span> <span style="color:#333333;">+</span> <span style="color:#996633;">$num2</span>;
              <span style="color:#996633;">$callbackFunc</span>(<span style="color:#996633;">$sum</span>);
            }

            calculator(<span style="color:#0000DD;font-weight:bold;">5</span>, <span style="color:#0000DD;font-weight:bold;">5</span>, <span style="background-color:#fff0f0;">&#39;displayer&#39;</span>);
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),Ag=[Fg];function Hg(t,s){return p(),f("div",Zg,Ag)}const Og=Q(Dg,[["render",Hg]]),Ig={class:"slide"},Rg=e("div",{class:"heading"},"Callback - usort()",-1),Bg={class:"content"},jg=e("p",null," Je vous ai montré une interface utilisateur de tri fantaisiste et j'ai expliqué que nous pouvions y parvenir avec la méthode sort(). Bien que ce soit vrai, ce n'était que la moitié de la vérité. ",-1),Ug={__name:"SlidePresentation151",setup(t){return(s,n)=>(p(),f("div",Ig,[Rg,e("div",Bg,[jg,d(Dt)])]))}},Wg={},Vg={class:"slide"},Kg=m(`<div class="heading">Callback - sort()</div><div class="content"><p> Un petit rappel : La méthode sort() trie un tableau par ordre alphabétique. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Orange&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);
            <span style="color:#007020;">sort</span>(<span style="color:#996633;">$fruits</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>);
          <span style="color:#557799;">?&gt;</span></pre></div><br></div>`,2),Jg=[Kg];function Xg(t,s){return p(),f("div",Vg,Jg)}const Yg=Q(Wg,[["render",Xg]]),eb={},tb={class:"slide"},sb=m(`<div class="heading">Callback - usort()</div><div class="content"><p> Nous pouvons avoir plus de contrôle sur la façon dont nous trions lorsque nous utilisons usort() et passons un callback dans la fonction. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>

            <span style="color:#996633;">$fruits</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Banana&quot;</span>, <span style="background-color:#fff0f0;">&quot;Apple&quot;</span>, <span style="background-color:#fff0f0;">&quot;Ananas&quot;</span>, <span style="background-color:#fff0f0;">&quot;Blueberry&quot;</span>, <span style="background-color:#fff0f0;">&quot;Mango&quot;</span>);

            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">compare</span>(<span style="color:#996633;">$a</span>, <span style="color:#996633;">$b</span>) {
                <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#007020;">strcmp</span>(<span style="color:#996633;">$b</span>, <span style="color:#996633;">$a</span>);
            }

            <span style="color:#007020;">usort</span>(<span style="color:#996633;">$fruits</span>, <span style="background-color:#fff0f0;">&#39;compare&#39;</span>);
            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$fruits</span>)
          <span style="color:#557799;">?&gt;</span></pre></div></div>`,2),nb=[sb];function ab(t,s){return p(),f("div",tb,nb)}const ib=Q(eb,[["render",ab]]),ob={},lb={class:"slide"},rb=e("div",{class:"heading"},"Callback - usort()",-1),cb=e("div",{class:"content"},[e("p",null," Mais pourquoi ça marche ? Voici un algorithme de tri écrit à la main. Remarquez-vous des similitudes avec l'exemple précédent ? "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvrw4kpn"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),db=[rb,cb];function pb(t,s){return p(),f("div",lb,db)}const fb=Q(ob,[["render",pb]]),Qb={},ub={class:"slide"},hb=m(`<div class="heading">Callback - array_filter()</div><div class="content"><p> La méthode array_filter() crée un nouveau tableau rempli d&#39;éléments qui passent un test fourni par une fonction. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#557799;">&lt;?php</span>
            <span style="color:#996633;">$ages</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="color:#0000DD;font-weight:bold;">32</span>, <span style="color:#0000DD;font-weight:bold;">33</span>, <span style="color:#0000DD;font-weight:bold;">16</span>, <span style="color:#0000DD;font-weight:bold;">40</span>);
            <span style="color:#996633;">$result</span> <span style="color:#333333;">=</span> <span style="color:#007020;">array_filter</span>(<span style="color:#996633;">$ages</span>, <span style="background-color:#fff0f0;">&#39;checkAdult&#39;</span>);

            <span style="color:#008800;font-weight:bold;">function</span> <span style="color:#0066BB;font-weight:bold;">checkAdult</span>(<span style="color:#996633;">$age</span>) {
            <span style="color:#008800;font-weight:bold;">return</span> <span style="color:#996633;">$age</span> <span style="color:#333333;">&gt;=</span> <span style="color:#0000DD;font-weight:bold;">18</span>;
            }

            <span style="color:#007020;">print_r</span>(<span style="color:#996633;">$result</span>);
          <span style="color:#557799;">?&gt;</span> 
          </pre></div></div>`,2),gb=[hb];function bb(t,s){return p(),f("div",ub,gb)}const mb=Q(Qb,[["render",bb]]),_b={},yb={class:"slide"},vb=e("div",{class:"heading"},"Callback - array_filter()",-1),xb=e("div",{class:"content"},[e("p",null," Jetons un coup d'œil à une fonction d'exemple écrite à la main qui fait la même chose. Pouvez-vous trouver les similarités ? "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yvuvvnec"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),$b=[vb,xb];function kb(t,s){return p(),f("div",yb,$b)}const Sb=Q(_b,[["render",kb]]),Mb="/php-cours/assets/htmlandphp-5843f7a7.svg",Lb={},wb={class:"slide"},Gb=e("div",{class:"heading"},"Intégration de PHP dans les pages Web",-1),zb=e("div",{class:"content"},[e("p",null," La plupart du code PHP est intégré dans des fichiers HTML ou XML. C'est, après tout, la raison pour laquelle il a été créé en premier lieu. "),e("br"),e("img",{src:Mb,style:{height:"60%"}}),e("p",null,[z(" Le traitement de ces documents implique de remplacer chaque morceau de code source PHP par le résultat qu'il produit lorsqu'il est exécuté. "),e("a",{href:"https://onlinephp.io?s=PY9BCsIwEEX3gneYduNGyF5DC7pxWcQLpM3YRDKdkMZFT-RBvJhJS4Rh_ub_x_-y0jzExSOYSK7Z7-RfUems0UaHzcPYGdLRAk8b5gjdrQMfeAyKKik2U3KLEutZL1l9enccVdB4BFKkJqjgesCEIJ4SAsliKCjCDD7JPoDI6dYbDzgYhvrC04vf4QgOc1JjfYa2Kc6N6NUMA7OD70dBm-v4tVQpI9ZxPw%2C%2C&v=8.2.1"}," Exemple")])],-1),Nb=[Gb,zb];function qb(t,s){return p(),f("div",wb,Nb)}const Pb=Q(Lb,[["render",qb]]),Tb="/php-cours/assets/http-3ae79109.svg",Cb={},Eb={class:"slide"},Db=e("div",{class:"heading"},"HTTP Protocol detour",-1),Zb=e("div",{class:"content"},[e("p",null," Les serveurs Web parlent le protocole HTTP, c'est pourquoi ils sont souvent appelés serveurs HTTP. Ces serveurs HTTP stockent les données de l'Internet et fournissent les données lorsqu'elles sont demandées par les clients HTTP. "),e("img",{src:Tb,style:{height:"60%"}})],-1),Fb=[Db,Zb];function Ab(t,s){return p(),f("div",Eb,Fb)}const Hb=Q(Cb,[["render",Ab]]),Ob="/php-cours/assets/httpMIME-ed9fa6e0.svg",Ib={},Rb={class:"slide"},Bb=m('<div class="heading">HTTP Protocol detour - Media Types</div><div class="content"><p> Comme Internet héberge plusieurs milliers de types de données différents, HTTP marque soigneusement chaque objet transporté sur le Web avec une étiquette de format de données appelée type MIME. </p><div class="flex-container"><div style="width:60%;"><p> • Un document texte au format HTML serait étiqueté avec le type text/html </p><p> • Un document de texte ASCII simple serait étiqueté avec le type text/plain </p><p>• Une version JPEG d&#39;une image serait image/jpeg</p><p>• Une image au format GIF serait image/gif</p><p>• Un film Apple QuickTime serait video/quicktime.</p><p> • Une présentation Microsoft PowerPoint serait application/vnd.mspowerpoint </p></div><div><img src="'+Ob+'" style="height:60%;"></div></div></div>',2),jb=[Bb];function Ub(t,s){return p(),f("div",Rb,jb)}const Wb=Q(Ib,[["render",Ub]]),Vb="/php-cours/assets/URL-d330440e.svg",Kb={},Jb={class:"slide"},Xb=e("div",{class:"heading"},"HTTP Protocol detour - URLs",-1),Yb=e("div",{class:"content"},[e("p",null," Les URL décrivent l'emplacement spécifique d'une ressource sur un serveur particulier. Elles vous indiquent exactement comment aller chercher une ressource à partir d'un emplacement précis et fixe. "),e("br"),e("img",{src:Vb,style:{width:"95%"}})],-1),em=[Xb,Yb];function tm(t,s){return p(),f("div",Jb,em)}const sm=Q(Kb,[["render",tm]]),nm={},am={class:"slide"},im=m('<div class="heading">HTTP Protocol detour - Methods</div><div class="content"><p> Le protocole HTTP prend en charge plusieurs commandes de requête différentes, appelées méthodes HTTP. Chaque requête HTTP possède une méthode. La méthode indique au serveur l&#39;action à effectuer </p><br><table><tbody><tr><th>HTTP method</th><th>Description</th></tr><tr><td>GET</td><td>Envoyer une ressource nommée du serveur au client</td></tr><tr><td>POST</td><td> Envoyer les données du client dans une application passerelle serveur </td></tr><tr><td>PUT</td><td> Stocker les données du client dans une ressource serveur nommée </td></tr><tr><td>DELETE</td><td>Supprime la ressource nommée d&#39;un serveur.</td></tr><tr><td>HEAD</td><td> Envoyer uniquement les en-têtes HTTP de la réponse pour la ressource nommée. </td></tr></tbody></table></div>',2),om=[im];function lm(t,s){return p(),f("div",am,om)}const rm=Q(nm,[["render",lm]]),cm={},dm={class:"slide"},pm=m(`<div class="heading">HTTP Protocol detour - Request exemple</div><div class="content"><p> Ici, nous n&#39;envoyons pas de données de requête au serveur car nous récupérons une page HTML simple du serveur. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          GET <span style="color:#333333;">/</span>hello<span style="color:#333333;">.</span>htm HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span>
          User<span style="color:#333333;">-</span>Agent: Mozilla<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">4.0</span> (compatible; MSIE5<span style="color:#333333;">.</span><span style="color:#4400EE;font-weight:bold;">01</span>; Windows NT)
          Host: www<span style="color:#333333;">.</span>tutorialspoint<span style="color:#333333;">.</span>com
          Accept<span style="color:#333333;">-</span>Language: en<span style="color:#333333;">-</span>us
          Accept<span style="color:#333333;">-</span>Encoding: gzip, deflate
          Connection: Keep<span style="color:#333333;">-</span>Alive</pre></div></div>`,2),fm=[pm];function Qm(t,s){return p(),f("div",dm,fm)}const um=Q(cm,[["render",Qm]]),hm={},gm={class:"slide"},bm=m('<div class="heading">HTTP Protocol detour - Status Codes</div><div class="content"><p> Chaque message de réponse HTTP est accompagné d&#39;un code d&#39;état. Ce code d&#39;état est un code numérique à trois chiffres qui indique au client si la demande a abouti ou si d&#39;autres actions sont nécessaires. </p><br><p>Liste abrégée des codes d&#39;état courants</p><table><tbody><tr><th>HTTP status code</th><th>Description</th></tr><tr><td>200</td><td>OK. Le document est retourné correctement.</td></tr><tr><td>404</td><td>Non trouvé. Impossible de trouver cette ressource.</td></tr><tr><td>302</td><td>Rediriger. Allez ailleurs pour obtenir la ressource.</td></tr><tr><td>500</td><td>Internal Server Error</td></tr></tbody></table></div>',2),mm=[bm];function _m(t,s){return p(),f("div",gm,mm)}const ym=Q(hm,[["render",_m]]),vm={},xm={class:"slide"},$m=m(`<div class="heading">HTTP Protocol detour - Response exemple</div><div class="content"><p> Réponse HTTP à une demande de récupération de la page hello.htm sur le serveur web. </p><br><div class="codeblock"><pre style="margin:0;line-height:125%;">          HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span> <span style="color:#0000DD;font-weight:bold;">200</span> OK
          Date: Mon, <span style="color:#0000DD;font-weight:bold;">27</span> Jul <span style="color:#0000DD;font-weight:bold;">2009</span> <span style="color:#0000DD;font-weight:bold;">12</span>:<span style="color:#0000DD;font-weight:bold;">28</span>:<span style="color:#0000DD;font-weight:bold;">53</span> GMT
          Server: Apache<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">2.2</span><span style="color:#333333;">.</span><span style="color:#0000DD;font-weight:bold;">14</span> (Win32)
          Last<span style="color:#333333;">-</span>Modified: Wed, <span style="color:#0000DD;font-weight:bold;">22</span> Jul <span style="color:#0000DD;font-weight:bold;">2009</span> <span style="color:#0000DD;font-weight:bold;">19</span>:<span style="color:#0000DD;font-weight:bold;">15</span>:<span style="color:#0000DD;font-weight:bold;">56</span> GMT
          Content<span style="color:#333333;">-</span>Length: <span style="color:#0000DD;font-weight:bold;">88</span>
          Content<span style="color:#333333;">-</span>Type: text<span style="color:#333333;">/</span>html
          Connection: Closed

          <span style="color:#333333;">&lt;</span>html<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>h1<span style="color:#333333;">&gt;</span>Hello, World<span style="color:#FF0000;background-color:#FFAAAA;">!</span><span style="color:#333333;">&lt;/</span>h1<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>html<span style="color:#333333;">&gt;</span></pre></div></div>`,2),km=[$m];function Sm(t,s){return p(),f("div",xm,km)}const Mm=Q(vm,[["render",Sm]]),Lm={},wm={class:"slide"},Gm=m(`<div class="heading">HTTP Protocol detour - 404 Response exemple</div><div class="content"><p> L&#39;exemple suivant montre un message de réponse HTTP affichant une condition d&#39;erreur lorsque le serveur web n&#39;a pas pu trouver la page demandée </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          HTTP<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">1.1</span> <span style="color:#0000DD;font-weight:bold;">404</span> Not Found
          Date: Sun, <span style="color:#0000DD;font-weight:bold;">18</span> Oct <span style="color:#0000DD;font-weight:bold;">2012</span> <span style="color:#0000DD;font-weight:bold;">10</span>:<span style="color:#0000DD;font-weight:bold;">36</span>:<span style="color:#0000DD;font-weight:bold;">20</span> GMT
          Server: Apache<span style="color:#333333;">/</span><span style="color:#6600EE;font-weight:bold;">2.2</span><span style="color:#333333;">.</span><span style="color:#0000DD;font-weight:bold;">14</span> (Win32)
          Content<span style="color:#333333;">-</span>Length: <span style="color:#0000DD;font-weight:bold;">230</span>
          Connection: Closed
          Content<span style="color:#333333;">-</span>Type: text<span style="color:#333333;">/</span>html; charset<span style="color:#333333;">=</span>iso<span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">8859</span><span style="color:#333333;">-</span><span style="color:#0000DD;font-weight:bold;">1</span>
          <span style="color:#333333;">&lt;</span><span style="color:#FF0000;background-color:#FFAAAA;">!</span>DOCTYPE HTML PUBLIC <span style="background-color:#fff0f0;">&quot;-//IETF//DTD HTML 2.0//EN&quot;</span><span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>html<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>head<span style="color:#333333;">&gt;</span>
            <span style="color:#333333;">&lt;</span>title<span style="color:#333333;">&gt;</span><span style="color:#0000DD;font-weight:bold;">404</span> Not Found<span style="color:#333333;">&lt;/</span>title<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>head<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;</span>body<span style="color:#333333;">&gt;</span>
            <span style="color:#333333;">&lt;</span>p<span style="color:#333333;">&gt;</span>The requested URL <span style="color:#333333;">/</span>t<span style="color:#333333;">.</span>html was <span style="color:#000000;font-weight:bold;">not</span> found on this server<span style="color:#333333;">.&lt;/</span>p<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>body<span style="color:#333333;">&gt;</span>
          <span style="color:#333333;">&lt;/</span>html<span style="color:#333333;">&gt;</span></pre></div></div>`,2),zm=[Gm];function Nm(t,s){return p(),f("div",wm,zm)}const qm=Q(Lm,[["render",Nm]]),Pm="/php-cours/assets/stop-68f3db38.svg",Tm={},Cm={class:"slide"},Em=e("div",{class:"heading"},"HTTP Protocol detour - fin",-1),Dm=e("div",{class:"content"},[e("p",null," Nous n'avons fait qu'effleurer la surface du protocole http. Nous pourrions passer une semaine entière à plonger dans les détails de la pile de protocoles. Cependant, il s'agit d'un cours de PHP et ces informations devraient vous permettre de démarrer. "),e("img",{src:Pm,style:{width:"40%"}})],-1),Zm=[Em,Dm];function Fm(t,s){return p(),f("div",Cm,Zm)}const Am=Q(Tm,[["render",Fm]]),Hm="/php-cours/assets/rabbithole-2cbed037.svg",Om="/php-cours/assets/xampp-seeklogo.com-31512a09.svg",Im={},Rm={class:"slide"},Bm=m('<div class="heading">Web Server detour</div><div class="content"><p> Nous n&#39;avons pas repris le chemin de la programmation. Nous avons précisé que nous pouvons combiner HTML et PHP dans un seul fichier. Je vous ai parlé de HTTP. Voyons maintenant ce qu&#39;est un serveur Web ou, dans une moindre forme, un serveur HTTP. </p><div class="flex-container"><div><img src="'+Hm+'" style="width:90%;"></div><div><br><p> Pour les explications suivantes, je vais utiliser xampp comme exemple. </p><img src="'+Om+'" style="width:20%;"></div></div></div>',2),jm=[Bm];function Um(t,s){return p(),f("div",Rm,jm)}const Wm=Q(Im,[["render",Um]]),Vm="/php-cours/assets/httpxampp-971fa1ed.svg",Km={},Jm={class:"slide"},Xm=e("div",{class:"heading"},"Web Server detour - xampp comme exemple",-1),Ym=e("div",{class:"content"},[e("p",null,[z(" En regardant notre premier aperçu de http, voici ce qui se passe réellement. Un serveur ne peut pas résoudre une requête tout seul. "),e("b",null,"Le serveur ( machine/ordinateur )"),z(" a besoin "),e("b",null,"d'une application ( Serveur Web/serveur HTTP )"),z(" pour résoudre la demande. ")]),e("br"),e("img",{src:Vm,style:{width:"95%"}})],-1),e_=[Xm,Ym];function t_(t,s){return p(),f("div",Jm,e_)}const s_=Q(Km,[["render",t_]]),n_="/php-cours/assets/httpxamppphp-ae0fc7f4.svg",a_={},i_={class:"slide"},o_=e("div",{class:"heading"},"Web Server detour - xampp comme exemple",-1),l_=e("div",{class:"content"},[e("p",null," Ce n'est pas encore toute la vérité pour comprendre ce qui se passe. Nous devons regarder de plus près comment le serveur web résout la demande pour les fichiers PHP. "),e("br"),e("img",{src:n_,style:{width:"60%"}})],-1),r_=[o_,l_];function c_(t,s){return p(),f("div",i_,r_)}const d_=Q(a_,[["render",c_]]),p_={},f_={class:"slide"},Q_=e("div",{class:"heading"},"Web Server detour - Built-in web server",-1),u_=e("div",{class:"content"},[e("p",null,"PHP est livré avec un serveur web intégré depuis la version 5.4."),e("p",{style:{"background-color":"#fa8f8f"}}," Avertissement: Ce serveur web est prévu pour aider dans le développement des applications. Il peut également être utile pour les tests, et pour les démonstrations d'applications qui sont exécutées dans des environnements contrôlés. "),e("br"),e("p",null," C'est une bonne chose puisque nous sommes en train d'apprendre PHP et que cela accélère notre processus. Plus tard dans la formation, vous allez utiliser un serveur web complet. "),e("br"),e("p",null,"Exemple #1 Démarrage du serveur web"),e("div",{class:"codeblock"},[e("pre",{style:{margin:"0","line-height":"125%"}},[z("                  "),e("span",{style:{color:"#996633"}},"$"),z(),e("span",{style:{color:"#996633"}},"cd"),z(),e("span",{style:{color:"#333333"}},"~/"),z(`public_html
                  `),e("span",{style:{color:"#996633"}},"$"),z(),e("span",{style:{color:"#996633"}},"php"),z(),e("span",{style:{color:"#333333"}},"-"),z("S localhost:8000")])]),e("div",{codeblock:""},[e("pre",{style:{margin:"0","line-height":"125%"}},[e("span",{style:{color:"#996633"}},"$"),z(),e("span",{style:{color:"#996633"}},"php"),z(),e("span",{style:{color:"#333333"}},"-"),z("S localhost:8000 "),e("span",{style:{color:"#333333"}},"-"),z("t subfolder"),e("span",{style:{color:"#333333"}},"/")])]),e("p",null,[z(" Tout d'abord, il faut installer "),e("a",{href:"https://www.php.net/downloads.php"},"PHP"),z(" si ce n'est pas déjà fait. ")])],-1),h_=[Q_,u_];function g_(t,s){return p(),f("div",f_,h_)}const b_=Q(p_,[["render",g_]]),m_={},__={class:"slide"},y_=m(`<div class="heading">PHP et HTML - xampp comme exemple</div><div class="content"><p> Puisque nous savons maintenant comment fonctionnent PHP et HTML, examinons <a href="https://onlinephp.io?s=VVFLasMwEN0bfIeJCCSBUu0bRdlmGUjpKhvZnsQGWVL1MailB-o5erFK_oRWCN583psZjdiq0bWPBqH1veRlwR6IosnoOy-Rv7adg3T7CLfOOg_n0xmM1Xcr-hWjEymx6SKrdBMzGnA-SjyQWkttXyw2hL_p4GDQET_gPSCo7IpBKwdBgcEAzTQOoP9DCPcelc8sOacr4X6-wQWbI7VOKtOaZ0ZNbnxMNpTFWlgrIhxgxC25CBk8eQJywjiCkFJn44J2CI7s9mWBdathw4Lkm-TdtEVRt7CdSwkHa5SYh9mVxWdZQDqjhDDZ8SXHaHKuKle5KrL_R6NjcAp_PfrRueGRs8oCTY_IC10WSceP-QU%2C&amp;v=8.2.1">ceci</a>. </p><div class="codeblock" style="font-size:0.86rem;"><pre style="margin:0;line-height:125%;">          &lt;!doctype html&gt;
          &lt;html&gt;
          &lt;head&gt;
          &lt;title&gt;This is my first PHP program!&lt;/title&gt;
          &lt;/head&gt;
          &lt;body&gt;
          &lt;p style=&quot;color:red&quot;&gt;Vous voyez que nous avons un peu de html et que nous augmentons le html basé sur le code php.&lt;/p&gt;
          <span style="color:#557799;">&lt;?php</span> 
          <span style="color:#996633;">$array</span> <span style="color:#333333;">=</span> <span style="color:#008800;font-weight:bold;">array</span>(<span style="background-color:#fff0f0;">&quot;Salut&quot;</span>, <span style="background-color:#fff0f0;">&quot;Hey&quot;</span>, <span style="background-color:#fff0f0;">&quot;Hallo&quot;</span>, <span style="background-color:#fff0f0;">&quot;Servus&quot;</span>);
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&#39;&lt;ul&gt;&#39;</span>;
          <span style="color:#008800;font-weight:bold;">foreach</span> (<span style="color:#996633;">$array</span> <span style="color:#008800;font-weight:bold;">as</span> <span style="color:#996633;">$element</span>)
          {
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;&lt;li&gt;</span><span style="background-color:#eeeeee;">$element</span><span style="background-color:#fff0f0;">&lt;/li&gt;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\n</span><span style="background-color:#fff0f0;">&lt;ul&gt;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\n</span><span style="background-color:#fff0f0;">&quot;</span>;
              <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;&lt;/ul&gt;</span><span style="color:#666666;font-weight:bold;background-color:#fff0f0;">\\n\\n</span><span style="background-color:#fff0f0;">&quot;</span>;
          }
          <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&#39;&lt;/ul&gt;&#39;</span>;
          <span style="color:#557799;">?&gt;</span>&lt;br /&gt;
          &lt;/body&gt;
          &lt;/html&gt;</pre></div></div>`,2),v_=[y_];function x_(t,s){return p(),f("div",__,v_)}const $_=Q(m_,[["render",x_]]),k_="/php-cours/assets/missingVar-fe8ed336.svg",S_={},M_={class:"slide"},L_=e("div",{class:"heading"},"PHP et HTML - exercice var",-1),w_=e("div",{class:"content"},[e("p",null,[z(" la variable $nom est undefined et j'obtiens une erreur dans "),e("a",{href:"https://onlinephp.io?s=bVBLasMwFNwbfIcJFLJp40WWUW1oG5pdvSiBLhX7EQlsSdHHkF6o9By5WCWrHwpZPb03H2bEGiNMWdxM3OIey3bXQirpl5uyaOqyYIunl8fXt3YL4cchHX4n8T5OgHnpB6pZMgJ1QiOZbdDUuMPD85ZVmTBzqz_ZQffn_BLra-rIXWfc1HsdHCZ9pnecAkGl1egwaeXg5GgGGkl5BC8H6cgiKEK0kfwwUCJadIKrY0Ti3mnlSQX0ycjbSOBHWmGvZSczHqzD1US8XrHK_KTaXT5v__GUHufenR7nPJcPHmOgyRpWfVeOzdInfgE%2C&v=8.2.1"},"l'exemple"),z(" de code suivant. Pouvez-vous corriger le code et faire en sorte que votre nom soit affiché ?. ")]),e("img",{src:k_,style:{width:"100%"}})],-1),G_=[L_,w_];function z_(t,s){return p(),f("div",M_,G_)}const N_=Q(S_,[["render",z_]]),q_={},P_={class:"slide"},T_=m('<div class="heading">PHP et HTML - Variables</div><div class="content"><p> La configuration du serveur et les informations relatives aux requêtes (y compris les paramètres de formulaire et les cookies) sont accessibles via des variables dans les scripts PHP. </p><table><tbody><tr><th>Nom variable</th><th>Description</th></tr><tr><td>$_COOKIE</td><td> Contient toutes les valeurs de cookie transmises dans le cadre de la requête </td></tr><tr><td>$_GET</td><td> Contient tous les paramètres qui font partie d&#39;une requête GET </td></tr><tr><td>$_POST</td><td> Contient tous les paramètres qui font partie d&#39;une requête POST </td></tr><tr><td>$_FILES</td><td>Contient des informations sur les fichiers téléchargés</td></tr><tr><td>$_SERVER</td><td>Contient des informations utiles sur le serveur web</td></tr><tr><td>$_ENV</td><td> Contient les valeurs de toutes les variables d&#39;environnement </td></tr></tbody></table></div>',2),C_=[T_];function E_(t,s){return p(),f("div",P_,C_)}const D_=Q(q_,[["render",E_]]),Z_={},F_={class:"slide"},A_=m('<div class="heading">PHP et HTML - Server Information</div><div class="content"><p> La configuration du serveur et les informations relatives aux requêtes (y compris les paramètres de formulaire et les cookies) sont accessibles via des variables dans les scripts PHP. </p><table><tbody><tr><th>Entry</th><th>Description</th></tr><tr><td>PHP_SELF</td><td>Le nom du script actuel, relatif à la racine du document</td></tr><tr><td>SERVER_SOFTWARE</td><td>Une chaîne qui identifie le serveur</td></tr><tr><td>SERVER_NAME</td><td> Le nom d&#39;hôte, l&#39;alias DNS ou l&#39;adresse IP pour les URL auto-référencées </td></tr><tr><td>GATEWAY_INTERFACE</td><td>La version de la norme CGI suivie</td></tr><tr><td>SERVER_PROTOCOL</td><td>Le nom et la révision du protocole de demande</td></tr><tr><td>SERVER_PORT</td><td> Le numéro de port du serveur auquel la requête a été envoyée. </td></tr><tr><td>REQUEST_METHOD</td><td> La méthode utilisée par le client pour récupérer le document </td></tr><tr><td>PATH_INFO</td><td>Éléments supplémentaires du chemin donnés par le client</td></tr><tr><td>PATH_TRANSLATED</td><td> La valeur de PATH_INFO, traduite par le serveur en nom de fichier </td></tr><tr><td>SCRIPT_NAME</td><td> Le chemin d&#39;accès URL à la page actuelle, ce qui est utile pour les scripts auto-référencés. </td></tr><tr><td>QUERY_STRING</td><td> Tout ce qui suit le ? dans l&#39;URL (par exemple, name=Fred+age=35). </td></tr></tbody></table></div>',2),H_=[A_];function O_(t,s){return p(),f("div",F_,H_)}const I_=Q(Z_,[["render",O_]]),R_={},B_={class:"slide"},j_=m('<div class="heading">PHP et HTML - Server Information</div><div class="content"><p> La configuration du serveur et les informations relatives aux requêtes (y compris les paramètres de formulaire et les cookies) sont accessibles via des variables dans les scripts PHP. </p><table><tbody><tr><th>Entry</th><th>Description</th></tr><tr><td>REMOTE_HOST</td><td>Le nom d&#39;hôte de la machine qui a demandé cette page</td></tr><tr><td>REMOTE_ADDR</td><td> Une chaîne contenant l&#39;adresse IP de la machine qui a demandé cette page. </td></tr><tr><td>AUTH_TYPE</td><td> Si la page est protégée par un mot de passe, il s&#39;agit de la méthode d&#39;authentification utilisée pour protéger la page </td></tr><tr><td>REMOTE_USER</td><td> Si la page est protégée par un mot de passe, il s&#39;agit du nom d&#39;utilisateur avec lequel le client s&#39;est s&#39;est authentifié </td></tr><tr><td>CONTENT_TYPE</td><td> Le type de contenu des informations jointes aux requêtes telles que PUT et POST. </td></tr><tr><td>CONTENT_LENGTH</td><td> La longueur des informations jointes aux requêtes telles que PUT et POST </td></tr></tbody></table></div>',2),U_=[j_];function W_(t,s){return p(),f("div",B_,U_)}const V_=Q(R_,[["render",W_]]),t2="/php-cours/assets/php-file-9bab150c.svg",K_={},J_={class:"slide"},X_=m('<div class="heading">PHP et HTML - Exercice</div><div class="content"><p> Nous sommes à la limite de ce que nous pouvons faire dans un codesandbox. Maintenant, nous devons vraiment commencer à programmer avec notre serveur Web pour avoir plus de contrôle. </p><p>A partir de maintenant, nous allons démarrer notre serveur avec:</p><div class="codeblock"><pre style="margin:0;line-height:125%;"><span style="color:#996633;">$</span> <span style="color:#996633;">php</span> <span style="color:#333333;">-</span>S localhost:8000</pre></div><p>téléchargez l&#39;exercice et mettez-le au bon endroit.</p><a href="../assets/exercices/server_values/index.php" download="index.php"><img src="'+t2+'" style="width:10%;">Download php exercice.</a><p><b>Dans l&#39;exercice, je veux que vous affichiez le nom du serveur sur le site.</b></p></div>',2),Y_=[X_];function ey(t,s){return p(),f("div",J_,Y_)}const ty=Q(K_,[["render",ey]]),sy="/php-cours/assets/localhost-212db36c.svg",ny={},ay={class:"slide"},iy=e("div",{class:"heading"},"PHP et HTML - Localhost",-1),oy=e("div",{class:"content"},[e("p",null,` Si vous avez fait l'exercice précédent correctement, il devrait vous montrer "localhost" ou "127.0.0.1". `),e("p",null,[e("b",null,"Mais qu'est-ce que ce localhost ?")]),e("img",{src:sy,style:{width:"70%"}})],-1),ly=[iy,oy];function ry(t,s){return p(),f("div",ay,ly)}const cy=Q(ny,[["render",ry]]),dy={},py={class:"slide"},fy=m('<div class="heading">PHP et HTML - Exercice</div><div class="content"><p> La plupart des serveurs Web créent également des entrées dans le tableau $_SERVER. Les plus courantes sont les deux suivantes. </p><table><tbody><tr><th>Entry</th><th>Description</th></tr><tr><td>HTTP_USER_AGENT</td><td> La chaîne utilisée par le navigateur pour s&#39;identifier (par exemple, &quot;Mozilla/5.0 (Windows 2000 ; U) Opera 6.0 [en]&quot;) </td></tr><tr><td>HTTP_REFERER</td><td> La page dont le navigateur a dit qu&#39;il venait pour arriver à la page actuelle (par exemple, http:// www.example.com/last_page.html) </td></tr></tbody></table><p><b>Compte tenu de ces informations, pouvez-vous m&#39;écrire un site de détection de navigateur ?</b></p><a href="exercices/browser_detection/index.php" download="index.php"><img src="'+t2+'" style="width:10%;">Download php exercice.</a><p><b>exemple de résultat : </b>&quot;Votre browser est :&quot; Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0 </p></div>',2),Qy=[fy];function uy(t,s){return p(),f("div",py,Qy)}const hy=Q(dy,[["render",uy]]),gy={},by={class:"slide"},my=m('<div class="heading">PHP et HTML - Traitement des formulaires</div><div class="content"><p><b>Methods:</b></p><p> il existe deux méthodes HTTP qu&#39;un client peut utiliser pour transmettre des les données du formulaire au serveur : GET et POST. </p><p><b>$_GET:</b></p><p> Une requête GET encode les paramètres du formulaire dans l&#39;URL dans ce que l&#39;on appelle une chaîne de requête. Le texte qui suit le ? est la chaîne de requête. </p><div class="codeblock"><pre style="margin:0;line-height:125%;"><span style="color:#000000;background-color:#fff0ff;">/path/</span>to<span style="color:#333333;">/</span>chunkify<span style="color:#333333;">.</span>php?word<span style="color:#333333;">=</span>despicable<span style="color:#333333;">&amp;</span><span style="color:#007020;">length</span><span style="color:#333333;">=</span><span style="color:#0000DD;font-weight:bold;">3</span></pre></div><br><p><b>$_POST:</b></p><p> Une requête POST transmet les paramètres du formulaire dans le corps de la requête HTTP, laissant l&#39;URL intacte. </p></div>',2),_y=[my];function yy(t,s){return p(),f("div",by,_y)}const vy=Q(gy,[["render",yy]]),xy={},$y={class:"slide"},ky=m(`<div class="heading">PHP et HTML - Traitement des formulaires</div><div class="content"><p> Sur le serveur, nous pouvons déterminer quel type de méthode a été utilisé pour accéder à la ressource. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">                <span style="color:#557799;">&lt;?php</span>
                  <span style="color:#008800;font-weight:bold;">if</span> (<span style="color:#996633;">$_SERVER</span>[<span style="background-color:#fff0f0;">&#39;REQUEST_METHOD&#39;</span>] <span style="color:#333333;">==</span> <span style="background-color:#fff0f0;">&#39;GET&#39;</span>) {
                    <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;Vous avez utilisé une requête get, vous utilisez probablement un navigateur.&quot;</span>;
                  }
                  <span style="color:#008800;font-weight:bold;">else</span> {
                    <span style="color:#008800;font-weight:bold;">echo</span> <span style="background-color:#fff0f0;">&quot;Vous avez probablement essayé d&#39;obtenir du contenu en utilisant la méthode POST. Essayez d&#39;utiliser GET&quot;</span>;
                  }
                <span style="color:#557799;">?&gt;</span></pre></div><br><a href="../assets/exercices/request_method/index.php" download="index.php"><img src="`+t2+'" style="width:10%;">Download php exemple.</a></div>',2),Sy=[ky];function My(t,s){return p(),f("div",$y,Sy)}const Ly=Q(xy,[["render",My]]),wy={},Gy={class:"slide"},zy=m(`<div class="heading">PHP et HTML - Self-Processing Pages</div><div class="content"><p> Une page PHP peut être utilisée à la fois pour générer un formulaire et pour le traiter. </p><p>Pour ce faire, nous vérifions si la méthode est GET ou POST</p><div class="codeblock"><pre style="margin:0;line-height:125%;">                    <span style="color:#996633;">$_SERVER</span>[<span style="background-color:#fff0f0;">&#39;REQUEST_METHOD&#39;</span>] <span style="color:#333333;">==</span> <span style="background-color:#fff0f0;">&#39;GET&#39;</span>
                    <span style="color:#996633;">$_SERVER</span>[<span style="background-color:#fff0f0;">&#39;REQUEST_METHOD&#39;</span>] <span style="color:#333333;">==</span> <span style="background-color:#fff0f0;">&#39;POST&#39;</span></pre></div><br><p>il y a une troisième commande qui nous aide à créer le formulair.</p><div class="codeblock"><pre style="margin:0;line-height:125%;">                <span style="color:#996633;">$_SERVER</span>[<span style="background-color:#fff0f0;">&#39;PHP_SELF&#39;</span>] <span style="color:#888888;">// est transformée en /index.php</span></pre></div><br><a href="../assets/exercices/self_processing/index.php" download="index.php"><img src="`+t2+'" style="width:10%;">Download php exemple.</a></div>',2),Ny=[zy];function qy(t,s){return p(),f("div",Gy,Ny)}const Py=Q(wy,[["render",qy]]),t0="/php-cours/assets/html-file-64f84934.svg",Ty={},Cy={class:"slide"},Ey=m(`<div class="heading">PHP et HTML - traitement séparé</div><div class="content"><p> Nous pouvons écrire du HTML et afficher un formulaire et traiter le formulaire soumis avec un fichier php dédié. </p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#007700;">&lt;html&gt;</span>
          <span style="color:#007700;">&lt;head&gt;&lt;title&gt;</span>Fragment Form<span style="color:#007700;">&lt;/title&gt;&lt;/head&gt;</span>
          <span style="color:#007700;">&lt;body&gt;</span>
            <span style="color:#007700;">&lt;form</span> <span style="color:#0000CC;">action=</span><span style="background-color:#fff0f0;">&quot;chunkify.php&quot;</span> <span style="color:#0000CC;">method=</span><span style="background-color:#fff0f0;">&quot;POST&quot;</span><span style="color:#007700;">&gt;</span>
              Entrez un mot : <span style="color:#007700;">&lt;input</span> <span style="color:#0000CC;">type=</span><span style="background-color:#fff0f0;">&quot;text&quot;</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;word&quot;</span> <span style="color:#007700;">/&gt;&lt;br</span> <span style="color:#007700;">/&gt;</span>
              Quelle doit être la longueur des morceaux ?
              <span style="color:#007700;">&lt;input</span> <span style="color:#0000CC;">type=</span><span style="background-color:#fff0f0;">&quot;text&quot;</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;number&quot;</span> <span style="color:#007700;">/&gt;&lt;br</span> <span style="color:#007700;">/&gt;</span>
              <span style="color:#007700;">&lt;input</span> <span style="color:#0000CC;">type=</span><span style="background-color:#fff0f0;">&quot;submit&quot;</span> <span style="color:#0000CC;">value=</span><span style="background-color:#fff0f0;">&quot;Fragment!&quot;</span><span style="color:#007700;">&gt;</span>
            <span style="color:#007700;">&lt;/form&gt;</span>
          <span style="color:#007700;">&lt;/body&gt;</span>
          <span style="color:#007700;">&lt;/html&gt;</span></pre></div><br><a href="../assets/exercices/seperate_processing/chunkify.php" download="chunkify.php"><img src="`+t2+'" style="width:5%;">Download php exemple.</a><a href="../assets/exercices/seperate_processing/index.html" download="index.html"><img src="'+t0+'" style="width:5%;">Download html exemple.</a></div>',2),Dy=[Ey];function Zy(t,s){return p(),f("div",Cy,Dy)}const Fy=Q(Ty,[["render",Zy]]),Ay={},Hy={class:"slide"},Oy=m(`<div class="heading">PHP et HTML - Multivalued Parameters</div><div class="content"><p> Pour que PHP reconnaisse les valeurs multiples que le navigateur transmet à un script de traitement de formulaire, vous devez faire en sorte que le nom du champ dans le formulaire HTML se termine par []. </p><p><b>Exemple: </b></p><div class="codeblock"><pre style="margin:0;line-height:125%;">          <span style="color:#007700;">&lt;select</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;languages[]&quot;</span><span style="color:#007700;">&gt;</span>
            <span style="color:#007700;">&lt;option</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;c&quot;</span><span style="color:#007700;">&gt;</span>C<span style="color:#007700;">&lt;/input&gt;</span>
            <span style="color:#007700;">&lt;option</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;c++&quot;</span><span style="color:#007700;">&gt;</span>C++<span style="color:#007700;">&lt;/input&gt;</span>
            <span style="color:#007700;">&lt;option</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;php&quot;</span><span style="color:#007700;">&gt;</span>PHP<span style="color:#007700;">&lt;/input&gt;</span>
            <span style="color:#007700;">&lt;option</span> <span style="color:#0000CC;">name=</span><span style="background-color:#fff0f0;">&quot;perl&quot;</span><span style="color:#007700;">&gt;</span>Perl<span style="color:#007700;">&lt;/input&gt;</span>
          <span style="color:#007700;">&lt;/select&gt;</span></pre></div><br><a href="../assets/exercices/multivalued_processing/personality.php" download="personality.php"><img src="`+t2+'" style="width:5%;">Download php exemple.</a><a href="../assets/exercices/multivalued_processing/index.html" download="index.html"><img src="'+t0+'" style="width:5%;">Download html exemple.</a></div>',2),Iy=[Oy];function Ry(t,s){return p(),f("div",Hy,Iy)}const By=Q(Ay,[["render",Ry]]),jy="/php-cours/assets/formvalidation-966e0b07.svg",Uy={},Wy={class:"slide"},Vy=e("div",{class:"heading"},"PHP et HTML - Form Validation",-1),Ky=e("div",{class:"content"},[e("p",null," Lorsque vous autorisez les utilisateurs à saisir des données, vous devez généralement valider ces données avant de les utiliser ou de les stocker pour une utilisation ultérieure. "),e("p",null," Nous effectuons généralement la validation des formulaires du côté du client et du serveur. "),e("br"),e("img",{src:jy,style:{width:"90%"}})],-1),Jy=[Vy,Ky];function Xy(t,s){return p(),f("div",Wy,Jy)}const Yy=Q(Uy,[["render",Xy]]),ev={},tv={class:"slide"},sv=e("div",{class:"heading"},"HTML 5 - client form validation",-1),nv=e("div",{class:"content"},[e("p",null," L'élément de formulaire est arrivé avec HTML5. Avant cela, nous devions improviser un peu plus. Exemple: "),e("div",{class:"iFrame-container","data-link":"https://codesandbox.io/embed/old-form-55878x?fontsize=14&hidenavigation=1&theme=dark"},[e("iframe",{src:"lightswitch.html",style:{width:"100%",height:"90%",border:"0","border-radius":"4px",overflow:"hidden"},title:"old Form",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})])],-1),av=[sv,nv];function iv(t,s){return p(),f("div",tv,av)}const ov=Q(ev,[["render",iv]]),lv={},rv={class:"slide"},cv=e("div",{class:"heading"},"HTML 5 - client form validation",-1),dv=e("div",{class:"content"},[e("p",null," Remarquez que nous n'avons pas besoin de javascript en HTML5 pour valider les entrées. Cool "),e("div",{class:"iFrame-container","data-link":"https://codesandbox.io/embed/new-form-p5ufxk?fontsize=14&hidenavigation=1&theme=dark"},[e("iframe",{src:"lightswitch.html",style:{width:"100%",height:"90%",border:"0","border-radius":"4px",overflow:"hidden"},title:"old Form",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})])],-1),pv=[cv,dv];function fv(t,s){return p(),f("div",rv,pv)}const Qv=Q(lv,[["render",fv]]),uv={},hv={class:"slide"},gv=e("div",{class:"heading"},"HTML 5 - Client form validation",-1),bv=e("div",{class:"content"},[e("p",null,` Parfois, nous n'avons même pas besoin d'utiliser l'attribut "patterns", car le HTML5 propose des types. `),e("div",{class:"iFrame-container","data-link":"https://codesandbox.io/embed/new-form-more-complete-gxh53d?fontsize=14&hidenavigation=1&theme=dark"},[e("iframe",{src:"lightswitch.html",style:{width:"100%",height:"90%",border:"0","border-radius":"4px",overflow:"hidden"},title:"old Form",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"})])],-1),mv=[gv,bv];function _v(t,s){return p(),f("div",hv,mv)}const yv=Q(uv,[["render",_v]]),vv="/php-cours/assets/attack-9583213b.svg",xv={},$v={class:"slide"},kv=e("div",{class:"heading"},"PHP - Server Form Validation",-1),Sv=e("div",{class:"content"},[e("p",null,[e("b",null,"Mais pourquoi devrions-nous valider à nouveau le formulaire côté serveur si nous l'avons déjà fait en front-ent ?")]),e("p",null," Reponse: La validation du formulaire côté client a pour but d'aider l'utilisateur à saisir des options valides et de ne pas déranger le serveur avec une requête invalide. "),e("div",{class:"flex-container"},[e("div",null,[e("br"),e("p",null," La validation côté serveur vise à empêcher toute saisie malveillante ou erronée de la part d'un utilisateur qui n'utilise pas le formulaire HTML. ")]),e("div",null,[e("img",{src:vv,style:{width:"100%"}})])]),e("br")],-1),Mv=[kv,Sv];function Lv(t,s){return p(),f("div",$v,Mv)}const wv=Q(xv,[["render",Lv]]),Gv={},zv={class:"slide"},Nv=e("div",{class:"heading"},"PHP - Server Form Validation - empty()",-1),qv=e("div",{class:"content"},[e("p",null," La première fonction qui nous aide à valider les entrées est la fonction empty(). De cette façon, nous pouvons déjà vérifier si les champs obligatoires sont remplis. "),e("iframe",{frameborder:"0",height:"90%",src:"https://onecompiler.com/embed/php/3yw32awhn",width:"100%"})],-1),Pv=[Nv,qv];function Tv(t,s){return p(),f("div",zv,Pv)}const Cv=Q(Gv,[["render",Tv]]),Ev={},Dv={class:"slide"},Zv=e("div",{class:"heading"},"PHP - Server Form Validation - filter_var()",-1),Fv=e("div",{class:"content"},[e("p",null,"renvoie les données filtrées, ou false si le filtre échoue."),e("iframe",{frameborder:"0",height:"95%",src:"https://onecompiler.com/embed/php/3yw2ue5cb",width:"100%"})],-1),Av=[Zv,Fv];function Hv(t,s){return p(),f("div",Dv,Av)}const Ov=Q(Ev,[["render",Hv]]),Iv={},Rv={class:"slide"},Bv=e("div",{class:"heading"},"PHP - Server Form Validation - filter_var()",-1),jv=e("div",{class:"content"},[e("p",null,[z(" Pouvez-vous vérifier les variables du script avec la fonction filter_var en tenant compte des "),e("a",{href:"https://www.php.net/manual/en/filter.filters.validate.php"},"filtres de validation"),z("? ")]),e("iframe",{frameborder:"0",height:"90%",src:"https://onecompiler.com/embed/php/3yw2v2w6f",width:"100%"})],-1),Uv=[Bv,jv];function Wv(t,s){return p(),f("div",Rv,Uv)}const Vv=Q(Iv,[["render",Wv]]),Kv={},Jv={class:"slide"},Xv=e("div",{class:"heading"},"PHP - Server Form Validation - preg_match",-1),Yv=e("div",{class:"content"},[e("p",null,[z(" On ne peut pas tout vérifier avec la fonction filter_var. Pour cela, nous devons utiliser preg_match avec un "),e("a",{href:"https://projects.lukehaas.me/regexhub/"},"pattern regex"),z(". ")]),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yw2zb6ac"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),ex=[Xv,Yv];function tx(t,s){return p(),f("div",Jv,ex)}const sx=Q(Kv,[["render",tx]]),nx={},ax={class:"slide"},ix=e("div",{class:"heading"}," PHP - Server Form Validation - trim, stripslashes, htmlspecialchars ",-1),ox=e("div",{class:"content"},[e("p",null," Pour assainir les chaînes de caractères, la fonction suivante est très utile. "),e("div",{class:"iFrame-container","data-link":"https://onecompiler.com/embed/php/3yw58zptg"},[e("iframe",{src:"lightswitch.html",width:"100%",height:"95%",frameborder:"0",marginheight:"0",marginwidth:"0"},"Wird geladen…")])],-1),lx=[ix,ox];function rx(t,s){return p(),f("div",ax,lx)}const cx=Q(nx,[["render",rx]]),dx={},px={class:"slide"},fx=m('<div class="heading">PHP - Server Form Validation - exercice</div><div class="content"><p> Vérifiez du côté du serveur PHP si les valeurs d&#39;entrée sont non vides et dans une syntaxe correcte. Bonus : une fois terminé, adaptez le HTML pour vérifier déjà sur le front-end si l&#39;entrée est correcte. </p><p> Le HTML est déjà complet et le script PHP est en partie fait. Ajoutez quelques vérifications empy(), filter_var() et preg_match(). </p><a href="../assets/exercices/contact_form/contact.php" download="contact.php"><img src="'+t2+'" style="width:5%;">Download php exemple.</a><a href="../assets/exercices/contact_form/index.html" download="index.html"><img src="'+t0+'" style="width:5%;">Download html exemple.</a></div>',2),Qx=[fx];function ux(t,s){return p(),f("div",px,Qx)}const hx=Q(dx,[["render",ux]]),gx={class:"container"},bx=e("img",{src:mn,class:"logo"},null,-1),mx={id:"presentation-area"},_x={class:"presentation"},yx=m('<section class="counter"><input type="number" id="index" name="index" min="1" max="194" value="1" style="width:40%;"> of 194 </section><section class="navigation"><button id="full-screen" class="btn-screen show"><span><b>⛶</b></span></button><button id="small-screen" class="btn-screen"><span><b>✖</b></span></button><button id="left-btn" class="btn"><span>❮</span></button><button id="right-btn" class="btn"><span>❯</span></button></section>',2),vx=e("footer",null,[e("p",null,"Created by Kilian Schropp. ©C2LR 2023 ")],-1),xx={__name:"App",setup(t){return(s,n)=>(p(),f("body",null,[e("div",gx,[bx,e("div",mx,[e("section",_x,[d(kn),d(zn),d(Zn),d(Un),d(e6),d(c6),d(_6),d(L6),d(T6),d(H6),d(V6),d(n3),d(p3),d(b3),d(k3),d(z3),d(E3),d(R3),d(X3),d(oa),d(fa),d(ma),d(Sa),d(Na),d(Za),d(Ba),d(Ja),d(a8),d(p8),d(_8),d(M8),d(A8),d(U8),d(Y8),d(i4),d(p4),d(b4),d($4),d(z4),d(D4),d(I4),d(V4),d(si),d(ri),d(Qi),d(yi),d(Li),d(Ti),d(Hi),d(Wi),d(to),d(co),d(bo),d($o),d(zo),d(Do),d(Wo),d(sl),d(cl),d(gl),d($l),d(zl),d(Zl),d(Bl),d(Xl),d(ir),d(pr),d(_r),d(Sr),d(Pr),d(Ar),d(Wr),d(e9),d(r9),d(h9),d(v9),d(w9),d(C9),d(O9),d(V9),d(s7),d(c7),d(g7),d(x7),d(z7),d(E7),d(I7),d(V7),d(nc),d(dc),d(bc),d(kc),d(zc),d(Dc),d(Rc),d(Kc),d(nd),d(dd),d(gd),d($d),d(zd),d(Dd),d(Rd),d(Kd),d(np),d(cp),d(gp),d($p),d(Gp),d(Ep),d(Ip),d(Kp),d(nf),d(pf),d(bf),d(kf),d(Nf),d(Zf),d(Bf),d(Jf),d(aQ),d(dQ),d(bQ),d(SQ),d(NQ),d(DQ),d(RQ),d(KQ),d(nu),d(cu),d(hu),d(vu),d(Su),d(Nu),d(Zu),d(Ru),d(Ju),d(ah),d(ph),d(bh),d(Sh),d(Oh),d(Wh),d(eg),d(lg),d(Qg),d(yg),d(Mg),d(Eg),d(Og),d(Ug),d(Yg),d(ib),d(fb),d(mb),d(Sb),d(Pb),d(Hb),d(Wb),d(sm),d(rm),d(um),d(ym),d(Mm),d(qm),d(Am),d(Wm),d(s_),d(d_),d(b_),d($_),d(N_),d(D_),d(I_),d(V_),d(ty),d(cy),d(hy),d(vy),d(Ly),d(Py),d(Fy),d(By),d(Yy),d(ov),d(Qv),d(yv),d(wv),d(Cv),d(Ov),d(Vv),d(sx),d(cx),d(hx)]),yx])]),vx]))}};gn(xx).mount("#app");let s0=document.querySelectorAll(".slide"),f1=document.querySelector(".slide.show");var R2=document.querySelector("#index"),Ge=document.querySelector("#left-btn"),ze=document.querySelector("#right-btn");let Ne=document.querySelector("#presentation-area");var n0=document.querySelector("#full-screen"),a0=document.querySelector("#small-screen"),se=1,i0=0;ne();function ne(){Lx(),i0=s0.length,zx(),$x(),kx()}Ge.addEventListener("click",Sx);ze.addEventListener("click",Mx);R2.addEventListener("change",Nx);n0.addEventListener("click",wx);a0.addEventListener("click",Gx);function $x(){se==1?Ge.classList.remove("show"):Ge.classList.add("show")}function kx(){se===i0?ze.classList.remove("show"):ze.classList.add("show")}function Sx(){var t=f1;f1=f1.previousElementSibling,t.classList.remove("show"),f1.classList.add("show"),ne(),o0(f1)}function Mx(){var t=f1;f1=f1.nextElementSibling,t.classList.remove("show"),f1.classList.add("show"),ne(),o0(f1)}function Lx(){let t=0;s0.forEach(s=>{t++,s.classList.contains("show")&&(se=t)})}function wx(){Ne.classList.add("full-screen"),n0.classList.remove("show"),a0.classList.add("show")}function Gx(){Ne.classList.remove("full-screen"),n0.classList.add("show"),a0.classList.remove("show"),Ne.style.fontSize="unset"}function zx(){R2.value=se,R2.innerText=` of ${i0}`}function Nx(){var t=f1;f1=s0[R2.value-1],t.classList.remove("show"),f1.classList.add("show"),ne(),o0(f1)}function o0(t){const s=t.getElementsByTagName("iframe")[0];if(s!=null){const n=s.parentElement;console.log(s.src),n!==void 0&&n.hasAttribute("data-link")&&s.src.includes("lightswitch")&&s.setAttribute("src",n.dataset.link)}}
